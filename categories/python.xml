<?xml version='1.0' encoding='utf-8'?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Cosmoscalibur (Publicaciones sobre python)</title><link>https://www.cosmoscalibur.com/</link><description/><atom:link href="https://www.cosmoscalibur.com/categories/python.xml" rel="self" type="application/rss+xml"/><language>es</language><copyright>Contents © 2020 &lt;a href="mailto:cosmoscalibur@gmail.com"&gt;Edward Villegas Pulgarin&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 27 May 2020 20:55:17 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Calcular distancia geodésica con Python</title><link>https://www.cosmoscalibur.com/blog/calcular-distancia-geodesica-con-python/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Aunque una de las cosas que más ha rondado en mi desarrollo académico y laboral es la programación, y buena parte de los años en ello con Python, nunca había realizado una entrada al respecto en el blog (lo más cercano ha sido una entrada sobre &lt;a href="https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/"&gt;Crear documentación de un proyecto Python con Sphinx.&lt;/a&gt; y &lt;a href="https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/"&gt;Crear contenedor Docker aplicación GUI - EALite&lt;/a&gt;).  &lt;/p&gt;
&lt;p&gt;A partir de ahora, y usando &lt;em&gt;notebooks&lt;/em&gt; compartiré algunas entradas relacionadas con programación o algunas bibliotecas específicas. En esta ocasión, me interesa compartirles como calcular la distancia geodésica entre dos lugares con GeoPy (una biblioteca Python), una de las tantas cosas que por motivos laborales he necesitado en mi exploración con proyectos con sistemas de información geográfica y ruteos.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;Geoide y geodésicas&lt;/h2&gt;
&lt;p&gt;¿Habían escuchado antes "geoide" y "geodésica"? Bueno, resulta que el concepto de distancia entre puntos es dependiente de la geometría sobre la cual sea válido el desplazamiento. Así, si ubicamos dos puntos sobre la superficie de la Tierra, uno podría pensar en tomar como distancia la separación en línea recta entre los dos puntos atravesando el interior de la Tierra, y sí, eso es una distancia pero es impráctica porque nadie por ahora atravesará el interior para desplazarse. A esta distancia la conocemos como distancia euclideana (supone una geometría plana, como nos enseñan en el colegio y para muchos en universidad, donde Pitágoras funciona para esta cuenta).  &lt;/p&gt;
&lt;p&gt;Pues bien, si la distancia implica una restricción para moverse sobre una geometría en particular, las líneas rectas no son los caminos más cortos (sobre el cual se define la distancia) sino un tipo de líneas que llamaremos geodésicas. Así, la distancia sobre la superficie de la Tierra se mide sobre la geodésica que une los dos puntos de interés y a esa forma superficie de referencia de la Tierra es llamada geoide.&lt;/p&gt;
&lt;h2&gt;Cálculo de distancia&lt;/h2&gt;
&lt;p&gt;El cálculo de la distancia sobre la Tierra debe hacerse suponiendo alguna condición sobre la geometría de la Tierra. Esto es por ejemplo, suponer una esfera, un elipsoide o un plano (y no, la Tierra no es plana, pero para distancias cortas es una buena aproximación). Estas suposiciones ya vienen incluidas y pueden ser parametrizadas en las bibliotecas de cómputo.  &lt;/p&gt;
&lt;p&gt;Para el cómputo de geodésicas en Python, en buena medida todo se resume en &lt;a href="https://geographiclib.sourceforge.io/"&gt;GeographicLib&lt;/a&gt;. Tanto &lt;a href="https://gdal.org/"&gt;GDAL&lt;/a&gt;, &lt;a href="https://pyproj4.github.io/pyproj/stable/#"&gt;PyProj&lt;/a&gt; y &lt;a href="https://geopy.readthedocs.io/en/stable/#"&gt;GeoPy&lt;/a&gt; recurren a la implementación de GeographicLib como método por defecto de cálculo.  &lt;/p&gt;
&lt;p&gt;Para referencia, usaremos GeoPy (incluido también en GeoPandas) y que dispone de 3 métodos de cálculo de distancia que discutiremos.&lt;/p&gt;
&lt;p&gt;Primer paso vamos a instalar GeoPy. Para este fin usaremos el gestor de paquetes &lt;em&gt;conda&lt;/em&gt; de Anaconda, pero puedes usar &lt;em&gt;pip&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;%%bash
conda install -c conda-forge geopy
&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Collecting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_repodata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Solving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Plan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;added&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;updated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;specs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;NEW&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;INSTALLED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;geographiclib&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;noarch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;geographiclib&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.50&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py_0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;noarch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.21.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py_0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;UPDATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;certificates&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;certificates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2020.1.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::ca-certificates-2020.4.5.1-hecc5488_0&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SUPERSEDED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;higher&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;certifi&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;certifi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2020.4.5.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py37_0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::certifi-2020.4.5.1-py37hc8dfbb8_0&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;openssl&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;openssl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1.1&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h7b6447c_0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::openssl-1.1.1g-h516909a_0&lt;/span&gt;


&lt;span class="n"&gt;Proceed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;]/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="n"&gt;Preparing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Verifying&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Executing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Ahora, importamos el módulo de &lt;a href="https://geopy.readthedocs.io/en/stable/#module-geopy.distance"&gt;distancia de GeoPy&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;geopy.distance&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Para referencia usaremos las coordenadas de Medellín (MDE) y Envigado (ENV) según son ubicadas por Google Maps.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;6.2443695&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;75.6512527&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;6.1663544&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;75.5994392&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;Para efectos de comparación, no solo presentaré la forma de uso de los métodos sino las distancias y los tiempos de ejecución.&lt;/p&gt;
&lt;h3&gt;Método de círculo mayor&lt;/h3&gt;
&lt;p&gt;El &lt;a href="https://en.wikipedia.org/wiki/Great-circle_distance"&gt;método de círculo mayor&lt;/a&gt; consiste en considerar la Tierra como una esfera perfecta de radio 6371.009 km (para el sistema de coordenadas geográficas &lt;a href="https://en.wikipedia.org/wiki/World_Geodetic_System#WGS84"&gt;WGS-84&lt;/a&gt;). Con esta aproximación se puede tener un error máximo del 0.5%. A pesar del error, es un método de cálculo directo (es una fórmula para reemplazar) y por ende puede obtener un resultado muy rápido y tiene asegurado entregar siempre una aproximación.  &lt;/p&gt;
&lt;p&gt;Es llamado círculo mayor porque en una esfera sabemos que el camino más corto es el descrito por el círculo de mayor radio sobre la esfera que contenga a los dos puntos.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;great_circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;great_circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;.&lt;span class="mi"&gt;9&lt;/span&gt; µ&lt;span class="nv"&gt;s&lt;/span&gt; ± &lt;span class="mi"&gt;238&lt;/span&gt; &lt;span class="nv"&gt;ns&lt;/span&gt; &lt;span class="nv"&gt;per&lt;/span&gt; &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;mean&lt;/span&gt; ± &lt;span class="nv"&gt;std&lt;/span&gt;. &lt;span class="nv"&gt;dev&lt;/span&gt;. &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nv"&gt;runs&lt;/span&gt;, &lt;span class="mi"&gt;100000&lt;/span&gt; &lt;span class="nv"&gt;loops&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;.&lt;span class="mi"&gt;395180481810051&lt;/span&gt; &lt;span class="nv"&gt;km&lt;/span&gt;
&lt;/pre&gt;


&lt;h3&gt;Método de Vincenty&lt;/h3&gt;
&lt;p&gt;El &lt;a href="https://en.wikipedia.org/wiki/Vincenty%27s_formulae"&gt;método de Vincenty&lt;/a&gt; es un método iterativo para la aproximación de la distancia geodésica sobre un elipsoide, en este caso, el elipsoide de referencia del sistema coordenado WGS-84. Este método presenta problemas de convergencia entre puntos antinodales y hoy su uso no es aconsejado (GeoPy aún lo presenta en la versión 1.21 pero está marcado como obsoleto).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vincenty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vincenty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;python3&lt;/span&gt;.&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ipykernel_launcher&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;:&lt;span class="mi"&gt;1&lt;/span&gt;: &lt;span class="nv"&gt;DeprecationWarning&lt;/span&gt;: &lt;span class="nv"&gt;Vincenty&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;deprecated&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;going&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;removed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;geopy&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;. &lt;span class="nv"&gt;Use&lt;/span&gt; `&lt;span class="nv"&gt;geopy&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;.&lt;span class="nv"&gt;geodesic&lt;/span&gt;` &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; `&lt;span class="nv"&gt;geopy&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;`&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;instead&lt;/span&gt;, &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;more&lt;/span&gt; &lt;span class="nv"&gt;accurate&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;always&lt;/span&gt; &lt;span class="nv"&gt;converges&lt;/span&gt;.
  &lt;span class="s2"&gt;"""&lt;/span&gt;&lt;span class="s"&gt;Entry point for launching an IPython kernel.&lt;/span&gt;


&lt;span class="mi"&gt;29&lt;/span&gt;.&lt;span class="mi"&gt;7&lt;/span&gt; µ&lt;span class="nv"&gt;s&lt;/span&gt; ± &lt;span class="mi"&gt;964&lt;/span&gt; &lt;span class="nv"&gt;ns&lt;/span&gt; &lt;span class="nv"&gt;per&lt;/span&gt; &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;mean&lt;/span&gt; ± &lt;span class="nv"&gt;std&lt;/span&gt;. &lt;span class="nv"&gt;dev&lt;/span&gt;. &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nv"&gt;runs&lt;/span&gt;, &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="nv"&gt;loops&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;.&lt;span class="mi"&gt;359310623929353&lt;/span&gt; &lt;span class="nv"&gt;km&lt;/span&gt;


&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;python3&lt;/span&gt;.&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;ipykernel_launcher&lt;/span&gt;.&lt;span class="nv"&gt;py&lt;/span&gt;:&lt;span class="mi"&gt;2&lt;/span&gt;: &lt;span class="nv"&gt;DeprecationWarning&lt;/span&gt;: &lt;span class="nv"&gt;Vincenty&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;deprecated&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;going&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;be&lt;/span&gt; &lt;span class="nv"&gt;removed&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;geopy&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;.&lt;span class="mi"&gt;0&lt;/span&gt;. &lt;span class="nv"&gt;Use&lt;/span&gt; `&lt;span class="nv"&gt;geopy&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;.&lt;span class="nv"&gt;geodesic&lt;/span&gt;` &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;or&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;default&lt;/span&gt; `&lt;span class="nv"&gt;geopy&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;.&lt;span class="nv"&gt;distance&lt;/span&gt;`&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;instead&lt;/span&gt;, &lt;span class="nv"&gt;which&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;more&lt;/span&gt; &lt;span class="nv"&gt;accurate&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;always&lt;/span&gt; &lt;span class="nv"&gt;converges&lt;/span&gt;.
&lt;/pre&gt;


&lt;h3&gt;Método de Karney&lt;/h3&gt;
&lt;p&gt;Este método al igual que el propuesto por Vincenty, es iterativo pero se asegura que siempre converge y con menor margen de error que Vincenty. Fue &lt;a href="https://link.springer.com/article/10.1007/s00190-012-0578-z"&gt;propuesto en 2013&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;La implementación disponible en GeoPy corresponde a la implementación C++ de GeographicLib.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="mi"&gt;231&lt;/span&gt; µ&lt;span class="nv"&gt;s&lt;/span&gt; ± &lt;span class="mi"&gt;7&lt;/span&gt;.&lt;span class="mi"&gt;42&lt;/span&gt; µ&lt;span class="nv"&gt;s&lt;/span&gt; &lt;span class="nv"&gt;per&lt;/span&gt; &lt;span class="k"&gt;loop&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;mean&lt;/span&gt; ± &lt;span class="nv"&gt;std&lt;/span&gt;. &lt;span class="nv"&gt;dev&lt;/span&gt;. &lt;span class="nv"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nv"&gt;runs&lt;/span&gt;, &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="nv"&gt;loops&lt;/span&gt; &lt;span class="nv"&gt;each&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;.&lt;span class="mi"&gt;35931062438337&lt;/span&gt; &lt;span class="nv"&gt;km&lt;/span&gt;
&lt;/pre&gt;


&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;amp;OneJS=1&amp;amp;Operation=GetAdHtml&amp;amp;MarketPlace=US&amp;amp;source=ss&amp;amp;ref=as_ss_li_til&amp;amp;ad_type=product_link&amp;amp;tracking_id=cosmoscalibur-20&amp;amp;language=es_US&amp;amp;marketplace=amazon&amp;amp;region=US&amp;amp;placement=B079Q47BDK&amp;amp;asins=B079Q47BDK&amp;amp;linkId=27f9b2ded3fc9aa23cd85e1f292c8b4e&amp;amp;show_border=true&amp;amp;link_opens_in_new_window=true"&gt;&lt;/iframe&gt;

&lt;h2&gt;Consideraciones&lt;/h2&gt;
&lt;p&gt;La interfaz incluida en GeographicLib no me pareció amigable, por lo cual no la recomiendo pero su uso asegura incluir solo las funciones especializadas para el tratamiento de la distancia geodésica. GeoPy incluye más utilidades pero posee una interfaz más simple. GDAL y PyProj poseen muchas más funcionalidades, por lo cual representa un aumento de almacenamiento innecesario. Esto, finalmente, para recomendar GeoPy para esta tarea (respecto a GeographicLib, aún te dará la opción de la aproximación de círculo mayor).  &lt;/p&gt;
&lt;p&gt;Respecto al método, la divergencia de Vincenty para casos antinodales y la convergencia lenta en otros casos reportados, al igual que su marcado de obsolescencia en las implementaciones nos lleva a omitirlo de cualquier consideración futura. La aproximación de Karney posee el menor error de las 3 aproximaciones pero su tiempo de cómputo es alto si se considera la necesidad de calcular entre una gran cantidad de pares de puntos.  &lt;/p&gt;
&lt;p&gt;Para mi caso de interés (problemas de ruteo), la distancia geodésica solo se usa como un primer aproximado para reducir el número de pares sobre los cuales se cálcula la distancia sobre la red vial (de lo cual hablaré en una próxima entrada) y por ende su valor no importa que tenga gran exactitud pero que sea decente para distancias cortas (se busca eliminar el cálculo de distancias largas sobre la red vial).  &lt;/p&gt;
&lt;p&gt;Así, si la necesidad es de exactitud te recomiendo la aproximación de Karney pero si es solo una primera aproximación buscando menor tiempo de cómputo, la recomendación es el círculo mayor.&lt;/p&gt;&lt;/div&gt;</description><category>distancia geodésica</category><category>geoide</category><category>geopy</category><category>gis</category><category>python</category><guid>https://www.cosmoscalibur.com/blog/calcular-distancia-geodesica-con-python/</guid><pubDate>Sun, 10 May 2020 23:35:00 GMT</pubDate></item><item><title>Crear documentación de un proyecto Python con Sphinx.</title><link>https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Sin duda, una etapa importante en cualquier proyecto de desarrollo (y no solo
de &lt;em&gt;software&lt;/em&gt;) es la generación de la documentación. En el caso de &lt;em&gt;software&lt;/em&gt;
es posible asistirse de herramientas que ayudan a automatizar la generación de
la documentación mediante extracción de comentarios en el código, usar palabras
claves y lenguaje de marcado para modificación de estilo en el texto o
inclusión de otros elementos que no sean solo texto plano (imágenes,
ecuaciones, enlaces entre otros).&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Algunas herramientas para este fin son &lt;a class="reference external" href="http://doxygen.nl/"&gt;Doxygen&lt;/a&gt;
(habitual para proyectos en C/C++), &lt;a class="reference external" href="https://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html"&gt;Javadoc&lt;/a&gt;
(para Java, pero habitual también en TypeScript), &lt;a class="reference external" href="https://esdoc.org/"&gt;ESDoc&lt;/a&gt;
(para Javascript) y por supuesto, Sphinx, para Python.&lt;/p&gt;
&lt;p&gt;En esta entrada instalaremos lo necesario para generar nuestra documentación de
un proyecto Python y haremos un pequeño ejemplo.&lt;/p&gt;
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;amp;OneJS=1&amp;amp;Operation=GetAdHtml&amp;amp;MarketPlace=US&amp;amp;source=ss&amp;amp;ref=as_ss_li_til&amp;amp;ad_type=product_link&amp;amp;tracking_id=cosmoscalibur-20&amp;amp;language=es_US&amp;amp;marketplace=amazon&amp;amp;region=US&amp;amp;placement=B07QWLXCC7&amp;amp;asins=B07QWLXCC7&amp;amp;linkId=ec8263fe9f13222ede56df34878a1743&amp;amp;show_border=true&amp;amp;link_opens_in_new_window=true"&gt;&lt;/iframe&gt;&lt;div class="section" id="latex"&gt;
&lt;h2&gt;LaTeX&lt;/h2&gt;
&lt;p&gt;Si deseamos generar documentación web, este paquete no es necesario, pero para
generar nuestra documentación en PDF es una dependencia obligatoria. La
instalación recomendada dependerá del sistema operativo que se use.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Mac&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Puedes usar &lt;a class="reference external" href="https://www.tug.org/mactex/"&gt;MacTex&lt;/a&gt; el cual incluye el
compilador TeXLive y editores como TeXShop, y otras dependencias para el
funcionamiento de LaTeX en Mac.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Windows&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;La opción más cómoda es el compilador &lt;a class="reference external" href="https://miktex.org/download"&gt;MikTeX&lt;/a&gt;,
el cual permite de forma predeterminada la descarga automática de paquetes
adicionales en la medida que sean requeridos (instalación &lt;em&gt;on the fly&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Es importante que en la configuración no cambies al modo silencioso, pues
esto puede afectar la ejecución posterior en los casos que requieran de
instalación.&lt;/p&gt;
&lt;p&gt;Si usas Anaconda, puedes incluirlo desde el canal de &lt;em&gt;conda-forge&lt;/em&gt;,
&lt;code&gt;conda install -c conda-forge miktex&lt;/code&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Linux&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;En Linux usaremos TeXLive pero su instalación la haremos directamente del
gestor de paquetes del sistema operativo. En la mayor parte de
distribuciones Linux estará disponible a través del gestor.&lt;/p&gt;
&lt;p&gt;En el caso de las distribuciones basadas en Debian (Ubuntu y Linux Mint
entre otras) puedes instalar de la siguiente manera:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_43368497abd14c319a68f63ae39ae5dc-1"&gt;&lt;/a&gt;sudo apt install -y texlive texlive-latex-base texlive-latex-extra \
&lt;a name="rest_code_43368497abd14c319a68f63ae39ae5dc-2"&gt;&lt;/a&gt;    texlive-lang-spanish latexmk
&lt;/pre&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="sphinx"&gt;
&lt;h2&gt;Sphinx&lt;/h2&gt;
&lt;p&gt;Si usamos Python a través de Anaconda podemos usar el gestor &lt;em&gt;conda&lt;/em&gt; para la
instalación, así &lt;code&gt;conda install sphinx&lt;/code&gt;, en caso contrario, podemos usar
el gestor de paquetes &lt;em&gt;PIP&lt;/em&gt;: &lt;code&gt;pip install -U Sphinx&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;Si deseas una experiencia en Windows similar a Linux, usando el
&lt;code&gt;Makefile&lt;/code&gt; tradicional y la posibilidad de usar en combinación con
Bash, te recomiendo usar Git Bash, y si es en conjunto con Anaconda puedes
leer mi publicación al respecto, &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/"&gt;Usar Anaconda Python en Git Bash&lt;/a&gt; e
instalar el paquete &lt;code&gt;make&lt;/code&gt; con Anaconda o instalar
&lt;a class="reference external" href="http://mingw-w64.org/doku.php"&gt;Mingw-w64&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuracion-de-sphinx"&gt;
&lt;h2&gt;Configuración de Sphinx&lt;/h2&gt;
&lt;p&gt;Abriremos una consola (si es Windows, debes tener en cuenta que para usar
paquetes de Anaconda debes usar las consolas Anaconda Prompt, Anaconda
PowerShell u otra si la configuraste -como el caso de Git Bash que
mencioné en la sección anterior-) y debemos ubicarnos en el directorio que
destinaremos para la documentación. Es habitual que en la estructura de nuestro
proyecto destinemos un directorio &lt;code&gt;docs&lt;/code&gt; para este fin.&lt;/p&gt;
&lt;p&gt;Ahora ejecutamos &lt;code&gt;sphinx-quickstart&lt;/code&gt; y respondemos las preguntas que
saldrán. Es necesario tener en cuenta, que si usas Windows debes agregar al
comando la terminación &lt;code&gt;.exe&lt;/code&gt;, ejemplo &lt;code&gt;sphinx-quickstart.exe&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_5c7cdfb98b95440cb3b15ea95fd31356-1"&gt;&lt;/a&gt;&amp;gt; Separate source and build directories (y/n) [n]: y
&lt;a name="rest_code_5c7cdfb98b95440cb3b15ea95fd31356-2"&gt;&lt;/a&gt;&amp;gt; Project name: proyecto
&lt;a name="rest_code_5c7cdfb98b95440cb3b15ea95fd31356-3"&gt;&lt;/a&gt;&amp;gt; Author name(s): Edward Villegas-Pulgarin
&lt;a name="rest_code_5c7cdfb98b95440cb3b15ea95fd31356-4"&gt;&lt;/a&gt;&amp;gt; Project release []: 0.1.0
&lt;a name="rest_code_5c7cdfb98b95440cb3b15ea95fd31356-5"&gt;&lt;/a&gt;&amp;gt; Project language [en]: es
&lt;/pre&gt;&lt;p&gt;Siempre recomiendo separar el directorio del código fuente de la documentación
del directorio de compilados de la misma. Respecto al esquema de versiones me
agrada el &lt;cite&gt;versionamiento semántico &amp;lt;https://semver.org/&amp;gt;&lt;/cite&gt; que permite al
usuario final intuir un poco más sobre la madurez del proyecto con el número,
pero puedes usar el &lt;cite&gt;esquema basado en fecha de liberación &amp;lt;https://calver.org/&amp;gt;&lt;/cite&gt;.
En el lenguaje se especifica el lenguaje con el código a dos letras
internacional, acorde a los &lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-language"&gt;soportados por Sphinx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque en la terminal nos indican que podemos continuar con el archivo
&lt;code&gt;index.rst&lt;/code&gt;, debemos hacer unos pequeños cambios en el archivo
&lt;code&gt;conf.py&lt;/code&gt; que encontraremos en &lt;code&gt;docs/source&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puedes saber más opciones de configuración en la documentación de Sphinx sobre
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/configuration.html"&gt;conf.py&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="extensiones"&gt;
&lt;h3&gt;Extensiones&lt;/h3&gt;
&lt;p&gt;Recomiendo incluir la extensión de Autodoc para extraer automáticamente la
documentación de la API, MathJax para el soporte de ecuaciones matemáticas en
la versión Web y Napoleon para el estilo de Numpy y Google en la documentación.
Con Coverage puedes validar que funciones se han documentado y dcotest integra
pruebas de código desde la documentación (comparar salidas con ejemplo de
documentación).&lt;/p&gt;
&lt;p&gt;Modificar en el archivo.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-1"&gt;&lt;/a&gt;extensions = [
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-2"&gt;&lt;/a&gt;    'sphinx.ext.autodoc',
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-3"&gt;&lt;/a&gt;    'sphinx.ext.mathjax',
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-4"&gt;&lt;/a&gt;    'sphinx.ext.napoleon',
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-5"&gt;&lt;/a&gt;    'sphinx.ext.coverage',
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-6"&gt;&lt;/a&gt;    'sphinx.ext.doctest'
&lt;a name="rest_code_33a1938d32da41cfab095579a7d8c690-7"&gt;&lt;/a&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="importar-paquete"&gt;
&lt;h3&gt;Importar paquete&lt;/h3&gt;
&lt;p&gt;Para apoyarte de ejemplos actualizados automáticamente, uso de metadatos desde
el código (ejemplo, el autor o la versión) puedes importar el paquete en el
archivo de configuración. Dado que estarás en modo de desarrollo probablemente,
el paquete no ha sido instalado y lo deberás hacer descomentando las tres
primeras líneas de código en la sección de &lt;em&gt;Path setup&lt;/em&gt;. El punto que hay por
defecto indica la misma carpeta de &lt;code&gt;docs/source&lt;/code&gt;, por lo cual es
necesario reemplazar por &lt;code&gt;../..&lt;/code&gt; que se devuelve los dos niveles
necesarios.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_b11af191f52b48faadb360ec946a12c0-1"&gt;&lt;/a&gt;import os
&lt;a name="rest_code_b11af191f52b48faadb360ec946a12c0-2"&gt;&lt;/a&gt;import sys
&lt;a name="rest_code_b11af191f52b48faadb360ec946a12c0-3"&gt;&lt;/a&gt;import datetime
&lt;a name="rest_code_b11af191f52b48faadb360ec946a12c0-4"&gt;&lt;/a&gt;sys.path.insert(0, os.path.abspath('../..'))
&lt;a name="rest_code_b11af191f52b48faadb360ec946a12c0-5"&gt;&lt;/a&gt;import proyecto
&lt;/pre&gt;&lt;p&gt;Ahora, puedes hacer cosas como la siguiente, si está disponible en tu código.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_47853b0ccff043f9b54c8049919c74ed-1"&gt;&lt;/a&gt;author = proyecto.__author__
&lt;a name="rest_code_47853b0ccff043f9b54c8049919c74ed-2"&gt;&lt;/a&gt;copyright = str(datetime.date.today().year) + ', ' + author
&lt;a name="rest_code_47853b0ccff043f9b54c8049919c74ed-3"&gt;&lt;/a&gt;release = proyecto.__version__
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias-cruzadas"&gt;
&lt;h3&gt;Referencias cruzadas&lt;/h3&gt;
&lt;p&gt;Para usar referencias cruzadas, es decir, numeración de tablas, figuras,
códigos y ecuaciones si poseen pie de objeto, y ser referenciados en el texto
por el número, se requiere configurar lo siguiente.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-1"&gt;&lt;/a&gt;numfig = True
&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-2"&gt;&lt;/a&gt;numfig_format = {'figure': 'Fig. %s', 'table': 'Tabla %s',
&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-3"&gt;&lt;/a&gt;                 'code-block': 'Código %s', 'section': 'Sección %s'}
&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-4"&gt;&lt;/a&gt;numfig_secnum_depth = 1
&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-5"&gt;&lt;/a&gt;math_numfig = True
&lt;a name="rest_code_63af3d7c67f64ab28bca80d3950374d1-6"&gt;&lt;/a&gt;math_eqref_format = 'Ec. {number}'
&lt;/pre&gt;&lt;p&gt;Así, es posible usar &lt;code&gt;:label:&lt;/code&gt; para asignar una referencia a los objetos
y &lt;code&gt;:numref:&lt;/code&gt; y &lt;code&gt;:eq:&lt;/code&gt; a la hora de mencionarlos. Con
&lt;code&gt;numfig_secnum_depth&lt;/code&gt; configuras la numeración de los objetos, si es
continúa (0), por sección (1) y subsección (2).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;LaTeX&lt;/h3&gt;
&lt;p&gt;Hay una configuración básica para LaTeX que puedes agregar. El documento
maestro, el nombre del archivo TeX, el nombre que nuestra documentación, el
nombre del autor (que podemos usar la variable que ya definimos) y el tipo de
documento (cuya clase &lt;em&gt;manual&lt;/em&gt; está definida por Sphinx).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_49c23c920f354d5795dbdaadca7aaca7-1"&gt;&lt;/a&gt;master_doc = 'index'
&lt;a name="rest_code_49c23c920f354d5795dbdaadca7aaca7-2"&gt;&lt;/a&gt;latex_documents = [
&lt;a name="rest_code_49c23c920f354d5795dbdaadca7aaca7-3"&gt;&lt;/a&gt;    (master_doc, 'proyecto.tex', 'Documentación Proyecto',
&lt;a name="rest_code_49c23c920f354d5795dbdaadca7aaca7-4"&gt;&lt;/a&gt;     author, 'manual'),
&lt;a name="rest_code_49c23c920f354d5795dbdaadca7aaca7-5"&gt;&lt;/a&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="escritura-en-restructuredtext"&gt;
&lt;h2&gt;Escritura en ReStructuredText&lt;/h2&gt;
&lt;p&gt;Sobre esto, es referencia ver la documentación de
&lt;a class="reference external" href="https://docutils.readthedocs.io/en/sphinx-docs/user/rst/quickstart.html"&gt;DocUtils&lt;/a&gt;
y de Sphinx &lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html"&gt;ReStructuredText Primer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Una vez tienes las bases de ReStructuredText puedes editar lo básico. De ahí, y
para tener todo el provecho de Sphinx hay elementos como los roles, directivas
y dominios que debes aprender a usar,
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html"&gt;Sphinx ReStructuredText&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¿Y por qué los dominios? Estos añaden sintaxis para manejar las relaciones con
el código, como enlazar a funciones relacionadas que se generaron con &lt;em&gt;autodoc&lt;/em&gt;
y además la forma de como documentar la función (u otro elemento del código) en
su código fuente y que pueda ser extraída. Por ejemplo, el
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#the-python-domain"&gt;dominio de Python&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="que-archivos-debo-editar"&gt;
&lt;h3&gt;¿Qué archivos debo editar?&lt;/h3&gt;
&lt;p&gt;Primero, editaremos &lt;code&gt;docs/source/index.rst&lt;/code&gt;, donde deberemos agregar los
nombres de los archivos que se incluyen en la documentación, tanto los
generados como los automáticos. Se agrega uno por línea, sin extensión y la
posición es relativa a la ubicación del archivo &lt;code&gt;index.rst&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Te recomiendo siempre un archivo &lt;code&gt;README.rst&lt;/code&gt; que fija la generalidad e
intención del proyecto, &lt;code&gt;history.rst&lt;/code&gt; para tener documentados los cambios
entre versiones (como un &lt;em&gt;changelog&lt;/em&gt; pero a mano, más condensado), un
&lt;code&gt;usage.rst&lt;/code&gt; documentando el uso de nuestro proyecto,
&lt;code&gt;installation.rst&lt;/code&gt; con instrucciones de instalación y adicional, agregar
una ruta a la documentación de la API (la misma ruta la debemos indicar más
adelante). Puedes agregar más archivos, por ejemplo, yo suelo usar un
&lt;code&gt;concepts.rst&lt;/code&gt; para detallar los conceptos necesarios antes de usar el
software o detallar teoría que ayuda a interpretar resultados o que expande la
información para que alguien pueda analizar o continuar un desarrollo.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-1"&gt;&lt;/a&gt;.. toctree::
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-2"&gt;&lt;/a&gt;   :maxdepth: 3
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-3"&gt;&lt;/a&gt;   :caption: Contenido:
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-5"&gt;&lt;/a&gt;   README
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-6"&gt;&lt;/a&gt;   installation
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-7"&gt;&lt;/a&gt;   usage
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-8"&gt;&lt;/a&gt;   api/modules
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-9"&gt;&lt;/a&gt;   concepts
&lt;a name="rest_code_fd2c975a8fdc420a9bfc94feb0147de4-10"&gt;&lt;/a&gt;   history
&lt;/pre&gt;&lt;p&gt;Y podemos borrar las líneas posteriores de &lt;em&gt;Indices and tables&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejecucion-de-sphinx"&gt;
&lt;h2&gt;Ejecución de Sphinx&lt;/h2&gt;
&lt;p&gt;Como estamos haciendo uso de &lt;em&gt;autodoc&lt;/em&gt;, nuestro primer paso es generar la
extracción de la API.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c4636096e28744928c719dda7da5dc99-1"&gt;&lt;/a&gt;sphinx-apidoc -f -M -o source/api/ ../proyecto
&lt;/pre&gt;&lt;p&gt;Recordar que en Windows hay que agregar &lt;code&gt;.exe&lt;/code&gt;
(&lt;code&gt;sphinx-apidoc.exe&lt;/code&gt;). &lt;code&gt;-f&lt;/code&gt; es para forzar la regeneración de los
archivos (importante si actualizamos la documentación de la API), &lt;code&gt;-M&lt;/code&gt;
para ubicar primero la documentación de los módulos (por defecto primero son
las funciones, y esto no me parece natural). Luego, es la ruta para la
documentación de la API (uno de los archivos será el &lt;code&gt;api/modules.rst&lt;/code&gt;)
y finalmente la ruta donde se encuentra el paquete. Ambas rutas son relativas
al directorio de documentación.&lt;/p&gt;
&lt;p&gt;Ahora, solo es necesario generar la documentación: &lt;code&gt;make latexpdf&lt;/code&gt; si es
con el &lt;em&gt;Makefile&lt;/em&gt; o &lt;code&gt;make.bat latexpdf&lt;/code&gt; si no instalaste &lt;em&gt;make&lt;/em&gt; en
Windows. Aquí debemos devolvernos un nivel en la carpeta para ejecutarlo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="publicar"&gt;
&lt;h2&gt;Publicar&lt;/h2&gt;
&lt;p&gt;Ahora encontrarás en la carpeta &lt;em&gt;build&lt;/em&gt; los archivos LaTeX, y uno de ellos será
el PDF que queremos. También puedes hacer compilación HTML (&lt;code&gt;make html&lt;/code&gt;)
y usar esta para publicar como un &lt;a class="reference external" href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; o
en &lt;a class="reference external" href="https://docs.readthedocs.io/en/stable/intro/getting-started-with-sphinx.html"&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>anaconda</category><category>documentación</category><category>latex</category><category>linux</category><category>python</category><category>restructuredtext</category><category>sphinx</category><category>windows</category><guid>https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/</guid><pubDate>Tue, 07 Jan 2020 00:24:48 GMT</pubDate></item><item><title>Usar Anaconda Python en Git Bash</title><link>https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Recientemente, por motivos laborales he tenido que trabajar en Windows y es
por esto que tuve la necesidad de buscar una opción cómoda de usar &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt;
en Windows, con soporte de &lt;a class="reference external" href="https://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt; a lo
que estoy acostumbrado en Linux y con Python Anaconda reconocido. De alguna
manera, la versión mínima de como usar Windows sin morir en el intento.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="anaconda-python"&gt;
&lt;h2&gt;Anaconda Python&lt;/h2&gt;
&lt;p&gt;Lo primero es proceder a instalar Anaconda Python desde su sitio oficial, pero
recomiendo revisar primero la necesidad real de tener todo lo incluido en
Anaconda o usar algo minimalista como Miniconda. Anaconda representará una
instalación y descarga de casi 500 MB, y por ende un mayor tiempo en ambos
pasos. Por otro lado, Miniconda solo instala lo mínimo requerido para tener
Python y el gestor de paquetes Conda. Esta última opción es recomendable si
posees poco espacio en disco, deseas instalar rápidamente, solo deseas probar
lo básico de Python o el equipo es de bajas características (recuerdo casos en
los cuales mis estudiantes -épocas de docente- la sola instalación de Anaconda
bloqueaba el equipo y lo reiniciaba).&lt;/p&gt;
&lt;p&gt;Si usas Anaconda para tus proyectos de desarrollo y usando buenas prácticas,
seguramente estarás acostumbrado a usar ambientes y en ese caso no necesitas
tener tantas cosas en el base, siendo buena opción Miniconda también.&lt;/p&gt;
&lt;p&gt;Descarga &lt;a class="reference external" href="https://www.anaconda.com/distribution/"&gt;Anaconda&lt;/a&gt; o
&lt;a class="reference external" href="https://docs.conda.io/en/latest/miniconda.html"&gt;Miniconda&lt;/a&gt; según tu
necesidad e instala como cualquier programa de Windows. Lo importante durante
la instalación es indicar que sea solo para el usuario actual y que no se
asocie el &lt;code&gt;PATH&lt;/code&gt;. Seguir este consejo les evitará dolores de cabeza en el
futuro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="git-bash"&gt;
&lt;h2&gt;Git Bash&lt;/h2&gt;
&lt;p&gt;Si bien puedes descargarlo desde el sitio del proyecto, aprovecharemos el
gestor Conda para facilitar la tarea de descarga, instalación y configuración.&lt;/p&gt;
&lt;p&gt;Abriremos Anaconda PowerShell o Anaconda Prompt, y ejecutaremos lo siguiente:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ce207146b4094ada82ed0765d864f3cd-1"&gt;&lt;/a&gt;conda create -n gitbash -c conda-forge git=2.24.0
&lt;/pre&gt;&lt;p&gt;Es importante el uso de &lt;code&gt;-c conda-forge&lt;/code&gt; porque de este canal vendrá la
versión de Git que usaremos. Si se usa el canal por defecto, se instala solo el
cliente de consola, mientras que en esta opción viene Git Bash. He indicado
también el &lt;code&gt;-n gitbash&lt;/code&gt; para evitar posibles conflictos entre los
paquetes requeridos para usar Git y los paquetes disponibles en el ambiente
base. En alguna publicación posterior hablaré sobre Conda para profundizar en
esto.&lt;/p&gt;
&lt;p&gt;Una vez terminada la instalación, puedes abrir el menú de Windows y buscar Git
Bash, el cual ya contará con Conda reconocido. Ahora solo debes empezar a
usarlo, &lt;code&gt;conda activate base&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;En este momento, nuestro ambiente por defecto será gitbash. Si instalas sin
indicar el ambiente, tendrás el base por defecto habilitado pero con
posibles conflictos.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;¿Y qué pasa si ya teníamos instalado Git Bash? Git Bash soporta los archivos
típicos de Bash, como el &lt;code&gt;bashrc&lt;/code&gt;. Así, podemos usar la configuración que
habitualmente se usa en Linux.&lt;/p&gt;
&lt;p&gt;Abrimos Git Bash, y ejecutamos:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_18ffe791a19d4b80a0a73fb0fcdd575d-1"&gt;&lt;/a&gt;cd
&lt;a name="rest_code_18ffe791a19d4b80a0a73fb0fcdd575d-2"&gt;&lt;/a&gt;echo ". /c/Users/USUARIO/ANACONDA/etc/profile.d/conda.sh" &amp;gt;&amp;gt; .bashrc
&lt;a name="rest_code_18ffe791a19d4b80a0a73fb0fcdd575d-3"&gt;&lt;/a&gt;source .bashrc
&lt;/pre&gt;&lt;p&gt;Con la primera línea aseguramos ir al directorio del usuario. En la segunda
línea, crearemos o editaremos el archivo de configuración, pero debes
reemplazar &lt;code&gt;USUARIO&lt;/code&gt; por la carpeta de tu usuario y &lt;code&gt;ANACONDA&lt;/code&gt; por
la carpeta de Anaconda (habitualmente &lt;code&gt;Anaconda&lt;/code&gt; o &lt;code&gt;Miniconda3&lt;/code&gt; si
usaste Miniconda). La tercera línea actualiza la configuración en la sesión
actual de la consola permitiendo usar de forma inmediata Conda. Para la próxima
apertura de Git Bash ya no tendrás que configurar nada, solo empezar a usar
Conda (aún no hay ambiente activado).&lt;/p&gt;
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;amp;OneJS=1&amp;amp;Operation=GetAdHtml&amp;amp;MarketPlace=US&amp;amp;source=ss&amp;amp;ref=as_ss_li_til&amp;amp;ad_type=product_link&amp;amp;tracking_id=cosmoscalibur-20&amp;amp;language=es_US&amp;amp;marketplace=amazon&amp;amp;region=US&amp;amp;placement=B079Q47BDK&amp;amp;asins=B079Q47BDK&amp;amp;linkId=27f9b2ded3fc9aa23cd85e1f292c8b4e&amp;amp;show_border=true&amp;amp;link_opens_in_new_window=true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;</description><category>anaconda</category><category>bash</category><category>git</category><category>python</category><category>windows</category><guid>https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/</guid><pubDate>Tue, 31 Dec 2019 19:43:50 GMT</pubDate></item><item><title>La experiencia de PyCon Colombia 2018</title><link>https://www.cosmoscalibur.com/blog/la-experiencia-de-pycon-colombia-2018/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Tras mi primera participación en PyCon Colombia (segunda versión del evento), me
encuentro con una comunidad bastante amplia y que hace honor a una de las
características más importantes del lenguaje, y es lo extensa y variada que es
su comunidad. Colombia no es la excepción a esto.&lt;/p&gt;
&lt;p&gt;Como cualquier evento, presenta elemento para mejorar pero se encuentra un
equipo de organizadores dispuestos a escuchar a la comunidad para mejorar y
aprender de las dos versiones realizadas para llegar a una tercera versión aún
mejor. Puedes enviar tu retroalimentación a &lt;a class="reference external" href="mailto:feedback@pycon.co"&gt;feedback@pycon.co&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Llamó en particular mi atención el aspecto humano del evento. Creo que las
conferencias de los invitados (&lt;em&gt;keynotes&lt;/em&gt;) nos recordaron que en todo momento
llevamos una responsabilidad sobre como se pueden afectar otros por nuestro
trabajo y no desde una perspectiva de ser nuestros clientes, sino en las
consecuencias éticas de algunas decisiones durante nuestros desarrollos como la
selección de datos en procesos de aprendizaje automático (que pueden estar
sesgados) o la exclusión en nuestros equipos de trabajo.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/la-experiencia-de-pycon-colombia-2018/pycon-colombia-2018-grupo.jpg"&gt;&lt;img alt="Foto de grupo de asistentes, conferencistas y organizadores de PyCon Colombia 2018." src="https://www.cosmoscalibur.com/images/la-experiencia-de-pycon-colombia-2018/pycon-colombia-2018-grupo.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Foto de grupo de asistentes, conferencistas y organizadores de PyCon Colombia 2018.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;La presencia de personal del lado empresarial es predominante por sobre el
personal que proviene de la academia, y esto fue notorio en las conferencias,
con un fuerte común, y es el uso de python en aplicaciones comerciales, uso
interno en empresas y el tema de aprendizaje automático en la industria. Espero
en la próxima versión exista una mayor participación de la academia, pues es
importante mostrar como python se ha permeado en este medio, para la
investigación científica y la educación.&lt;/p&gt;
&lt;iframe style="width:120px;height:240px;" marginwidth="0" marginheight="0" scrolling="no" frameborder="0" src="//ws-na.amazon-adsystem.com/widgets/q?ServiceVersion=20070822&amp;amp;OneJS=1&amp;amp;Operation=GetAdHtml&amp;amp;MarketPlace=US&amp;amp;source=ss&amp;amp;ref=as_ss_li_til&amp;amp;ad_type=product_link&amp;amp;tracking_id=cosmoscalibur-20&amp;amp;language=es_US&amp;amp;marketplace=amazon&amp;amp;region=US&amp;amp;placement=B079Q47BDK&amp;amp;asins=B079Q47BDK&amp;amp;linkId=27f9b2ded3fc9aa23cd85e1f292c8b4e&amp;amp;show_border=true&amp;amp;link_opens_in_new_window=true"&gt;&lt;/iframe&gt;&lt;div class="section" id="recopilacion-de-material"&gt;
&lt;h2&gt;Recopilación de material&lt;/h2&gt;
&lt;p&gt;Si bien los organizadores de PyCon Colombia compartirán los videos de las
conferencias en su
&lt;a class="reference external" href="https://www.youtube.com/channel/UCjor6U0ZF5zGAYLJJt9gr0A"&gt;canal&lt;/a&gt;, hay
material accesible de las conferencias y talleres a través de repositorios de
github y presentaciones en sitios web personales, drive y otros servicios para
compartir documentos que no están recopiladas. Aquí, trato de hacer seguimiento
a este importante material (puedes dejarme un comentario si conoces de un recurso
de las conferencias y talleres que no este aquí).&lt;/p&gt;
&lt;div class="section" id="conferencias-principales"&gt;
&lt;h3&gt;Conferencias principales&lt;/h3&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 36%"&gt;
&lt;col style="width: 64%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;Conferencista&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Recurso&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/loooorenanicole"&gt;Lorena Mesa&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/1VJpw_h95B0yfWEJDGn9Hj1qeGRk0b9_TOFqDXOo2pwA/edit#slide=id.g2c36140c5b_0_555"&gt;Your model is bias, but so is your data&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/NaomiCeder"&gt;Naomi Ceder&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/19FTLXRXHX6dyxS5GJYLLK4NGYaeT280vIZm9ncSjdd8/edit#slide=id.p"&gt;Obstáculos para la inclusión&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/ch_doig"&gt;Christine Doig&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/chdoig/pycon-colombia-2018"&gt;Data Science: Past, Present and Future&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/audreyr"&gt;Audrey Roy&lt;/a&gt; y &lt;a class="reference external" href="https://twitter.com/pydanny"&gt;Daniel Roy&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/pydanny/arepa"&gt;Empaquetado en python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/learnopencv"&gt;Satya Mallick&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="http://www.learnopencv.com/satya-mallick-pycon-colombia-keynote-2018/"&gt;Computer Vision Machine Learning &amp;amp; AI&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.twitter.com/deborahhanus"&gt;Deborah Hanus&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.slideshare.net/DeborahHanus/pycon-colombia-keynote-2018"&gt;With great machine learning comes great responsibility&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Las conferencias principales fueron en general espacios de inspiración mas que
espacios llenos de formalismo y tecnicismos. Aunque esperaba conferencias
técnicas, realmente fue grato ver conferencias que permitieron realizar reflexión
sobre diferentes aspectos como la inclusión y diversidad, la ética y los sesgos,
y por supuesto el romper barreras para el avance y generar nuevas revoluciones.&lt;/p&gt;
&lt;p&gt;Es difícil decir mucho sobre personas que solo vez en una conferencia en medio
de muchos más asistentes, pero con sus charlas mostraron ser grandes personas
además del papel que desempeñan en la comunidad de python (en particular, con
Deborah Hanus tuve la oportunidad de compartir mesa durante la cena del sábado,
y es una persona bastante atenta). Al poder escoger entre tantos temas,
orientarnos en como contribuir y mejorar dice mucho.&lt;/p&gt;
&lt;p&gt;En medio de las conferencias hubo espacio para la &lt;em&gt;selfie&lt;/em&gt; de Lorena Mesa, con
su personalidad bastante extrovertida, las divertidas historias de amor en
código de Audrey Roy y Daniel Roy (&lt;em&gt;pair programming&lt;/em&gt; 💗), la historia de vida y
superación de Naomi Ceder (es alguien habla de primera mano el tema de inclusión,
como se diría en Antioquia, es una berraca) y un profundo repensar de nuestra
responsabilidad cuando trabajamos con el análisis de datos (y en particular, el
aprendizaje automático) con Deborah Hanus.&lt;/p&gt;
&lt;div class="section" id="python-software-foundation"&gt;
&lt;h4&gt;Python Software Foundation&lt;/h4&gt;
&lt;p&gt;Naomi Ceder nos invita a unirnos como
&lt;a class="reference external" href="https://www.python.org/psf/membership/"&gt;miembros&lt;/a&gt; y
&lt;a class="reference external" href="https://www.python.org/psf/sponsorship/"&gt;patrocinadores&lt;/a&gt; de la
Python Software Foundation, fundación encargada de velar por la propiedad
intelectual de Python, el soporte de la infraestructura de &lt;a class="reference external" href="https://www.python.org"&gt;Python.org&lt;/a&gt;
y &lt;a class="reference external" href="https://www.pypa.io/en/latest/"&gt;PyPA&lt;/a&gt;. Igualmente, el apoyo al desarrollo y
participación de eventos que promueven python y el desarrollo de software en el
mismo. Igualmente, organiza PyCon US. Existe una membresía básica sin costo.&lt;/p&gt;
&lt;p&gt;Hay una invitación general a presentar propuestas para las &lt;em&gt;PyCon Charlas&lt;/em&gt;,
conferencias en la PyCon US pero en español, formato que se hará por primera vez
este año.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="taller-de-empaquetado-en-python"&gt;
&lt;h4&gt;Taller de empaquetado en python&lt;/h4&gt;
&lt;p&gt;Audrey y Daniel Roy nos invitan a participar del taller de empaquetamiento que
dirigirán el 10 de marzo en Medellín. Igualmente, tendrán en descuento su libro
sobre django. El taller busca profundizar mucho más en el empaquetamiento (que lo
presentado durante la conferencia) para compartir nuestros desarrollos de la manera
más simple a la comunidad python.&lt;/p&gt;
&lt;p&gt;Para poderte registrar y conocer más de la actividad, sigue el
&lt;a class="reference external" href="https://www.meetup.com/es/Medellin-Python-y-Django-Meetup/events/247775417/?eventId=247775417"&gt;enlace&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para este taller puedes participar como instructor si posees experiencia en generar
paquetes de python (y disponerlos en PyPI) y el uso de &lt;em&gt;cookiecutter&lt;/em&gt; (en especial
&lt;a class="reference external" href="https://cookiecutter-pypackage.readthedocs.io/en/latest/tutorial.html"&gt;cookiecutter-pypackage&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conferencias-sometidas"&gt;
&lt;h3&gt;Conferencias sometidas&lt;/h3&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 30%"&gt;
&lt;col style="width: 70%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;Conferencista&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Recurso&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/joserzapata"&gt;Jose Zapata&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/JoseRZapata/Pycon2018Colombia"&gt;Audio Analysis with Python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/maigfrga"&gt;Manuel Franco&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/maigfrga/nt-recommend/blob/master/documentation/pycon/Intro%20Recsys.odp"&gt;Introduction to Recommendation Systems&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/DasIstHerrKuska"&gt;Robert Kuska&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/1DYSYqu1bsODQVOAZupdPZ4afYeAuuze0mEGC0b-9bAw/edit#slide=id.p"&gt;Bits and bytes of python memory management&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/_JorgeMartinezG"&gt;Jorge Martinez&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/JorgeMartinezG/KalmanTemplateTracker"&gt;Detection vs tracking&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/iris9112"&gt;Isabel Ruiz Buriticá&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/iris9112/Pycon2018_Fractals"&gt;Pintando el caos con python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Rocky Bernstein&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="http://rocky.github.io/pycon2018.co/#/"&gt;Decompilation and Pandora's Box&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/cosmoscalibur"&gt;Edward Villegas-Pulgarin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/cosmoscalibur/aula-notebook"&gt;Usando Jupyter Notebook en el aula&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/nicoguaro"&gt;Nicolás Guarín Zapata&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/AppliedMechanics-EAFIT/SolidsPy"&gt;SolidsPy: A FEM Framework for Teaching Computational Modeling with Python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/santiagomv1127"&gt;Santiago Mesa&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/samez21/leyes-kepler"&gt;Solar System Simulator&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/dav009"&gt;David Przybilla&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/dav009/pyconco"&gt;Python in the land of Serverless&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/MiltonLn"&gt;Milton Lenis&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/MiltonLn/pycon-multitenant"&gt;Multitenant Architectures in Python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/GudarJs"&gt;Dario Guzman&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/GudarJs/Facial-Recognition-Tensorflow"&gt;Facial recognition with neural networks&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Jonathan Sandoval Cardona&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/jsandovalc/pycon2018"&gt;Introduction to asynchronous programming with Python and Twisted&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/carlosmart626"&gt;Carlos Alberto Martinez Morales&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/CarlosMart626/graphql-pycon.co2018"&gt;Creating a GraphQL api in Django&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/jorlugaqui"&gt;Jorge Luis Galvis Quintero&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/jorlugaqui/pycon"&gt;Architecture for machine learning apps (Django flavored)&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Manuela Jaramillo&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/manuela98/talkscript2media"&gt;TalkScript2Media&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Se presentaron una gran cantidad de conferencias y esta es solo una muestra de
aquellas que pude encontrar a través de los perfiles de twitter y github de los
conferencistas, y de los tuits compartidos durante el evento.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="talleres"&gt;
&lt;h3&gt;Talleres&lt;/h3&gt;
&lt;table&gt;
&lt;colgroup&gt;
&lt;col style="width: 22%"&gt;
&lt;col style="width: 78%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head"&gt;&lt;p&gt;Conferencista&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;Recurso&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Sebastián Parada, María Camila Guerrero Giraldo&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/NeftaliChana/PyCon-2018"&gt;Programación funcional con python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/serpulga"&gt;Sergio Pulgarin&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.google.com/presentation/d/1meKI2I_sX3avnQcU2gK1j-RcSzXcyYC4-Y4Ol1Pu35E/edit#slide=id.p"&gt;Python API for C programs&lt;/a&gt; &lt;a class="reference external" href="https://github.com/serpulga/python-accounts"&gt;(ejemplo)&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/__mharrison__"&gt;Matt Harrison&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/mattharrison/Jungle-PyconCo-2018"&gt;Welcome to the Jungle: Random Forests for Fun and Profit&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;Juan Nicolás Táutiva&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/NickATC/Taller_Python_OOP_2018"&gt;Programming for non-programmers: The four pillars of object-oriented programming&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/tebanep"&gt;Esteban Echeverry&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/nubark/clean-architecture-python"&gt;Clean architecture with python&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/moisesvw"&gt;Moises Vargas&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/moisesvw/pyconMDE2018"&gt;Classifying human faces using Convolutional Neural Networks&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/rafa_laverde"&gt;Rafael Laverde&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/rlaverde/pycon-demo"&gt;Build a powerful static website using Lektor&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Al igual que las conferencias, esto no representa la totalidad de talleres y
solo son aquellos que pude encontrar en los perfiles de github de los
orientadores de los talleres.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="mi-participacion"&gt;
&lt;h2&gt;Mi participación&lt;/h2&gt;
&lt;p&gt;Que puedo decir, con lo visto en el primer día de como las conferencias afines a
temas de empresa no esperaba la asistencia que finalmente tuve, y más aún, la
posibilidad de continuar una comunicación con interesados en el tema de python
en educación.&lt;/p&gt;
&lt;p&gt;Mi conferencia, "Jupyter Notebook en el aula de clase", fue la manera de
compartir mi experiencia de usar esta herramienta de distintas maneras en cursos
que imparto o he impartido como métodos numéricos, herramientas computacionales,
el uso en el semillero de física teórica y computacional y en la Organización
Scalibur.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/la-experiencia-de-pycon-colombia-2018/jupyter-notebook-aula-edward-villegas.jpg"&gt;&lt;img alt='Fotografía del inicio de la presentación de "Usando Jupyter Notebook en el aula."' src="https://www.cosmoscalibur.com/images/la-experiencia-de-pycon-colombia-2018/jupyter-notebook-aula-edward-villegas.thumbnail.jpg"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Fotografía del inicio de la presentación de "Usando Jupyter Notebook en el aula."&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Puedes acceder al repositorio de los ejemplos de mi conferencia en
&lt;a class="reference external" href="https://github.com/cosmoscalibur/aula-notebook"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>conferencias</category><category>eventos</category><category>pycon colombia</category><category>python</category><guid>https://www.cosmoscalibur.com/blog/la-experiencia-de-pycon-colombia-2018/</guid><pubDate>Sun, 18 Feb 2018 23:43:22 GMT</pubDate></item></channel></rss>