<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cosmoscalibur (Publicaciones sobre wine)</title><link>https://www.cosmoscalibur.com/</link><description></description><atom:link href="https://cosmoscalibur.github.io/categories/wine.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2019 &lt;a href="mailto:cosmoscalibur@gmail.com"&gt;Edward Villegas Pulgarin&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Sat, 23 Nov 2019 02:51:07 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Crear contenedor Docker aplicación GUI - EALite</title><link>https://cosmoscalibur.github.io/blog/crear-contenedor-docker-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Dando continuidad al uso de contenedores que inicie en la publicación anterior,
&lt;a class="reference external" href="https://cosmoscalibur.github.io/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;, reproduciré la
instalación de Enterprise Architect Viewer (EALite) con Docker (y por supuesto,
Wine). Si deseas reproducir el ejemplo de este caso, requieres reproducir la
el artículo mencionado para extraer el directorio de Wine.&lt;/p&gt;
&lt;p&gt;A diferencia de LXC, Docker está más orientado al aislamiento de aplicaciones y
no de sistema operativo (LXC cumple una función más cercana a una máquina
virtual) lo cual ayuda a un mejor despliegue de aplicaciones y la
estandarización de las etapas de desarrollo y de pruebas.&lt;/p&gt;
&lt;p&gt;Común a LXC tenemos imágenes base que podemos usar, disponibles en
&lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. A partir de estas podemos completar
nuestras necesidades especificando en el archivo Dockerfile.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="instalar-docker"&gt;
&lt;h2&gt;Instalar Docker&lt;/h2&gt;
&lt;p&gt;Recomiendo en Linux instalar docker con snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d7e26598f0884134b13a971fb25e29a8-1"&gt;&lt;/a&gt;sudo snap install docker
&lt;/pre&gt;&lt;p&gt;Posteriormente, podemos asociar nuestro usuario para la ejecución sin ser
administrador.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_9032462000d8443ab1aad701821501fe-1"&gt;&lt;/a&gt;sudo groupadd docker
&lt;a name="rest_code_9032462000d8443ab1aad701821501fe-2"&gt;&lt;/a&gt;sudo usermod -aG docker $USER
&lt;a name="rest_code_9032462000d8443ab1aad701821501fe-3"&gt;&lt;/a&gt;newgrp docker
&lt;/pre&gt;&lt;p&gt;Puedes probar ejecutando como usuario regular, &lt;code&gt;docker run hello-world&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dockerfile"&gt;
&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;Este archivo es el mecanismo mediante el cual se especifican las reglas de
construcción de nuestra imagen. Se define un lenguaje común sin importar el
sistema operativo base y las funciones específicas del sistema son usadas con
una instrucción que habilita a ejecución en él.&lt;/p&gt;
&lt;p&gt;Los comentarios en el archivo son como tradicionalmente estamos acostumbrados
en otros lenguajes (entre ellos, bash), con signo número &lt;code&gt;#&lt;/code&gt;. Esto posee
una excepción, y es el caso donde existe una directriz después como el caso que
se ejemplificara.&lt;/p&gt;
&lt;p&gt;La directriz &lt;code&gt;escape&lt;/code&gt; es usada para cambiar el carácter de salto de línea
para instrucciones de múltiples líneas. Se puede tener la habitual barra
invertida (&lt;tt class="docutils literal"&gt;\&lt;/tt&gt;) que es conflictivo con rutas con espacios en Linux o
rutas Windows, y la opción de la tilde invertida (&lt;tt class="docutils literal"&gt;`&lt;/tt&gt;).&lt;/p&gt;
&lt;p&gt;Después podemos definir la imagen base usando &lt;code&gt;FROM&lt;/code&gt; seguido de la
especificación de la imagen en &lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. En este caso, usaremos la &lt;a class="reference external" href="https://hub.docker.com/_/ubuntu"&gt;imagen
Docker de Ubuntu&lt;/a&gt; con arquitectura i386 y
versión 18.04. En general, la estructura de invocación es
&lt;code&gt;arquitectura/ubuntu:version&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Las instrucciones son ejecutadas por defecto por el usuario &lt;em&gt;root&lt;/em&gt;
(administrador), de manera que podemos ejecutar la instalación de paquetes
invocando directamente el llamado al sistema iniciando con &lt;code&gt;RUN&lt;/code&gt;. Como se
observa en el ejemplo, a continuación es una línea típica que se ejecuta en
Ubuntu.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Nota&lt;/p&gt;
&lt;p class="last"&gt;La creación del usuario es necesaria porque wine debe ejecutarse por un
usuario regular. Adicional, el nombre de usuario corresponde al mismo nombre
del usuario Linux del cual traemos la copia de la instalación en Wine (Wine
asigna el nombre de usuario Windows igual al usuario Linux, luego, al copiar
la carpeta de Wine, solo funcionará si encuentra el mismo usuario).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Podemos cambiar el directorio sobre el cual ejecutamos usando &lt;code&gt;WORKDIR&lt;/code&gt;.
En la siguiente línea usamos &lt;code&gt;COPY&lt;/code&gt; para mover un directorio del sistema
hospedador a la imagen. Existe una instrucción similar, &lt;code&gt;ADD&lt;/code&gt;, la cual
soporta que la fuente sea una URL realizando la descarga, y descomprime
archivos &lt;em&gt;tar&lt;/em&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;El directorio que moveremos se genero en el contenedor LXC que construimos
en &lt;a class="reference external" href="https://cosmoscalibur.github.io/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;. Para ello,
iniciamos el contenedor y extraemos el directorio.&lt;/p&gt;
&lt;div class="last"&gt;&lt;pre class="code text"&gt;&lt;a name="rest_code_8559c8d20b3c4715ab6116ff07f1947b-1"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_8559c8d20b3c4715ab6116ff07f1947b-2"&gt;&lt;/a&gt;sudo lxc file pull -r ea/home/ubuntu/.wine .
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Con &lt;code&gt;USER&lt;/code&gt; cambiamos el usuario que ejecuta los procesos. Es importante
que a la hora de concluir, si un proceso es ejecutado por un usuario regular,
nuestro último cambio de usuario debe apuntar a él, de otra forma el
contenedor estará activo para el usuario administrador. Otro aspecto importante
es el comportamiento por defecto en Linux, donde puede crear el usuario si no
existe (pero no el directorio de usuario).&lt;/p&gt;
&lt;p&gt;Finalmente, es necesario indicar que se ejecuta cuando se lanza el contenedor.
Esto es posible con &lt;code&gt;CMD&lt;/code&gt; o con &lt;code&gt;ENTRYPOINT&lt;/code&gt;. La diferencia es que
el primero permite sobreescribir la ejecución enviando como parámetro lo que
se desea ejecutar, mientras que la segunda opción solo ejecuta la configurada.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-1"&gt;&lt;/a&gt;# escape=`
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-2"&gt;&lt;/a&gt;FROM i386/ubuntu:18.04
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-3"&gt;&lt;/a&gt;RUN apt update -q &amp;amp;&amp;amp; apt install --install-recommends -y wine-stable
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-4"&gt;&lt;/a&gt;RUN apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-5"&gt;&lt;/a&gt;RUN useradd -ms /bin/bash ubuntu
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-6"&gt;&lt;/a&gt;WORKDIR /home/ubuntu
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-7"&gt;&lt;/a&gt;COPY .wine .wine
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-8"&gt;&lt;/a&gt;RUN chown -R ubuntu .wine
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-9"&gt;&lt;/a&gt;USER ubuntu
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-10"&gt;&lt;/a&gt;RUN mkdir -p .local/bin &amp;amp;&amp;amp; `
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-11"&gt;&lt;/a&gt;        echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; .local/bin/ealite &amp;amp;&amp;amp; `
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-12"&gt;&lt;/a&gt;        chmod 755 .local/bin/ealite
&lt;a name="rest_code_510f9e4b0f1b45379e8f7f10c3227ba4-13"&gt;&lt;/a&gt;CMD ".local/bin/ealite"
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="construir-imagen-docker"&gt;
&lt;h2&gt;Construir imagen Docker&lt;/h2&gt;
&lt;p&gt;La construcción la realizamos con la opción &lt;code&gt;build&lt;/code&gt;. Se usa el argumento
&lt;code&gt;-t&lt;/code&gt; para indicar la etiqueta que asignaremos a la imagen y &lt;code&gt;-f&lt;/code&gt;
para relacionar la ruta del archivo dockerfile que se usará. El siguiente
argumento no posee marca para indicarlo y corresponde al contexto, que viene a
ser la ruta donde se encuentran los archivos que usaremos (que puede ser
reemplazado por un archivo de contexto con la ruta a los distintos archivos).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d83edd9176e74c76b7ec396c5033f86b-1"&gt;&lt;/a&gt;docker build -t cosmoscalibur/ealite:latest -f dockerfile .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-contenedor"&gt;
&lt;h2&gt;Ejecutar contenedor&lt;/h2&gt;
&lt;p&gt;Ahora puedes lanzar un contenedor gráfico basado en la imagen construida con la
siguiente instrucción.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e94c23a236d4492790e56af1ac9f756e-1"&gt;&lt;/a&gt;docker run --net=host --env="DISPLAY" --volume="$HOME/.Xauthority:/root/.Xauthority:rw" cosmoscalibur/ealite:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.docker.com/install/linux/linux-postinstall/"&gt;Docker docs: Post-installation steps for Linux&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.docker.com/reference/"&gt;Docker docs: Reference documentation&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://medium.com/@SaravSun/running-gui-applications-inside-docker-containers-83d65c0db110"&gt;Running GUI Applications inside Docker Containers&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>docker</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>wine</category><guid>https://cosmoscalibur.github.io/blog/crear-contenedor-docker-aplicacion-gui-ealite/</guid><pubDate>Sat, 23 Nov 2019 02:47:22 GMT</pubDate></item><item><title>Crear contenedor LXC para aplicación GUI - EALite</title><link>https://cosmoscalibur.github.io/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;El uso de contenedores en la industria del software se ha extendido ampliamente
y no es de extrañar, ofrece a los desarrolladores la posibilidad de mejorar el
aislamiento de sus servicios y de ahí hacerlo menos susceptible a errores por
colisiones con otros servicios o conflictos de dependencias. Al mismo tiempo,
son una alternativa más amigable en recursos respecto a las máquinas virtuales.&lt;/p&gt;
&lt;p&gt;Múltiples proveedores de infraestructura para nube ofrecen la opción de
desplegar los servicios a partir de un contenedor, y sin duda, facilita la
distribución de entornos de desarrollo y aplicaciones.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Con estos beneficios (algo similar a lo discutido en
&lt;a class="reference external" href="https://cosmoscalibur.github.io/blog/instalando-paquetes-en-linux-mint/"&gt;Instalando paquetes en Linux (Mint)&lt;/a&gt;), procederemos a crear un contenedor
para la ejecución de Enterprise Architect (la versión del visor, pero es
aplicable a la versión completa). De manera oficial hay instrucciones para su
uso en Linux con Wine pero la receta está incompleta (hay que agregar una
instrucción más) y es mejor no ensuciar nuestro sistema de 64 bits con
bibliotecas de 32 bits de manera innecesaria. Así que empecemos.&lt;/p&gt;
&lt;div class="section" id="instalar-lxd"&gt;
&lt;h2&gt;Instalar LXD&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso será instalar el paquete LXD, el cual se encuentra
disponible a través de múltiples gestores de paquetes de las distribuciones
Linux pero también como paquete snap. Por facilidad, usaré el paquete snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_0645e8d00d0b4cc5a6a57acc0ddbfd2d-1"&gt;&lt;/a&gt;sudo snap install lxd
&lt;/pre&gt;&lt;p&gt;Ahora, debemos inicializar (solo es necesario la primera vez tras instalar).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d695b6279ae140bb8022926c63370784-1"&gt;&lt;/a&gt;sudo lxd init
&lt;/pre&gt;&lt;p&gt;En mi caso, todos los valores que son preguntados los he dejado en su valor
por defecto. Personalmente, solo debería preocuparnos el tamaño de la unidad
usado (en caso de tener limitaciones en espacio de almacenamiento).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="crear-perfil-gui"&gt;
&lt;h2&gt;Crear perfil GUI&lt;/h2&gt;
&lt;p&gt;Por defecto, el comportamiento de los contenedores es para la ejecución de
servicios y aplicaciones de consola. Por eso, la ejecución de una aplicación
gráfica nos requiere una configuración adicional, que es realizar el paso al
sistema gráfico de nuestro sistema hospedador.&lt;/p&gt;
&lt;p&gt;El perfil gráfico es definido con el siguiente código (copia y pega en un nuevo
archivo, &lt;code&gt;lxdguiprofile.txt&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-1"&gt;&lt;/a&gt;config:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-2"&gt;&lt;/a&gt;  environment.DISPLAY: :0
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-3"&gt;&lt;/a&gt;  raw.idmap: both 1000 1000
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-4"&gt;&lt;/a&gt;  user.user-data: |
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-5"&gt;&lt;/a&gt;    #cloud-config
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-6"&gt;&lt;/a&gt;    runcmd:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-7"&gt;&lt;/a&gt;      - 'sed -i "s/; enable-shm = yes/enable-shm = no/g" /etc/pulse/client.conf'
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-8"&gt;&lt;/a&gt;      - 'echo export PULSE_SERVER=unix:/tmp/.pulse-native | tee --append /home/ubuntu/.profile'
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-9"&gt;&lt;/a&gt;    packages:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-10"&gt;&lt;/a&gt;      - x11-apps
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-11"&gt;&lt;/a&gt;      - mesa-utils
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-12"&gt;&lt;/a&gt;      - pulseaudio
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-13"&gt;&lt;/a&gt;description: GUI LXD profile
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-14"&gt;&lt;/a&gt;devices:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-15"&gt;&lt;/a&gt;  PASocket:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-16"&gt;&lt;/a&gt;    path: /tmp/.pulse-native
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-17"&gt;&lt;/a&gt;    source: /run/user/1000/pulse/native
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-18"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-19"&gt;&lt;/a&gt;  X0:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-20"&gt;&lt;/a&gt;    path: /tmp/.X11-unix/X0
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-21"&gt;&lt;/a&gt;    source: /tmp/.X11-unix/X0
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-22"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-23"&gt;&lt;/a&gt;  mygpu:
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-24"&gt;&lt;/a&gt;    type: gpu
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-25"&gt;&lt;/a&gt;name: gui
&lt;a name="rest_code_c0f674a2e1e64b808a840919e4baa748-26"&gt;&lt;/a&gt;used_by:
&lt;/pre&gt;&lt;p&gt;Ahora, crearemos el perfil:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_a93dbf98c06e44ca9e482f17ba4cc67b-1"&gt;&lt;/a&gt;sudo lxc profile create gui
&lt;a name="rest_code_a93dbf98c06e44ca9e482f17ba4cc67b-2"&gt;&lt;/a&gt;cat lxdguiprofile.txt | sudo lxc profile edit gui
&lt;/pre&gt;&lt;p&gt;Este procedimiento, solo es necesario hacerlo la primera vez.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="obtener-contenedor-base"&gt;
&lt;h2&gt;Obtener contenedor base&lt;/h2&gt;
&lt;p&gt;Una vez creado el perfil, lanzaremos un contenedor usando una imagen base, es
decir, sobre la cual desarrollaremos nuestra necesidad. Estas imágenes base se
encuentran disponibles en la página del proyecto y son bases de múltiples
distribuciones Linux, con versiones y arquitecturas diferentes.&lt;/p&gt;
&lt;p&gt;Para nuestro fin, usaremos una base de Ubuntu 18.04 para arquitectura i386, que
corresponde a 32 bits. Puedes usar otra distribución siempre y cuando disponga
de la forma de instalar los paquetes necesarios y en versiones recientes (entre
más reciente sea Wine, mejor).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_25ef5fd0ea814286bfee24d38e5c3f0c-1"&gt;&lt;/a&gt;sudo lxc launch --profile default --profile gui images:ubuntu/18.04/i386 ea
&lt;/pre&gt;&lt;p&gt;Cuando no requerimos la parte gráfica, podemos omitir
&lt;code&gt;--profile default --profile gui&lt;/code&gt;. Los dos perfiles son un proceso de
herencia, primero se carga el perfil por defecto y luego se añade lo necesario
para las aplicaciones gráficas.&lt;/p&gt;
&lt;p&gt;Este procedimiento es la primera vez de cada contenedor. Si por error omitimos
el perfil gráfico, tendremos que volverlo a crear. Si por un error en la
especificación del contenedor lo deseamos eliminar, podemos ejecutar
&lt;code&gt;sudo lxc rm ea --force&lt;/code&gt;. El forzado es necesario para detener la
ejecución del contenedor, o igual podríamos detenerlo primero,
&lt;code&gt;sudo lxc stop ea&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comandos-en-el-contenedor"&gt;
&lt;h2&gt;Comandos en el contenedor&lt;/h2&gt;
&lt;p&gt;Para instalar nuestro programa en el contenedor, necesitamos ejecutar comandos
en este. Para ello, tenemos &lt;code&gt;lxc exec {contenedor} -- {comando}&lt;/code&gt;. Una
forma interactiva, adecuada para pruebas, es ejecutar bash.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_06ce4ec74f884d6884a751f9b5ea9941-1"&gt;&lt;/a&gt;sudo lxc exec ea -- /bin/bash
&lt;/pre&gt;&lt;p&gt;De esta manera podemos ejecutar los comandos de la misma manera que lo hacemos
en nuestro sistema, ya que estamos en el contenedor.&lt;/p&gt;
&lt;p&gt;Si deseamos automatizar, nos interesará enviar directamente las instrucciones
en lugar de bash. Ejemplo, &lt;code&gt;sudo lxc exec ea -- apt update -q&lt;/code&gt;. Notemos
que se ha usado un comando que requiere privilegios de administrador, y es
porque por defecto el ingreso al contenedor es como administrador. Para hacer
uso del usuario estándar debemos indicarlo de forma explícita (por defecto,
tenemos el usuario ubuntu),
&lt;code&gt;sudo lxc exec ea -- su - ubuntu -c 'echo $(uname -a)'&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gestionar-archivos"&gt;
&lt;h2&gt;Gestionar archivos&lt;/h2&gt;
&lt;p&gt;La gestión de archivos es realizada con los comandos &lt;code&gt;file pull&lt;/code&gt; y
&lt;code&gt;file push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Así, si deseamos enviar un archivo:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_3cf314ff356e41369eac3f2a9ee312b7-1"&gt;&lt;/a&gt;sudo lxc file push {archivo local} {contenedor}/{ruta contenedor}
&lt;/pre&gt;&lt;p&gt;Y si deseamos traer un archivo del contenedor:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d8bb5fdde16b4fafbc26e4c0f9e8cfd3-1"&gt;&lt;/a&gt;sudo lxc file pull {contenedor}/{ruta contenedor} {archivo local}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="instalar-ealite"&gt;
&lt;h2&gt;Instalar EALite&lt;/h2&gt;
&lt;p&gt;Ahora que sabemos ejecutar comandos en el contenedor, instalaremos las
dependencias y finalmente EALite.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-1"&gt;&lt;/a&gt;sudo lxc exec ea -- apt update -q
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-2"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install --install-recommends -y wine-stable winetricks
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-3"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml3'
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-5"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml4'
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-6"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml6'
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-7"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended mdac28'
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-8"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended jet40'
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-9"&gt;&lt;/a&gt;wget http://www.sparxsystems.com.au/bin/EALite.exe
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-10"&gt;&lt;/a&gt;sudo lxc file push EALite.exe ea/home/ubuntu/EALite.exe
&lt;a name="rest_code_915ffb876cdc47e1a93388638e5f3169-11"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'wine msiexec /i EALite.exe'
&lt;/pre&gt;&lt;p&gt;En este punto, procederemos de manera gráfica a la instalación final de EALite.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Ventana de instalación gráfica de EALite." src="https://lh3.googleusercontent.com/bJQU29AUGyL8RwMip-Zfye6-npY8m5nTvUCvLys09zKO6Spm-0K86w7n9l0PJbg9I84k7Jr3zu2OBrZwUCSVcQYBlFDFkqD9T80ONFdYKX1dnVX81rvkeHAGRXeL75ByBu9wDbDqhWqBAx10HTAACgbKLN5_YKhQ1_acN2riplkT7cS0805fZpmSRyLu_xd_xtBRa4SNG9YjnOxBiJv7oymvcn0MXwLZGpM28IUIkqSnZdngYxKEZLRGOWi-crHOJHhElQUBQoiN9RDmrgLNVcMhpvu_7eLWOsCZ0_tdCDbqtkNeWBp5mFf2ykRI5-BI8G3xBbHrjrG3xTVvkBu2CTbbxUxLyv63WBEIpD-kmckIuhWxQrb_8DxDQCuRg2hQPyJwMY2RQcgU0CqB5yRhbG22aZczf-fIlovFSVDrJJIbI_V1Elm-6KWAn3P64KfKDvKAhDyAAfS9ChuTmtWyXr-GUHWyAKzWu6Rq5mMbcEmBijcUlRCZLkp8Bdn0jgzw64w0A1_VnC5Md4VaDoB2Beu8Tv4balnFw-AcI55NHbIXeBxDPB-FakLiu5x71laBXWTBa2_vVPb5e7TZu4kkpWzpVbw_EmVDVhFx-16BJSXCXovmxanlknIfDhWEkX_ZLASWnxE5_Vv8lDPxLb_s0mafKg7F6Ys_JZIOogNPYWn-tgIy5tvsNBmyCX6Lky7dQSCU_vmfIBw3BQ5pzY5QhNk4BQXsXwOhDU98ALq6mb-79pU=w534-h462-no" style="width: 480px;"&gt;
&lt;p class="caption"&gt;Ventana de instalación gráfica de EALite.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ahora, es necesario crear un mecanismo simple para la ejecución de EA.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1a498a8b90404725969afd27382e7268-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'mkdir $HOME/.local/bin'
&lt;a name="rest_code_1a498a8b90404725969afd27382e7268-2"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; $HOME/.local/bin/ealite'
&lt;a name="rest_code_1a498a8b90404725969afd27382e7268-3"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'chmod 755 $HOME/.local/bin/ealite'
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-ealite"&gt;
&lt;h2&gt;Ejecutar EALite&lt;/h2&gt;
&lt;p&gt;Ahora, podemos usar el visor de Enterprise Architect.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1c7afedb475b4fa5a6d25035ea442cc9-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;/pre&gt;&lt;p&gt;Cuando iniciemos el sistema operativo, requerimos de iniciar el contenedores
antes de ejecutar la instrucción anterior, &lt;code&gt;sudo lxc start ea&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="EA Viewer abierto." src="https://lh3.googleusercontent.com/wbMbA11Vd9AgfS0hvKCYEBYVZp660AXH80_KAeqZEyq2ggaL_iHQqAcaggwRE4zkFOl62UFIRLCCZmigMYrLikFclrpTQmQaquhvx0F65C5RJYvLf9QAaXUewDkVpOfozzjiA1l6wQEnv4HpLMdwggdt7te3zjvtRNbO920-K4Au8bDzndkqPHSyw4WNxVWodelblTN7vxzFihA9lCVvxmakeYoQENBM_bWy_TaL_GMB35HGsiLI2JR57QlINZI3oqeWFvfwIRvchKO_P2z6VCvBYZpINl4TTTWV2wX4LOtzl35sRsdusctA8evs8kNg5LTIQWlk1jjFFxb3lJQ6H9XiSA6LEtI4Eo0W3JunTevcVi9fpP8ufGvO6Ije5KbnV6ypZJofdgkG5x9tcKHb8Ym2S7WFb-wscTtXbdlvzdp3_SDegx7eG8UQ8agIUz8KdoooernSaqP5jYnJYujIttu1dyn0jHLPZcHrs6-uzDzHwuU_Eg8InTJgIKGZusIiNBPLz0-p4fg9dXx_tCn5CzXb3U_XlnRSZP6oFG-4RcYqjhKr4uO3qX3pZMN7XYh7dWqNLuAjDo6Ib5T61VvGlERSkJb0uQTOERCvQTezeJ0mIoq0ga_cAgT7MmWVj-DIn5mBMOesJIVyVG6QPQDGXkyZPaoCn_FhRWIREuliguWTA5KNA0Dk9PCcVWLwepA3ON12V471PIcPrZW0z5IVi4VjpxUz2cxlG1vVN08sYCX3gFs=w1135-h637-no" style="width: 480px;"&gt;
&lt;p class="caption"&gt;EA Viewer abierto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine." src="https://lh3.googleusercontent.com/2YXJxM7mZ7Dv4mChiwLFit1NKIrlZ7x3RhdEwLQ1w0tnryA35WhdELI6epGFAYfGTm622A2BhyMD-pxg_keBCwXcunUrpprcV9XoUGk34-9r0LVq8Z4rCleWidDzErnoqgZLDWp00Gz0XOMY49rHOKLNzHoWNWpVknQFPBytIbSO2U4Vka3zyyuiwkyD5sR54UyQtP4Dg7jqMacI2hzuAEGbp8bv1-dcne16Gf3VsmDBjxcSUz4nMzZx3NQinwveI38FrRK_Vyy2FTCuvjYM3XsLWXM_m1ZmPtGBBRR_BOGKZHLZZ91WmPwr3mwqTHtwzKKjYkf0jPpL7mjwidWIVOYYGkHjFcT0YSZxmOoAFb8hWn3tAfMvXVv4aFfHGmBsVL5NgNZyqxBFYIiN8x26jj1GCMoDvZpRCCaJAfXY8qOymGSJ2WkDEsXl40mbsrr8fRnx1vBbrVvd2a-YBVeanPBxZwTmH3cQ569xY6cOqqf4lpazo0EbKBAoexehF18LlDhCgsjKTY_DNTnfu5thc3veQkfSFtUeUXHlf-a1VulTGlWqafZzSdaJrn4pbT-cOKHPknpIXJkkFAtnPffRfnHtdJ-QKHFEh2JTNxN6BGm4AyY3WP2iF8hFHuUurwycv9mUp3XT8vowPbTvTBxsPVrwxOl10dgwbB_UkDhLoyNAMJG_hhHuLSkGEBI-oFO5OzYGhXS1qnfUG_25wzCAyviTKoi06TwhikC8E-cXxGtiJIo=s250-k-no" style="width: 480px;"&gt;
&lt;p class="caption"&gt;Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Puedes asegurar una forma simple de ejecutar EALite creando una rutina de
lanzamiento con las dos líneas anteriores en un archivo que sea reconocido en
el &lt;code&gt;path&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-1"&gt;&lt;/a&gt;mkdir -p $HOME/.local/bin
&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-2"&gt;&lt;/a&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; $HOME/.local/bin/ealite
&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-3"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-5"&gt;&lt;/a&gt;EOF
&lt;a name="rest_code_e28d8356651a48ee98a79d6ddf4ecc01-6"&gt;&lt;/a&gt;chmod 755 $HOME/.local/bin/ealite
&lt;/pre&gt;&lt;p&gt;La ejecución con &lt;code&gt;sudo&lt;/code&gt; puede omitirse si se añade el usuario a un grupo
que permita la ejecución de lxc. Más adelante, haré una publicación sobre como
hacerlo. Por ahora, diviértete ejecutando &lt;code&gt;ealite&lt;/code&gt; e ingresando la
contraseña de administrador.&lt;/p&gt;
&lt;p&gt;Para abrir un proyecto, recuerda usar &lt;code&gt;file push&lt;/code&gt; y explorar dentro del
contenedor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compartir"&gt;
&lt;h2&gt;Compartir&lt;/h2&gt;
&lt;p&gt;Para compartir el contenedor, puedes publicarlo y exportar la imagen.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_2466b970e137407db96ce51c2051976b-1"&gt;&lt;/a&gt;sudo lxc publish ea --alias ealite
&lt;a name="rest_code_2466b970e137407db96ce51c2051976b-2"&gt;&lt;/a&gt;sudo lxc image export ealite
&lt;/pre&gt;&lt;p&gt;La imagen exportada es un archivo &lt;code&gt;tar.gz&lt;/code&gt; con el nombre asociado al
&lt;em&gt;fingerprint&lt;/em&gt; (una secuencia alfanumérica). Luego se debe importar la imagen
y hacer &lt;code&gt;launch&lt;/code&gt; nuevamente con el perfil.&lt;/p&gt;
&lt;p&gt;También puedes exportar directamente el contenedor, lo cual es recomendable
porque lleva con ello la configuración del perfil GUI y es listo para usar
una vez hagas la importación.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_6d707b5703504619859637becf564d7e-1"&gt;&lt;/a&gt;sudo lxc export ea ea.tar.gz --optimized-storage
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sparxsystems.eu/enterprisearchitect/ea-lite-edition/"&gt;EA Viewer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://askubuntu.com/questions/827070/cant-run-glxgears-in-root-on-lxc-2-0-container/827146"&gt;can't run “glxgears” in root on lxc 2.0 container&lt;/a&gt;.
Solución a un posible error usando GUI en LXC.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.simos.info/how-to-easily-run-graphics-accelerated-gui-apps-in-lxd-containers-on-your-ubuntu-desktop/"&gt;How to easily run graphics-accelerated GUI apps in LXD containers on your Ubuntu desktop&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://linuxcontainers.org/lxd/getting-started-cli/"&gt;LXD Getting started - command line&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://us.images.linuxcontainers.org/"&gt;Image server for LXC and LXD&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wiki.winehq.org/Winetricks"&gt;Winetricks&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/31228191/how-do-i-export-a-lxc-container"&gt;How do I export a lxc container?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>lxc</category><category>lxd</category><category>wine</category><guid>https://cosmoscalibur.github.io/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</guid><pubDate>Mon, 11 Nov 2019 23:21:26 GMT</pubDate></item></channel></rss>