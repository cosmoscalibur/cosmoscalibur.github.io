<?xml version='1.0' encoding='utf-8'?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Cosmoscalibur (Publicaciones sobre tecnología)</title><link>https://www.cosmoscalibur.com/</link><description/><atom:link href="https://www.cosmoscalibur.com/categories/cat_tecnologia.xml" rel="self" type="application/rss+xml"/><language>es</language><copyright>Contents © 2020 &lt;a href="mailto:cosmoscalibur@gmail.com"&gt;Edward Villegas Pulgarin&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Mon, 29 Jun 2020 22:55:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Instalar Python Anaconda</title><link>https://www.cosmoscalibur.com/blog/instalar-python-anaconda/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;En los últimos años, una herramienta se ha popularizado no solo como una base
para el ecosistena de la analítica de datos ("ciencia de datos" como llaman
también algunos) sino también en general para el desarrollo en Python
(científico, web o de propósito general). Esta herramienta es Anaconda, que no
solo nos facilita un sistema de distribución de paquetes multiplataforma, un
repositorio principal con amplio soporte multiplataforma (canal &lt;em&gt;default&lt;/em&gt; o
&lt;em&gt;anaconda&lt;/em&gt;) sino un gestor de ambientes para permitir aislar nuestras
dependencias facilitando la reproducibilidad y evitando los conflictos.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="obtener-instalador"&gt;
&lt;h2&gt;Obtener instalador&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso es obtener el instalador de Python Anaconda según nuestro
sistema operativo, modo de instalación y limitación de espacio de
almacenamiento o ancho de banda. Aunque Anaconda aún dispone de instaladores de
Python 2.7, no recomiendo su uso sino las versiones asociadas a Python 3.X
(Python 2 perdió soporte el 31 de diciembre de 2019).&lt;/p&gt;
&lt;p&gt;Si tenemos limitación de espacio de almacenamiento o ancho de banda, podemos
usar el instalador de
&lt;a class="reference external" href="https://docs.conda.io/en/latest/miniconda.html"&gt;miniconda&lt;/a&gt;, el cual
corresponde a un instalador de alrededor de 60 MB en los 3 sistemas operativos.
Este instalador nos da mayor control sobre los paquetes instalados, y solo
incluye por defecto lo necesario para el interprete de Python y el gestor
Conda.&lt;/p&gt;
&lt;p&gt;Si queremos una colección de paquetes listos para usar, iremos al instalador de
&lt;a class="reference external" href="https://anaconda.org/"&gt;Python Anaconda&lt;/a&gt; (seleccionamos &lt;em&gt;Download Anaconda&lt;/em&gt;).
Ahora vamos a la sección de instaladores (&lt;em&gt;Anaconda Installers&lt;/em&gt;) y escogeremos
el acorde a nuestra necesidad:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Instalador gráfico de 32 y 64 bits para Windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instalador por línea de comandos para Windows (64 bits).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instalador gráfico y por línea de comandos para Mac (64 bits).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esta descarga es de alrededor de 500 MB para todos los casos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-por-linea-de-comandos"&gt;
&lt;h2&gt;Instalación por línea de comandos&lt;/h2&gt;
&lt;p&gt;La instalación por línea de comandos aplica de la misma manera tanto para Mac
como para Linux, usando ambos un instalador basado en código bash (indiferente
si es Anaconda o Miniconda).&lt;/p&gt;
&lt;p&gt;Para este caso nos basaremos en la instalación silenciosa &lt;a class="citation-reference" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#cmd" id="id1"&gt;[cmd]&lt;/a&gt; para evitar las
preguntas interactivas y así despreocuparnos durante la instalación. Invocamos
el instalador con Bash de la siguiente forma (asegurate de usar la ruta
completa y correcta del instalador &lt;code&gt;sh&lt;/code&gt; que usarás).&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8970223d5aa34319b245922a9bf6273b-1"&gt;&lt;/a&gt;bash Anaconda3-2020.02-Linux-x86_64.sh -b -p &lt;span class="nv"&gt;$HOME&lt;/span&gt;/anaconda
&lt;a name="rest_code_8970223d5aa34319b245922a9bf6273b-2"&gt;&lt;/a&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;". &lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;&lt;span class="s2"&gt;/anaconda/etc/profile.d/conda.sh"&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.bashrc
&lt;a name="rest_code_8970223d5aa34319b245922a9bf6273b-3"&gt;&lt;/a&gt;&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/.bashrc
&lt;/pre&gt;&lt;p&gt;En la invocación de Bash, el argumento &lt;code&gt;-b&lt;/code&gt; implica la aceptación de
licencias y con &lt;code&gt;-p&lt;/code&gt; indicamos la ruta para la instalación de Anaconda
(puedes cambiarla a tu deseo).&lt;/p&gt;
&lt;p&gt;La segunda y tercera línea son específicas si usas una consola Bash. Esto
permite reconocer el gestor Conda por la consola cuando se inicia una nueva
sesión y la última línea que se aplique para la sesión actual.&lt;/p&gt;
&lt;p&gt;Aunque no es mi preferencia y además puede generar potenciales conflictos, si
deseas que el entorno de Python Anaconda esté activado por defecto puedes
agregar en el &lt;code&gt;.bashrc&lt;/code&gt; la línea &lt;code&gt;conda activate&lt;/code&gt;.&lt;/p&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/UFfsg56qigY?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;p&gt;La versión de &lt;em&gt;Anaconda Navigator&lt;/em&gt; incluida en 2020.02 en Linux presenta un
error, por lo cual, si al ejecutarlo ves el mensaje
&lt;code&gt;UnboundLocalError: local variable 'DISTRO_NAME' referenced before assignment&lt;/code&gt;
bastará con actualizar el paquete &lt;a class="citation-reference" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#navigator" id="id2"&gt;[navigator]&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9bd59e1f25bd4cabb229171fc90bd5f3-1"&gt;&lt;/a&gt;conda update anaconda-navigator
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="instalacion-grafica"&gt;
&lt;h2&gt;Instalación gráfica&lt;/h2&gt;
&lt;p&gt;La instalación en Windows con el instalador gráfico &lt;a class="citation-reference" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#gui" id="id3"&gt;[gui]&lt;/a&gt; es sencilla. Las
opciones por defecto son justamente las recomendadas por lo cual solo es
necesario dar clic en "&lt;em&gt;Next&lt;/em&gt;" siempre.&lt;/p&gt;
&lt;p&gt;Es fuertemente recomendado usar la instalación con las opciones por defecto,
para evitar futuros conflictos. Esto es, instalar "&lt;em&gt;Just Me&lt;/em&gt;" para no requerir
permisos de administrador, no agregar al &lt;code&gt;PATH&lt;/code&gt; (evitar conflictos con
programas que hagan uso de Python u otros paquetes incluidos en Anaconda) y
registrar Python Anaconda como Python por defecto (así será reconocido por los
editores de código que detectan Anaconda).&lt;/p&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/zFk6beeQ-CU?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;p&gt;La instalación gráfica en Mac puedes seguir también las opciones por defecto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="verificar-instalacion"&gt;
&lt;h2&gt;Verificar instalación&lt;/h2&gt;
&lt;p&gt;Basta con validar la lista de paquetes incluidos para saber que funciona
adecuadamente Anaconda. Abrimos la consola Bash (Linux o Mac) o
&lt;em&gt;Anaconda Prompt&lt;/em&gt; (Windows, o con abrir &lt;em&gt;Anaconda Navigator&lt;/em&gt; es suficiente), y
ejecutamos &lt;code&gt;conda list&lt;/code&gt;. Si observamos la lista de paquetes, funciona.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;dl class="citation"&gt;
&lt;dt class="label" id="cmd"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#id1"&gt;cmd&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;&lt;a class="reference external" href="https://conda.io/projects/conda/en/latest/user-guide/install/linux.html#installing-in-silent-mode"&gt;Installing in silent mode&lt;/a&gt;.
conda.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="navigator"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#id2"&gt;navigator&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/ContinuumIO/anaconda-issues/issues/11662"&gt;UnboundLocalError: local variable 'DISTRO_NAME' referenced before assignment&lt;/a&gt;. Anaconda issues.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="gui"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://www.cosmoscalibur.com/blog/instalar-python-anaconda/#id3"&gt;gui&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.anaconda.com/anaconda/install/windows/"&gt;Installing on Windows&lt;/a&gt;. Anaconda.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>instalar anaconda</category><category>instalar python</category><category>python</category><category>python anaconda</category><category>python linux</category><category>python mac</category><category>python windows</category><guid>https://www.cosmoscalibur.com/blog/instalar-python-anaconda/</guid><pubDate>Mon, 29 Jun 2020 17:18:07 GMT</pubDate></item><item><title>Ver Netflix juntos pero separados</title><link>https://www.cosmoscalibur.com/blog/ver-netflix-juntos-pero-separados/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Ante la necesidad de cuidarnos en esta cuarentena, hemos perdido los momentos
de cine o de maratones con familia y amigos, pero hasta en esto hay forma de
innovar y buscar opciones para mantener un equivalente de estas actividades
sin descuidar nuestra salud, cumpliendo cada protocolo requerido gracias a la
tecnología.&lt;/p&gt;
&lt;p&gt;Así que usemos algunos trucos para ver Netflix acompañados.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="transmisiones-en-vivo"&gt;
&lt;h2&gt;Transmisiones en vivo&lt;/h2&gt;
&lt;p&gt;Una opción que requiere tal vez un poco de ajustes y no es precisamente legal,
es aprovechar la opción para crear transmisiones en vivo a través de
plataformas como &lt;a class="reference external" href="https://studio.youtube.com"&gt;YouTube&lt;/a&gt; (requieres canal),
&lt;a class="reference external" href="https://www.facebook.com/live/producer/"&gt;Facebook&lt;/a&gt;, Twitch y otras.&lt;/p&gt;
&lt;p&gt;No es legal porque al pagar nuestra suscripción de Netflix solo adquirimos el
derecho para visualización y uso personal, no para retransmisión o
distribución.&lt;/p&gt;
&lt;p&gt;Pero si aún si deseas hacerlo, una opción es usar
&lt;a class="reference external" href="https://obsproject.com/"&gt;OBS&lt;/a&gt; para su transmisión, incluso podrías usar el
complemento de VirtualCam
(&lt;a class="reference external" href="https://obsproject.com/forum/resources/obs-virtualcam.949/"&gt;Windows&lt;/a&gt; y
&lt;a class="reference external" href="https://github.com/CatxFish/obs-v4l2sink"&gt;Linux&lt;/a&gt;) para transmitirlo a través
de videollamada. Ahora, el tema de ser ilegal esto, es que las plataformas
poseen sistemas para detectar los audios con derechos de autor (aún no el video
en si) y con esto se bloquea o retira la transmisión, lo cual representará
inconvenientes si se desea agregar personas durante la transmisión o la
transmisión simplemente deja de funcionar (en este sentido, tal vez funcione
mejor la opción por videollamada con VirtualCam -compartir pantalla no tiene la
misma calidad de audio y video-).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="netflix-party"&gt;
&lt;h2&gt;Netflix party&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.netflixparty.com/"&gt;Netflix Party&lt;/a&gt; es un
&lt;a class="reference external" href="https://chrome.google.com/webstore/detail/netflix-party/oocalimimngaihdkbihfgmpkcpnmlaoa?hl=en"&gt;complemento para Chrome&lt;/a&gt;
que permite sincronizar los controles de Netflix de los usuarios que compartan
la sesión creada, por lo cual es necesario que cada uno posea acceso a Netflix.
Por este motivo es legal, pues no es una retransmisión, todos los usuarios usan
su suscripción y el complemento solo se encarga de que todos estén en la misma
posición y habilitarles un chat integrado.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/ver-netflix-juntos-pero-separados/netflixparty.png"&gt;&lt;img alt="Netflix Party y la columna de chat." src="https://www.cosmoscalibur.com/images/ver-netflix-juntos-pero-separados/netflixparty.thumbnail.png" style="width: 400px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Así luce Netflix Party y su columna de chat.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Una buena recomendación, es permitir que el control lo puedan tener todos los
participantes de la sesión y mantener la columna de chat habilitada (cuando
alguno pierde conexión el control no para).&lt;/p&gt;
&lt;p&gt;Una vez abres la película o serie, das clic en el botón de la extensión y te
generará el enlace para compartir la sesión. Ten presente que esto es válido
por película o capítulo, una vez termina se pierde la sincronización.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rave"&gt;
&lt;h2&gt;Rave&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://rave.io/"&gt;Rave&lt;/a&gt; es una aplicación para
&lt;a class="reference external" href="https://apps.apple.com/us/app/wemesh/id929775122"&gt;iOS&lt;/a&gt; y
&lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.wemesh.android"&gt;Android&lt;/a&gt;
que permite sincronizar Netflix, Youtube y otras plataformas, e incluso
permitir la transmisión desde archivos en Google Drive y Dropbox. Además
incluye chat y llamada en dicha transmisión.&lt;/p&gt;
&lt;p&gt;Importante al iniciar la transmisión, configurar la privacidad de la sesión
Rave si quieres solo compartirlo con tus amigos, de otra forma cualquier
usuario Rave puede ingresar (es molesto porque participaran del chat y llamada
también). La opción se encuentra al inicio del chat.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/ver-netflix-juntos-pero-separados/rave-youtube-privacidad.jpg"&gt;&lt;img alt="Opción de privacidad y compartir enlace de sesión Rave." src="https://www.cosmoscalibur.com/images/ver-netflix-juntos-pero-separados/rave-youtube-privacidad.thumbnail.jpg" style="width: 250px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Opción de privacidad y compartir enlace de sesión Rave. Ejemplo viendo
Matarife en Youtube.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Es necesario resaltar que Rave requiere crear cuenta pero solo requieres pagar
para eliminar publicidad. Todas las personas que participan deben tener también
cuenta en Rave. Aparentemente no es necesario que todos tengan suscripción de
Netflix (tal vez tienen convenio pero igual requiere gastar créditos "K", y
esto podría explicarlo).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>compartir netflix</category><category>sincronizar netflix</category><category>sincronizar transmisión</category><category>sincronizar video</category><guid>https://www.cosmoscalibur.com/blog/ver-netflix-juntos-pero-separados/</guid><pubDate>Sun, 21 Jun 2020 21:47:01 GMT</pubDate></item><item><title>Determinar intersecciones en el diagrama de Venn con R</title><link>https://www.cosmoscalibur.com/blog/determinar-intersecciones-en-el-diagrama-de-venn-con-r/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Esta entrada es mi primera entrada asociada al lenguaje R y sobre mi primer paquete en R: &lt;a href="https://github.com/cosmoscalibur/venn.compute"&gt;&lt;code&gt;venn.compute&lt;/code&gt;&lt;/a&gt;. Este paquete surge por un caso de uso particular que estaba ayudando a automatizar de determinar los elementos (no solo el dibujo ni la cantidad) de las intersecciones y específicos de un diagrama de Venn, útil en bioinformática para comparación de genes.  &lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;p&gt;Así, esta entrada es tipo tutorial de como usar el paquete que hice para este fin.  &lt;/p&gt;
&lt;h2&gt;Caso de uso&lt;/h2&gt;
&lt;p&gt;Se posee la información de múltiples conjuntos en archivos de texto plano, en donde cada elemento es una línea de dicho archivo. No siempre es la misma cantidad de conjuntos y se desea poder generar archivos de salida para revisar las intersecciones y elementos específicos. Usualmente, puede importar el gráfico por lo cual se puede incluir.  &lt;/p&gt;
&lt;p&gt;Como ejemplo se usarán 3 archivos ubicados en una carpeta &lt;code&gt;tests&lt;/code&gt;, con los nombres &lt;code&gt;primes.txt&lt;/code&gt;, &lt;code&gt;even.txt&lt;/code&gt; y &lt;code&gt;fibo.txt&lt;/code&gt; con el contenido de los números primos, pares y de Fibonacci hasta el 20.&lt;/p&gt;
&lt;h2&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Por el momento, se debe instalar el paquete a partir de GitHub, por lo cual debes usar la utilidad incluida en &lt;code&gt;devtools&lt;/code&gt; en lugar del mecanismo de instalación habitual (ya está sometido el paquete, así que en el futura podría usarse).  &lt;/p&gt;
&lt;p&gt;Si usas Anaconda en Linux, probablemente debas configurar la ruta del ejecutable de &lt;code&gt;tar&lt;/code&gt; (al instalar desde GitHub genera un error indicando que no encuentra el ejecuta &lt;code&gt;sh: 1: /bin/gtar: not found&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;Sys.setenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"/bin/tar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# Si es Anaconda Linux&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ahora sí, haremos la instalación desde el repositorio de GitHub del paquete (se indica &lt;code&gt;usuario/paquete&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;devtools&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;install_github&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"cosmoscalibur/venn.compute"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Downloading&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;GitHub&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;venn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;compute&lt;/span&gt;&lt;span class="nv"&gt;@master&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="n"&gt;formatR&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.6&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;1.7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;CRAN&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="n"&gt;Installing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;packages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;formatR&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Updating&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HTML&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;index&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'.Library'&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Making&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'packages.html'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="err"&gt;✔&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;checking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;file&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;RtmpT7UVx3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;remotes61d65fec5ae1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;venn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;compute&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;f4fb43&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;─&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;preparing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;venn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;compute&lt;/span&gt;&lt;span class="err"&gt;’:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;✔&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;checking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;DESCRIPTION&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;─&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;checking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;endings&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;─&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;checking&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;empty&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;unneeded&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;directories&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;─&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;building&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;venn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compute_1&lt;/span&gt;&lt;span class="mf"&gt;.1.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gz&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h2&gt;Ejecución&lt;/h2&gt;
&lt;p&gt;Lo primero que debemos hacer es cargar el paquete.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;venn.compute&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Lectura de archivos&lt;/h3&gt;
&lt;p&gt;Para leer los archivos, he creado una función específica para la lectura, de manera que el contenido de los archivos sea cargado a arreglos de caracteres y estos se anexan a una lista. Adicional, se asocian los nombres personalizados a los conjuntos de elementos de cada archivo.&lt;/p&gt;
&lt;p&gt;Las rutas a los archivos y los nombres que asociaremos, se agregan como
arreglos de caracteres, y tiene soporte genérico para una cantidad diferente
a la ilustrada.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;sets&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="nf"&gt;read.lists_from_files&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"primes.txt"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"even.txt"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                                &lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"fibo.txt"&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
                              &lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"primes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"even"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"fibo"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="nf"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;primes&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;"1"&lt;/span&gt;  &lt;span class="ss"&gt;"2"&lt;/span&gt;  &lt;span class="ss"&gt;"3"&lt;/span&gt;  &lt;span class="ss"&gt;"5"&lt;/span&gt;  &lt;span class="ss"&gt;"7"&lt;/span&gt;  &lt;span class="ss"&gt;"11"&lt;/span&gt; &lt;span class="ss"&gt;"13"&lt;/span&gt; &lt;span class="ss"&gt;"17"&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;even&lt;/span&gt;
 &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;"0"&lt;/span&gt;  &lt;span class="ss"&gt;"2"&lt;/span&gt;  &lt;span class="ss"&gt;"4"&lt;/span&gt;  &lt;span class="ss"&gt;"6"&lt;/span&gt;  &lt;span class="ss"&gt;"8"&lt;/span&gt;  &lt;span class="ss"&gt;"10"&lt;/span&gt; &lt;span class="ss"&gt;"12"&lt;/span&gt; &lt;span class="ss"&gt;"14"&lt;/span&gt; &lt;span class="ss"&gt;"16"&lt;/span&gt; &lt;span class="ss"&gt;"18"&lt;/span&gt;

&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;fibo&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ss"&gt;"1"&lt;/span&gt;  &lt;span class="ss"&gt;"2"&lt;/span&gt;  &lt;span class="ss"&gt;"3"&lt;/span&gt;  &lt;span class="ss"&gt;"5"&lt;/span&gt;  &lt;span class="ss"&gt;"8"&lt;/span&gt;  &lt;span class="ss"&gt;"13"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Como observamos, se han creado las listas nombradas con los contenidos de los archivos. Estos nombres son los usados para crear los archivos, asociar las listas nombradas de las intersecciones y el gráfico (usa un paquete externo donde el ingreso de esta manera permite pasarlo como única variable).&lt;/p&gt;
&lt;h3&gt;Determinar elementos&lt;/h3&gt;
&lt;p&gt;Ya con los conjuntos cargados en la lista, podemos determinar los elementos que van en cada área del diagrama de Venn (intersecciones y específicos).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;venn.compute_specific&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;dl&gt;
    &lt;dt&gt;$primes_even_fibo&lt;/dt&gt;
        &lt;dd&gt;'2'&lt;/dd&gt;
    &lt;dt&gt;$primes_even&lt;/dt&gt;
        &lt;dd&gt;&lt;/dd&gt;
    &lt;dt&gt;$primes_fibo&lt;/dt&gt;
        &lt;dd&gt;&lt;ol class="list-inline"&gt;
    &lt;li&gt;'1'&lt;/li&gt;
    &lt;li&gt;'3'&lt;/li&gt;
    &lt;li&gt;'5'&lt;/li&gt;
    &lt;li&gt;'13'&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
    &lt;dt&gt;$even_fibo&lt;/dt&gt;
        &lt;dd&gt;'8'&lt;/dd&gt;
    &lt;dt&gt;$primes&lt;/dt&gt;
        &lt;dd&gt;&lt;ol class="list-inline"&gt;
    &lt;li&gt;'7'&lt;/li&gt;
    &lt;li&gt;'11'&lt;/li&gt;
    &lt;li&gt;'17'&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
    &lt;dt&gt;$even&lt;/dt&gt;
        &lt;dd&gt;&lt;ol class="list-inline"&gt;
    &lt;li&gt;'0'&lt;/li&gt;
    &lt;li&gt;'4'&lt;/li&gt;
    &lt;li&gt;'6'&lt;/li&gt;
    &lt;li&gt;'10'&lt;/li&gt;
    &lt;li&gt;'12'&lt;/li&gt;
    &lt;li&gt;'14'&lt;/li&gt;
    &lt;li&gt;'16'&lt;/li&gt;
    &lt;li&gt;'18'&lt;/li&gt;
&lt;/ol&gt;
&lt;/dd&gt;
    &lt;dt&gt;$fibo&lt;/dt&gt;
        &lt;dd&gt;&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;Usando la convención del nombre asignado a los conjuntos unidos por guion bajo, se distinguen las áreas asociadas. Así, &lt;strong&gt;\$primes_even_fibo&lt;/strong&gt; representa el área de intersección de los tres conjuntos, y posee solo un elemento (&lt;code&gt;'2'&lt;/code&gt;), y &lt;strong&gt;\$fibo&lt;/strong&gt; representa los específicos de dicho conjunto, es decir, los que pertenecen exclusivamente a este y no a intersecciones con otros, el cual en este caso es vacío.  &lt;/p&gt;
&lt;p&gt;Si esta información es masiva, es conveniente escribir el resultado en archivos y no en memoria. Así, debemos crear una carpeta para los archivos e indicamos su ruta como segundo argumento.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;venn.compute_specific&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"output"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Podemos verificar la creación de los archivos con la misma convención de nombre y extensión &lt;code&gt;txt&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"output"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;ol class="list-inline"&gt;
    &lt;li&gt;'even_fibo.txt'&lt;/li&gt;
    &lt;li&gt;'even.txt'&lt;/li&gt;
    &lt;li&gt;'fibo.txt'&lt;/li&gt;
    &lt;li&gt;'primes_even_fibo.txt'&lt;/li&gt;
    &lt;li&gt;'primes_even.txt'&lt;/li&gt;
    &lt;li&gt;'primes_fibo.txt'&lt;/li&gt;
    &lt;li&gt;'primes.txt'&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Graficar diagrama de Venn&lt;/h3&gt;
&lt;p&gt;Para obtener el diagrama tengo una función que define un flujo por defecto que crea los archivos del paso anterior y adicional el gráfico del diagrama con el paquete &lt;a href="https://cran.r-project.org/web/packages/VennDiagram/index.html"&gt;&lt;code&gt;VennDiagram&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;venn.compute_plot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sets&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;output_dir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;file.path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"tests"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"output"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Además de generar como les conté, los archivos de las intersecciones y específicos, se generó un archivo cuyo nombre es la convención seguida para la intersección de la totalidad de conjuntos y con extensión &lt;code&gt;png&lt;/code&gt;, &lt;code&gt;primes_even_fibo.png&lt;/code&gt;.  &lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure "&gt;&lt;a href="https://www.cosmoscalibur.com/images/determinar-intersecciones-en-el-diagrama-de-venn-con-r/primes_even_fibo.png" class="image-reference"&gt;&lt;img src="https://www.cosmoscalibur.com/images/determinar-intersecciones-en-el-diagrama-de-venn-con-r/primes_even_fibo.thumbnail.png"&gt;&lt;/a&gt;&lt;p&gt;Diagrama de Venn generado para los 3 conjuntos.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>bioinformática</category><category>diagrama de Venn</category><category>lenguaje r</category><guid>https://www.cosmoscalibur.com/blog/determinar-intersecciones-en-el-diagrama-de-venn-con-r/</guid><pubDate>Sun, 14 Jun 2020 00:40:00 GMT</pubDate></item><item><title>Reformas del blog: Parte 1</title><link>https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Bueno, he estado en múltiples ocasiones por escribir sobre mantener un blog, y
hoy fue el caso, pero centrado en unas actualizaciones que he hecho para
mejorar la experiencia de los lectores que usan su celular y deben soportar
altos tiempos de carga y una alta descarga en imágenes cuando las contiene.&lt;/p&gt;
&lt;p&gt;Esto puede no ser válido para todos, pero resulta de mi experiencia particular
y, bajo la condición de tener un sitio generado de forma estática con Nikola
y alojado en GitHub. He planteado parte 1 porque pretendo hacer unas reformas
adicionales más adelante.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="pagespeed"&gt;
&lt;h2&gt;PageSpeed&lt;/h2&gt;
&lt;p&gt;Antes que nada esto surge porque estuve haciendo seguimiento a las métricas de
la herramienta PageSpeed [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#ps"&gt;ps&lt;/a&gt;] que ofrece Google integrada a su plataforma de
Analytics (puedes usar de forma local con Lighthouse [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#lh"&gt;lh&lt;/a&gt;]). El análisis
entrega no solo métricas sino también algunas recomendaciones y por ello
procedí a ponerme en ello (dado que la mayor parte de mis lectores usan su
celular).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sistema-de-comentarios"&gt;
&lt;h2&gt;Sistema de comentarios&lt;/h2&gt;
&lt;p&gt;Si bien pensar en una forma de interacción directa con los lectores del blog
es importante, se debe evaluar en el tiempo su impacto. En el caso de mi blog,
la cantidad de comentarios durante su historia lo hace despreciable cuando
contrasto con la penalización en el tiempo de carga que ha introducido el
sistema de comentarios.&lt;/p&gt;
&lt;p&gt;Disqus [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#dqs"&gt;dqs&lt;/a&gt;] es un sistema de comentarios importante, permite socializar y asocia un
perfil de los lectores y los generadores de contenido, lo cual permite también
generar tráfico, pero en mi caso tampoco representa una fuente de tráfico
importante ni de una contribución que quiera considerar.&lt;/p&gt;
&lt;p&gt;Esto me llevó inicialmente a pensar en eliminar el sistema de comentarios,
pero también cuando veo como las publicaciones pueden tener mayor impacto en
redes sociales y que Facebook ofrece su sistema de comentarios [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#fb-comments"&gt;fb-comments&lt;/a&gt;],
no veo descabellado cambiar. La mayor parte de mis lectores poseen Facebook y
el tráfico a razón de Facebook hoy es el mayor entre las fuentes de tráfico
sociales. Reduce el bloqueo de 800 ms a 400 ms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualización 29 de junio de 2020&lt;/strong&gt;: Por alguna razón el &lt;em&gt;plugin&lt;/em&gt; de
comentarios de Facebook dejó de funcionar y además observo una caída abrupta en
la analítica de visitas de Facebook que no se verifica con Google. Me da mala
espina Facebook y retorno a Disqus.&lt;/p&gt;
&lt;p&gt;Es necesario revisar como permitir el modo de carga asíncrono de Disqus que sea
compatible con Nikola.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="publicidad"&gt;
&lt;h2&gt;Publicidad&lt;/h2&gt;
&lt;p&gt;El blog no ha tenido publicidad, pero hace un tiempo he venido revisando el
tema de monetizar el blog. La idea es hacerlo de una forma no invasiva pero
sin muchas complicaciones para mi también.&lt;/p&gt;
&lt;p&gt;Es así como Google AdSense [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#gads"&gt;gads&lt;/a&gt;] por sus procesos de validación y la
penalización que he sufrido en tiempo de carga por la adición en el código no
me parece prudente. Adicional, no puedo asegurar que la publicidad mostrada
sea realmente acorde al blog (así pueda serlo para el lector).&lt;/p&gt;
&lt;p&gt;Por ello, he decido probar las opciones estáticas del programa de asociados de
Amazon [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#amz"&gt;amz&lt;/a&gt;]. No hay generación dinámica, ni selección de la posición óptima
de la publicidad, pero puedo decidir que promocionar en mis publicaciones,
ubicarla donde considere que no afecta la lectura o que genere confusión y que
además aporte realmente al lector que llega a mi publicación (por ejemplo,
recomendando un libro sobre el tema de la publicación).&lt;/p&gt;
&lt;p&gt;Es posible que no sea permanente, pero quiero probarlo. El programa de
asociados también tiene unos tiempos máximos permitiendo publicidad sin
generar conversiones. Con este cambio, el bloqueo por la presentación de
publicidad pasó de 350 ms a menos de 40 ms.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Actualización 29 de junio de 2020&lt;/strong&gt;: Al no ser de generación dinámica resulta
de difícil mantenimiento generar recomendaciones de publicidad acorde al lector
que llega a una publicación. El trabajo manual de usar producto por artículo
para hacerlo más acorde ha sido incómodo y un único producto genérico insertado
en la plantilla posee bajo impacto. He decidido esperar que llegue mi código de
Google AdSense. Tal vez la opción de Amazon sea muy buena para quienes
directamente recomiendan productos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="imagenes"&gt;
&lt;h2&gt;Imágenes&lt;/h2&gt;
&lt;p&gt;Con el fin de reducir la descarga y tiempo asociado a las imágenes, decidí
respaldar imágenes en el repositorio y usar la opción de thumbnail de Nikola
[&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#thumb"&gt;thumb&lt;/a&gt;]. Esto permite usar una versión de tamaño reducido para los artículos
pero que vincula a la imagen original (la cual puedo optimizar también).&lt;/p&gt;
&lt;p&gt;Esto tiene una ventaja adicional, y es asegurar la existencia de las imágenes
para el futuro sin depender de la fuente original (la cual, en la medida de lo
posible mantendré referencia) y en un futuro puede permitir opciones de
servido por CDN (una opción tentadora es Statically [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#cdn"&gt;cdn&lt;/a&gt;]), imágenes
optimizadas [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#opt"&gt;opt&lt;/a&gt;, &lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#tools"&gt;tools&lt;/a&gt;] como el uso del formato webp
[&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#webp"&gt;webp&lt;/a&gt;, &lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#caniuse"&gt;caniuse&lt;/a&gt;, &lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#fallback"&gt;fallback&lt;/a&gt;], tamaños diferentes por dispositivo
[&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#picture-media"&gt;picture-media&lt;/a&gt;] y carga diferida [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#defer"&gt;defer&lt;/a&gt;, &lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/#lazy"&gt;lazy&lt;/a&gt;]. Este cambio permitió ver
en el artículo más crítico (&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/cosmogonia-griega/"&gt;Cosmogonía griega&lt;/a&gt;) notar una reducción del
tamaño de archivos descargados (se compara el tamaño potencial de reducción de
las imágenes respecto a su peso en webp).&lt;/p&gt;
&lt;p&gt;Debo decir que respecto a la conservación de las imágenes, una de las imágenes
la fuente no se encontraba disponible y fue necesario buscar su reemplazo
(sucedió con &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/cerebro-prehistorico/"&gt;Cerebro prehistórico&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;dl class="citation"&gt;
&lt;dt class="label" id="ps"&gt;&lt;span class="brackets"&gt;ps&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;PageSpeed Insights &lt;a class="reference external" href="https://developers.google.com/speed/pagespeed/insights/"&gt;https://developers.google.com/speed/pagespeed/insights/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="lh"&gt;&lt;span class="brackets"&gt;lh&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Auditar apps web con Lighthouse &lt;a class="reference external" href="https://developers.google.com/web/tools/lighthouse/"&gt;https://developers.google.com/web/tools/lighthouse/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="dqs"&gt;&lt;span class="brackets"&gt;dqs&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Disqus &lt;a class="reference external" href="https://disqus.com/"&gt;https://disqus.com/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="fb-comments"&gt;&lt;span class="brackets"&gt;fb-comments&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Comments Plugin (Facebook) &lt;a class="reference external" href="https://developers.facebook.com/docs/plugins/comments/"&gt;https://developers.facebook.com/docs/plugins/comments/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="gads"&gt;&lt;span class="brackets"&gt;gads&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Google AdSense &lt;a class="reference external" href="https://www.google.com/adsense/start"&gt;https://www.google.com/adsense/start&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="amz"&gt;&lt;span class="brackets"&gt;amz&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Amazon Associates &lt;a class="reference external" href="https://affiliate-program.amazon.com/"&gt;https://affiliate-program.amazon.com/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="thumb"&gt;&lt;span class="brackets"&gt;thumb&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Thumbnails, The Nikola Handbook &lt;a class="reference external" href="https://getnikola.com/handbook.html#thumbnails"&gt;https://getnikola.com/handbook.html#thumbnails&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="cdn"&gt;&lt;span class="brackets"&gt;cdn&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Statically &lt;a class="reference external" href="https://statically.io/"&gt;https://statically.io/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="opt"&gt;&lt;span class="brackets"&gt;opt&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Efficiently encode images &lt;a class="reference external" href="https://web.dev/uses-optimized-images/"&gt;https://web.dev/uses-optimized-images/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="webp"&gt;&lt;span class="brackets"&gt;webp&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Serve images in next-gen formats &lt;a class="reference external" href="https://web.dev/uses-webp-images/"&gt;https://web.dev/uses-webp-images/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="caniuse"&gt;&lt;span class="brackets"&gt;caniuse&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Can I use webp? &lt;a class="reference external" href="https://caniuse.com/#search=webp"&gt;https://caniuse.com/#search=webp&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="defer"&gt;&lt;span class="brackets"&gt;defer&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Defer offscreen images &lt;a class="reference external" href="https://web.dev/offscreen-images/"&gt;https://web.dev/offscreen-images/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="lazy"&gt;&lt;span class="brackets"&gt;lazy&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Lazy load offscreen images with lazysizes &lt;a class="reference external" href="https://web.dev/codelab-use-lazysizes-to-lazyload-images/"&gt;https://web.dev/codelab-use-lazysizes-to-lazyload-images/&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="fallback"&gt;&lt;span class="brackets"&gt;fallback&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Using WebP Images with Fallback &lt;a class="reference external" href="https://usefulangle.com/post/114/webp-image-in-html-with-fallback"&gt;https://usefulangle.com/post/114/webp-image-in-html-with-fallback&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="tools"&gt;&lt;span class="brackets"&gt;tools&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;ImageOptim for various platforms &lt;a class="reference external" href="https://imageoptim.com/versions"&gt;https://imageoptim.com/versions&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="picture-media"&gt;&lt;span class="brackets"&gt;picture-media&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;&amp;lt;picture&amp;gt;: The Picture element, MDN &lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture"&gt;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>adsense</category><category>amazon</category><category>blog</category><category>comentarios</category><category>disqus</category><category>facebook</category><category>nikola</category><category>publicidad</category><guid>https://www.cosmoscalibur.com/blog/reformas-del-blog-parte-1/</guid><pubDate>Tue, 26 May 2020 21:51:39 GMT</pubDate></item><item><title>Usar la cámara de tu celular como webcam</title><link>https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Con la nueva normalidad que vivimos alrededor de la virtualidad, el uso de
videollamadas se ha incrementado y muchas cámaras incorporadas en los
equipos no poseen buenas características (o son ausentes). Adicional, el
soporte de opciones como usar el celular, una buena alternativa para no
comprar una cámara web, es amplio en Windows pero no en Linux.&lt;/p&gt;
&lt;p&gt;Así que, por ese motivo hoy les compartiré como usar la cámara del celular
(Android o iOS) como cámara web en Linux.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="droidcam"&gt;
&lt;h2&gt;DroidCam&lt;/h2&gt;
&lt;p&gt;Sin hacer muchos rodeos y comparaciones, en este asunto seré muy práctico.
La primera aplicación que me cumplió con las características y que
funcionó adecuadamente, es DroidCam [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#id1"&gt;droidcam&lt;/a&gt;]. Esta utilidad nos permite
usar la cámara del celular para reemplazar los incorporados del equipo, y
se puede hacer comunicación tanto por wifi como por el cable USB
(instalando ADB).&lt;/p&gt;
&lt;div class="section" id="instalacion-en-linux"&gt;
&lt;h3&gt;Instalación en Linux&lt;/h3&gt;
&lt;p&gt;El procedimiento de instalación puede seguirse en la página web de
DroidCam [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#linux"&gt;linux&lt;/a&gt;] pero lo lustraré para el caso de Linux Mint
(aplicable para Debian y derivados). El aspecto dependiente de la
distribución es la instalación de las 3 dependencias requeridas (GCC, Make
y Linux Headers).&lt;/p&gt;
&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  wget https://files.dev47apps.net/linux/droidcam_latest.zip
--2020-05-12 19:03:30--  https://files.dev47apps.net/linux/droidcam_latest.zip
Resolving files.dev47apps.net (files.dev47apps.net)... 104.28.5.185, 104.28.4.185, 2606:4700:3037::681c:4b9, ...
Connecting to files.dev47apps.net (files.dev47apps.net)|104.28.5.185|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 933306 (911K) [application/zip]
Saving to: ‘droidcam_latest.zip’
droidcam_latest.zip 100%[===================&amp;gt;] 911,43K  2,45MB/s    in 0,4s
2020-05-12 19:03:30 (2,45 MB/s) - ‘droidcam_latest.zip’ saved [933306/933306]
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  echo "5ff0e772a76befba4e37e03101b611d7 droidcam_latest.zip" | md5sum -c --
droidcam_latest.zip: OK
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;~/tmp&lt;/b&gt;&lt;/font&gt;$ sudo apt install -y gcc make linux-headers-`uname -r`
Reading package lists... Done
Building dependency tree
Reading state information... Done
make is already the newest version (4.1-9.1ubuntu1).
gcc is already the newest version (4:7.4.0-1ubuntu2.3).
linux-headers-5.3.0-51-generic is already the newest version (5.3.0-51.44~18.04.2).
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  unzip droidcam_latest.zip -d droidcam &amp;amp;&amp;amp; cd droidcam
Archive:  droidcam_latest.zip
  inflating: droidcam/LICENCE
  inflating: droidcam/Makefile
  inflating: droidcam/README.md
  inflating: droidcam/droidcam
  inflating: droidcam/droidcam-cli
  inflating: droidcam/install
  creating: droidcam/src/
  inflating: droidcam/uninstall
  creating: droidcam/v4l2loopback/
  inflating: droidcam/v4l2loopback/v4l2loopback-dc.c
  inflating: droidcam/v4l2loopback/Makefile
  inflating: droidcam/v4l2loopback/test-mmap.c
  inflating: droidcam/v4l2loopback/test.c
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$  sudo ./install
[sudo] password for cosmoscalibur:
Webcam parameters: '640' and '480'
Building v4l2loopback-dc.ko
make: Entering directory '/tmp/droidcam/v4l2loopback'
make -C /lib/modules/`uname -r`/build M=`pwd`
make[1]: Entering directory '/usr/src/linux-headers-5.3.0-51-generic'
  CC [M]  /tmp/droidcam/v4l2loopback/v4l2loopback-dc.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /tmp/droidcam/v4l2loopback/v4l2loopback-dc.mod.o
  LD [M]  /tmp/droidcam/v4l2loopback/v4l2loopback-dc.ko
make[1]: Leaving directory '/usr/src/linux-headers-5.3.0-51-generic'
make: Leaving directory '/tmp/droidcam/v4l2loopback'
Moving driver and executable to system folders
+ cp v4l2loopback/v4l2loopback-dc.ko /lib/modules/5.3.0-51-generic/kernel/drivers/media/video/
+ cp droidcam /usr/bin/
+ cp droidcam-cli /usr/bin/
+ set +x
Registering webcam device
Running depmod
make: Entering directory '/tmp/droidcam/v4l2loopback'
make -C /lib/modules/`uname -r`/build M=`pwd` clean
make[1]: Entering directory '/usr/src/linux-headers-5.3.0-51-generic'
  CLEAN   /tmp/droidcam/v4l2loopback/Module.symvers
make[1]: Leaving directory '/usr/src/linux-headers-5.3.0-51-generic'
make: Leaving directory '/tmp/droidcam/v4l2loopback'
Adding uninstall script
Adding driver to /etc/modules
Done
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$ lsmod | grep v4l2loopback_dc
&lt;font color="#EF2929"&gt;&lt;b&gt;v4l2loopback_dc&lt;/b&gt;&lt;/font&gt;        24576  0
videodev              208896  5 v4l2_common,videobuf2_v4l2,&lt;font color="#EF2929"&gt;&lt;b&gt;v4l2loopback_dc&lt;/b&gt;&lt;/font&gt;,uvcvideo,videobuf2_common
&lt;/pre&gt;&lt;p&gt;La última instrucción es solo para efectos de validación. Si sale
&lt;code&gt;v4l2loopback_dc&lt;/code&gt;, estamos bien.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-en-android"&gt;
&lt;h3&gt;Instalación en Android&lt;/h3&gt;
&lt;p&gt;Para instalar en Android, buscamos DroidCam en Google Play [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#android"&gt;android&lt;/a&gt;].
Encontrarán dos versiones, una gratuita y una paga. Podemos usar la
gratuita para la funcionalidad requerida, siendo única limitación la
resolución máxima a la que transmite.&lt;/p&gt;
&lt;p&gt;Una vez instalada, procedemos a abrir y seguir los siguientes pasos:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Mensaje de agradecimiento, presionamos "Próximo".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instrucciones para cámara web, presionamos "Obtener".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;En la siguiente vista obtenemos la IP y el puerto que debemos
configurar en nuestro equipo.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-activo-ip-puerto.jpg"&gt;&lt;img alt="DroidCam activo (información de IP y puerto)." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-activo-ip-puerto.thumbnail.jpg" style="width: 300px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;DroidCam activo (información de IP y puerto).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En la parte superior derecha, accedemos a la configuración. La
configuración importante para nosotros está en la sección "CÁMARA", y es
el límite de FPS (ayuda a ahorrar batería) y la cámara que se usará (en
"Cámara" podemos seleccionar cual de las cámaras).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejecutar"&gt;
&lt;h2&gt;Ejecutar&lt;/h2&gt;
&lt;p&gt;Finalmente, para hacer uso de DroidCam en Linux, debemos ejecutar en la
consola &lt;code&gt;droidcam&lt;/code&gt; y esto abrirá un GUI para ingresar la IP y el
puerto que usaremos.&lt;/p&gt;
&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$ droidcam
Device: USB2.0 VGA UVC WebCam: USB2.0 V
Device: USB2.0 VGA UVC WebCam: USB2.0 V
Device: Droidcam
Found driver: /dev/video2 (fd:7)
connecting to 192.168.1.2:4747
&lt;/pre&gt;&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-linux-gui.png"&gt;&lt;img alt="Cliente GUI de DroidCam en Linux." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-linux-gui.thumbnail.png" style="width: 400px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Cliente GUI de DroidCam en Linux. Aquí ingresamos IP y puerto.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Una vez configurado, presionamos "Connect". En este momento DroidCam del
celular activará la vista de la cámara y podremos configurar la aplicación
que requiera de la cámara.&lt;/p&gt;
&lt;p&gt;Para ejemplo, tomaré Skype, pero será igual con toda aplicación que
soporte selección de cámara (aplica para Hangout, OBS, Teams, entre otras).
En el menú respectivo, seleccionamos "DroidCam" y estamos listos.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-seleccion-skype.jpg"&gt;&lt;img alt="Selección de DroidCam como cámara en Skype." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-seleccion-skype.thumbnail.jpg" style="width: 400px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Selección de DroidCam como cámara en las aplicaciones.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Comparemos ahora la calidad incluyendo las dos vistas (DroidCam e
incorporada) con OBS.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-vs-integrada.png"&gt;&lt;img alt="Comparación de cámara DroidCam y cámara integrada." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-vs-integrada.thumbnail.png" style="width: 600px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Comparación incorporando la vista de DroidCam (izquierda) y la cámara integrada de mi equipo (derecha) en OBS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;dl class="citation"&gt;
&lt;dt class="label" id="id1"&gt;&lt;span class="brackets"&gt;droidcam&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Wireless Webcam &lt;a class="reference external" href="https://www.dev47apps.com/"&gt;https://www.dev47apps.com/&lt;/a&gt; .&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="linux"&gt;&lt;span class="brackets"&gt;linux&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Linux Install &lt;a class="reference external" href="https://www.dev47apps.com/droidcam/linuxx/"&gt;https://www.dev47apps.com/droidcam/linuxx/&lt;/a&gt; .&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="android"&gt;&lt;span class="brackets"&gt;android&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Wireless Webcam (Android) &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.dev47apps.droidcam"&gt;https://play.google.com/store/apps/details?id=com.dev47apps.droidcam&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>android</category><category>cámara</category><category>droidcam</category><category>linux</category><category>webcam</category><guid>https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/</guid><pubDate>Sun, 17 May 2020 20:02:25 GMT</pubDate></item><item><title>Calcular distancia geodésica con Python</title><link>https://www.cosmoscalibur.com/blog/calcular-distancia-geodesica-con-python/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Aunque una de las cosas que más ha rondado en mi desarrollo académico y laboral es la programación, y buena parte de los años en ello con Python, nunca había realizado una entrada al respecto en el blog (lo más cercano ha sido una entrada sobre &lt;a href="https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/"&gt;Crear documentación de un proyecto Python con Sphinx.&lt;/a&gt; y &lt;a href="https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/"&gt;Crear contenedor Docker aplicación GUI - EALite&lt;/a&gt;).  &lt;/p&gt;
&lt;p&gt;A partir de ahora, y usando &lt;em&gt;notebooks&lt;/em&gt; compartiré algunas entradas relacionadas con programación o algunas bibliotecas específicas. En esta ocasión, me interesa compartirles como calcular la distancia geodésica entre dos lugares con GeoPy (una biblioteca Python), una de las tantas cosas que por motivos laborales he necesitado en mi exploración con proyectos con sistemas de información geográfica y ruteos.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;

&lt;h2&gt;Geoide y geodésicas&lt;/h2&gt;
&lt;p&gt;¿Habían escuchado antes "geoide" y "geodésica"? Bueno, resulta que el concepto de distancia entre puntos es dependiente de la geometría sobre la cual sea válido el desplazamiento. Así, si ubicamos dos puntos sobre la superficie de la Tierra, uno podría pensar en tomar como distancia la separación en línea recta entre los dos puntos atravesando el interior de la Tierra, y sí, eso es una distancia pero es impráctica porque nadie por ahora atravesará el interior para desplazarse. A esta distancia la conocemos como distancia euclideana (supone una geometría plana, como nos enseñan en el colegio y para muchos en universidad, donde Pitágoras funciona para esta cuenta).  &lt;/p&gt;
&lt;p&gt;Pues bien, si la distancia implica una restricción para moverse sobre una geometría en particular, las líneas rectas no son los caminos más cortos (sobre el cual se define la distancia) sino un tipo de líneas que llamaremos geodésicas. Así, la distancia sobre la superficie de la Tierra se mide sobre la geodésica que une los dos puntos de interés y a esa forma superficie de referencia de la Tierra es llamada geoide.&lt;/p&gt;
&lt;h2&gt;Cálculo de distancia&lt;/h2&gt;
&lt;p&gt;El cálculo de la distancia sobre la Tierra debe hacerse suponiendo alguna condición sobre la geometría de la Tierra. Esto es por ejemplo, suponer una esfera, un elipsoide o un plano (y no, la Tierra no es plana, pero para distancias cortas es una buena aproximación). Estas suposiciones ya vienen incluidas y pueden ser parametrizadas en las bibliotecas de cómputo.  &lt;/p&gt;
&lt;p&gt;Para el cómputo de geodésicas en Python, en buena medida todo se resume en &lt;a href="https://geographiclib.sourceforge.io/"&gt;GeographicLib&lt;/a&gt;. Tanto &lt;a href="https://gdal.org/"&gt;GDAL&lt;/a&gt;, &lt;a href="https://pyproj4.github.io/pyproj/stable/#"&gt;PyProj&lt;/a&gt; y &lt;a href="https://geopy.readthedocs.io/en/stable/#"&gt;GeoPy&lt;/a&gt; recurren a la implementación de GeographicLib como método por defecto de cálculo.  &lt;/p&gt;
&lt;p&gt;Para referencia, usaremos GeoPy (incluido también en GeoPandas) y que dispone de 3 métodos de cálculo de distancia que discutiremos.&lt;/p&gt;
&lt;p&gt;Primer paso vamos a instalar GeoPy. Para este fin usaremos el gestor de paquetes &lt;em&gt;conda&lt;/em&gt; de Anaconda, pero puedes usar &lt;em&gt;pip&lt;/em&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;%%bash
conda install -c conda-forge geopy
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Collecting&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;current_repodata&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Solving&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;Plan&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;##&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;environment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;location&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;added&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;updated&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;specs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;


&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;NEW&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;INSTALLED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;geographiclib&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;noarch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;geographiclib&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.50&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py_0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;conda&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;forge&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;noarch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.21.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py_0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;UPDATED&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;certificates&lt;/span&gt;&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ca&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;certificates&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2020.1.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::ca-certificates-2020.4.5.1-hecc5488_0&lt;/span&gt;

&lt;span class="n"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;following&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SUPERSEDED&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;higher&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;certifi&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;certifi&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2020.4.5.1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;py37_0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::certifi-2020.4.5.1-py37hc8dfbb8_0&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;openssl&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="n"&gt;pkgs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nl"&gt;main&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="n"&gt;openssl&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.1.1&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h7b6447c_0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;--&amp;gt; conda-forge::openssl-1.1.1g-h516909a_0&lt;/span&gt;


&lt;span class="n"&gt;Proceed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;]/&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="vm"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="n"&gt;Preparing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Verifying&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Executing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;transaction&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="n"&gt;working&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;done&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Ahora, importamos el módulo de &lt;a href="https://geopy.readthedocs.io/en/stable/#module-geopy.distance"&gt;distancia de GeoPy&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;geopy.distance&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para referencia usaremos las coordenadas de Medellín (MDE) y Envigado (ENV) según son ubicadas por Google Maps.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MDE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;6.2443695&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;75.6512527&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ENV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;6.1663544&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;75.5994392&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Para efectos de comparación, no solo presentaré la forma de uso de los métodos sino las distancias y los tiempos de ejecución.&lt;/p&gt;
&lt;h3&gt;Método de círculo mayor&lt;/h3&gt;
&lt;p&gt;El &lt;a href="https://en.wikipedia.org/wiki/Great-circle_distance"&gt;método de círculo mayor&lt;/a&gt; consiste en considerar la Tierra como una esfera perfecta de radio 6371.009 km (para el sistema de coordenadas geográficas &lt;a href="https://en.wikipedia.org/wiki/World_Geodetic_System#WGS84"&gt;WGS-84&lt;/a&gt;). Con esta aproximación se puede tener un error máximo del 0.5%. A pesar del error, es un método de cálculo directo (es una fórmula para reemplazar) y por ende puede obtener un resultado muy rápido y tiene asegurado entregar siempre una aproximación.  &lt;/p&gt;
&lt;p&gt;Es llamado círculo mayor porque en una esfera sabemos que el camino más corto es el descrito por el círculo de mayor radio sobre la esfera que contenga a los dos puntos.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;great_circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;great_circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;14.9 µs ± 238 ns per loop (mean ± std. dev. of 7 runs, 100000 loops each)&lt;/span&gt;
&lt;span class="err"&gt;10.395180481810051 km&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Método de Vincenty&lt;/h3&gt;
&lt;p&gt;El &lt;a href="https://en.wikipedia.org/wiki/Vincenty%27s_formulae"&gt;método de Vincenty&lt;/a&gt; es un método iterativo para la aproximación de la distancia geodésica sobre un elipsoide, en este caso, el elipsoide de referencia del sistema coordenado WGS-84. Este método presenta problemas de convergencia entre puntos antinodales y hoy su uso no es aconsejado (GeoPy aún lo presenta en la versión 1.21 pero está marcado como obsoleto).&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vincenty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vincenty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipykernel_launcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vincenty&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;going&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;accurate&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="n"&gt;converges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
  &lt;span class="ss"&gt;""&lt;/span&gt;&lt;span class="err"&gt;"&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt; &lt;span class="n"&gt;point&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;launching&lt;/span&gt; &lt;span class="n"&gt;an&lt;/span&gt; &lt;span class="n"&gt;IPython&lt;/span&gt; &lt;span class="n"&gt;kernel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;


&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="err"&gt;µ&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="err"&gt;±&lt;/span&gt; &lt;span class="mi"&gt;964&lt;/span&gt; &lt;span class="n"&gt;ns&lt;/span&gt; &lt;span class="n"&gt;per&lt;/span&gt; &lt;span class="n"&gt;loop&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mean&lt;/span&gt; &lt;span class="err"&gt;±&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt; &lt;span class="n"&gt;loops&lt;/span&gt; &lt;span class="k"&gt;each&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;359310623929353&lt;/span&gt; &lt;span class="n"&gt;km&lt;/span&gt;


&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;cosmoscalibur&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;anaconda&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;envs&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ipykernel_launcher&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DeprecationWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Vincenty&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deprecated&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;going&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;removed&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Use&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geodesic&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;which&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="k"&gt;more&lt;/span&gt; &lt;span class="n"&gt;accurate&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;always&lt;/span&gt; &lt;span class="n"&gt;converges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;Método de Karney&lt;/h3&gt;
&lt;p&gt;Este método al igual que el propuesto por Vincenty, es iterativo pero se asegura que siempre converge y con menor margen de error que Vincenty. Fue &lt;a href="https://link.springer.com/article/10.1007/s00190-012-0578-z"&gt;propuesto en 2013&lt;/a&gt;.  &lt;/p&gt;
&lt;p&gt;La implementación disponible en GeoPy corresponde a la implementación C++ de GeographicLib.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;timeit&lt;/span&gt; &lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;geopy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MDE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;231 µs ± 7.42 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)&lt;/span&gt;
&lt;span class="err"&gt;10.35931062438337 km&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h2&gt;Consideraciones&lt;/h2&gt;
&lt;p&gt;La interfaz incluida en GeographicLib no me pareció amigable, por lo cual no la recomiendo pero su uso asegura incluir solo las funciones especializadas para el tratamiento de la distancia geodésica. GeoPy incluye más utilidades pero posee una interfaz más simple. GDAL y PyProj poseen muchas más funcionalidades, por lo cual representa un aumento de almacenamiento innecesario. Esto, finalmente, para recomendar GeoPy para esta tarea (respecto a GeographicLib, aún te dará la opción de la aproximación de círculo mayor).  &lt;/p&gt;
&lt;p&gt;Respecto al método, la divergencia de Vincenty para casos antinodales y la convergencia lenta en otros casos reportados, al igual que su marcado de obsolescencia en las implementaciones nos lleva a omitirlo de cualquier consideración futura. La aproximación de Karney posee el menor error de las 3 aproximaciones pero su tiempo de cómputo es alto si se considera la necesidad de calcular entre una gran cantidad de pares de puntos.  &lt;/p&gt;
&lt;p&gt;Para mi caso de interés (problemas de ruteo), la distancia geodésica solo se usa como un primer aproximado para reducir el número de pares sobre los cuales se cálcula la distancia sobre la red vial (de lo cual hablaré en una próxima entrada) y por ende su valor no importa que tenga gran exactitud pero que sea decente para distancias cortas (se busca eliminar el cálculo de distancias largas sobre la red vial).  &lt;/p&gt;
&lt;p&gt;Así, si la necesidad es de exactitud te recomiendo la aproximación de Karney pero si es solo una primera aproximación buscando menor tiempo de cómputo, la recomendación es el círculo mayor.&lt;/p&gt;&lt;/div&gt;</description><category>distancia geodésica</category><category>geoide</category><category>geopy</category><category>gis</category><category>python</category><guid>https://www.cosmoscalibur.com/blog/calcular-distancia-geodesica-con-python/</guid><pubDate>Sun, 10 May 2020 23:35:00 GMT</pubDate></item><item><title>Crear documentación de un proyecto Python con Sphinx.</title><link>https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Sin duda, una etapa importante en cualquier proyecto de desarrollo (y no solo
de &lt;em&gt;software&lt;/em&gt;) es la generación de la documentación. En el caso de &lt;em&gt;software&lt;/em&gt;
es posible asistirse de herramientas que ayudan a automatizar la generación de
la documentación mediante extracción de comentarios en el código, usar palabras
claves y lenguaje de marcado para modificación de estilo en el texto o
inclusión de otros elementos que no sean solo texto plano (imágenes,
ecuaciones, enlaces entre otros).&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Algunas herramientas para este fin son &lt;a class="reference external" href="http://doxygen.nl/"&gt;Doxygen&lt;/a&gt;
(habitual para proyectos en C/C++), &lt;a class="reference external" href="https://www.oracle.com/technetwork/java/javase/documentation/index-jsp-135444.html"&gt;Javadoc&lt;/a&gt;
(para Java, pero habitual también en TypeScript), &lt;a class="reference external" href="https://esdoc.org/"&gt;ESDoc&lt;/a&gt;
(para Javascript) y por supuesto, Sphinx, para Python.&lt;/p&gt;
&lt;p&gt;En esta entrada instalaremos lo necesario para generar nuestra documentación de
un proyecto Python y haremos un pequeño ejemplo.&lt;/p&gt;
&lt;div class="section" id="latex"&gt;
&lt;h2&gt;LaTeX&lt;/h2&gt;
&lt;p&gt;Si deseamos generar documentación web, este paquete no es necesario, pero para
generar nuestra documentación en PDF es una dependencia obligatoria. La
instalación recomendada dependerá del sistema operativo que se use.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Mac&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Puedes usar &lt;a class="reference external" href="https://www.tug.org/mactex/"&gt;MacTex&lt;/a&gt; el cual incluye el
compilador TeXLive y editores como TeXShop, y otras dependencias para el
funcionamiento de LaTeX en Mac.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Windows&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;La opción más cómoda es el compilador &lt;a class="reference external" href="https://miktex.org/download"&gt;MikTeX&lt;/a&gt;,
el cual permite de forma predeterminada la descarga automática de paquetes
adicionales en la medida que sean requeridos (instalación &lt;em&gt;on the fly&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Es importante que en la configuración no cambies al modo silencioso, pues
esto puede afectar la ejecución posterior en los casos que requieran de
instalación.&lt;/p&gt;
&lt;p&gt;Si usas Anaconda, puedes incluirlo desde el canal de &lt;em&gt;conda-forge&lt;/em&gt;,
&lt;code&gt;conda install -c conda-forge miktex&lt;/code&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;Linux&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;En Linux usaremos TeXLive pero su instalación la haremos directamente del
gestor de paquetes del sistema operativo. En la mayor parte de
distribuciones Linux estará disponible a través del gestor.&lt;/p&gt;
&lt;p&gt;En el caso de las distribuciones basadas en Debian (Ubuntu y Linux Mint
entre otras) puedes instalar de la siguiente manera:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_be1893e2a09c4c7ea00e9d6f77ba7553-1"&gt;&lt;/a&gt;sudo apt install -y texlive texlive-latex-base texlive-latex-extra \
&lt;a name="rest_code_be1893e2a09c4c7ea00e9d6f77ba7553-2"&gt;&lt;/a&gt;    texlive-lang-spanish latexmk
&lt;/pre&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="sphinx"&gt;
&lt;h2&gt;Sphinx&lt;/h2&gt;
&lt;p&gt;Si usamos Python a través de Anaconda podemos usar el gestor &lt;em&gt;conda&lt;/em&gt; para la
instalación, así &lt;code&gt;conda install sphinx&lt;/code&gt;, en caso contrario, podemos usar
el gestor de paquetes &lt;em&gt;PIP&lt;/em&gt;: &lt;code&gt;pip install -U Sphinx&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;Si deseas una experiencia en Windows similar a Linux, usando el
&lt;code&gt;Makefile&lt;/code&gt; tradicional y la posibilidad de usar en combinación con
Bash, te recomiendo usar Git Bash, y si es en conjunto con Anaconda puedes
leer mi publicación al respecto, &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/"&gt;Usar Anaconda Python en Git Bash&lt;/a&gt; e
instalar el paquete &lt;code&gt;make&lt;/code&gt; con Anaconda o instalar
&lt;a class="reference external" href="http://mingw-w64.org/doku.php"&gt;Mingw-w64&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuracion-de-sphinx"&gt;
&lt;h2&gt;Configuración de Sphinx&lt;/h2&gt;
&lt;p&gt;Abriremos una consola (si es Windows, debes tener en cuenta que para usar
paquetes de Anaconda debes usar las consolas Anaconda Prompt, Anaconda
PowerShell u otra si la configuraste -como el caso de Git Bash que
mencioné en la sección anterior-) y debemos ubicarnos en el directorio que
destinaremos para la documentación. Es habitual que en la estructura de nuestro
proyecto destinemos un directorio &lt;code&gt;docs&lt;/code&gt; para este fin.&lt;/p&gt;
&lt;p&gt;Ahora ejecutamos &lt;code&gt;sphinx-quickstart&lt;/code&gt; y respondemos las preguntas que
saldrán. Es necesario tener en cuenta, que si usas Windows debes agregar al
comando la terminación &lt;code&gt;.exe&lt;/code&gt;, ejemplo &lt;code&gt;sphinx-quickstart.exe&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_7155b5c8fc27474c801cad9d825e1bbb-1"&gt;&lt;/a&gt;&amp;gt; Separate source and build directories (y/n) [n]: y
&lt;a name="rest_code_7155b5c8fc27474c801cad9d825e1bbb-2"&gt;&lt;/a&gt;&amp;gt; Project name: proyecto
&lt;a name="rest_code_7155b5c8fc27474c801cad9d825e1bbb-3"&gt;&lt;/a&gt;&amp;gt; Author name(s): Edward Villegas-Pulgarin
&lt;a name="rest_code_7155b5c8fc27474c801cad9d825e1bbb-4"&gt;&lt;/a&gt;&amp;gt; Project release []: 0.1.0
&lt;a name="rest_code_7155b5c8fc27474c801cad9d825e1bbb-5"&gt;&lt;/a&gt;&amp;gt; Project language [en]: es
&lt;/pre&gt;&lt;p&gt;Siempre recomiendo separar el directorio del código fuente de la documentación
del directorio de compilados de la misma. Respecto al esquema de versiones me
agrada el &lt;cite&gt;versionamiento semántico &amp;lt;https://semver.org/&amp;gt;&lt;/cite&gt; que permite al
usuario final intuir un poco más sobre la madurez del proyecto con el número,
pero puedes usar el &lt;cite&gt;esquema basado en fecha de liberación &amp;lt;https://calver.org/&amp;gt;&lt;/cite&gt;.
En el lenguaje se especifica el lenguaje con el código a dos letras
internacional, acorde a los &lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-language"&gt;soportados por Sphinx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Aunque en la terminal nos indican que podemos continuar con el archivo
&lt;code&gt;index.rst&lt;/code&gt;, debemos hacer unos pequeños cambios en el archivo
&lt;code&gt;conf.py&lt;/code&gt; que encontraremos en &lt;code&gt;docs/source&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Puedes saber más opciones de configuración en la documentación de Sphinx sobre
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/configuration.html"&gt;conf.py&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="extensiones"&gt;
&lt;h3&gt;Extensiones&lt;/h3&gt;
&lt;p&gt;Recomiendo incluir la extensión de Autodoc para extraer automáticamente la
documentación de la API, MathJax para el soporte de ecuaciones matemáticas en
la versión Web y Napoleon para el estilo de Numpy y Google en la documentación.
Con Coverage puedes validar que funciones se han documentado y dcotest integra
pruebas de código desde la documentación (comparar salidas con ejemplo de
documentación).&lt;/p&gt;
&lt;p&gt;Modificar en el archivo.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_23d87692259743b5969952288a517bc3-1"&gt;&lt;/a&gt;extensions = [
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-2"&gt;&lt;/a&gt;    'sphinx.ext.autodoc',
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-3"&gt;&lt;/a&gt;    'sphinx.ext.mathjax',
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-4"&gt;&lt;/a&gt;    'sphinx.ext.napoleon',
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-5"&gt;&lt;/a&gt;    'sphinx.ext.coverage',
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-6"&gt;&lt;/a&gt;    'sphinx.ext.doctest'
&lt;a name="rest_code_23d87692259743b5969952288a517bc3-7"&gt;&lt;/a&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="importar-paquete"&gt;
&lt;h3&gt;Importar paquete&lt;/h3&gt;
&lt;p&gt;Para apoyarte de ejemplos actualizados automáticamente, uso de metadatos desde
el código (ejemplo, el autor o la versión) puedes importar el paquete en el
archivo de configuración. Dado que estarás en modo de desarrollo probablemente,
el paquete no ha sido instalado y lo deberás hacer descomentando las tres
primeras líneas de código en la sección de &lt;em&gt;Path setup&lt;/em&gt;. El punto que hay por
defecto indica la misma carpeta de &lt;code&gt;docs/source&lt;/code&gt;, por lo cual es
necesario reemplazar por &lt;code&gt;../..&lt;/code&gt; que se devuelve los dos niveles
necesarios.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_528fb3803f7d4757851890ca17f8697f-1"&gt;&lt;/a&gt;import os
&lt;a name="rest_code_528fb3803f7d4757851890ca17f8697f-2"&gt;&lt;/a&gt;import sys
&lt;a name="rest_code_528fb3803f7d4757851890ca17f8697f-3"&gt;&lt;/a&gt;import datetime
&lt;a name="rest_code_528fb3803f7d4757851890ca17f8697f-4"&gt;&lt;/a&gt;sys.path.insert(0, os.path.abspath('../..'))
&lt;a name="rest_code_528fb3803f7d4757851890ca17f8697f-5"&gt;&lt;/a&gt;import proyecto
&lt;/pre&gt;&lt;p&gt;Ahora, puedes hacer cosas como la siguiente, si está disponible en tu código.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_cca65337164d4f1fa8fe8bf04973d8b4-1"&gt;&lt;/a&gt;author = proyecto.__author__
&lt;a name="rest_code_cca65337164d4f1fa8fe8bf04973d8b4-2"&gt;&lt;/a&gt;copyright = str(datetime.date.today().year) + ', ' + author
&lt;a name="rest_code_cca65337164d4f1fa8fe8bf04973d8b4-3"&gt;&lt;/a&gt;release = proyecto.__version__
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias-cruzadas"&gt;
&lt;h3&gt;Referencias cruzadas&lt;/h3&gt;
&lt;p&gt;Para usar referencias cruzadas, es decir, numeración de tablas, figuras,
códigos y ecuaciones si poseen pie de objeto, y ser referenciados en el texto
por el número, se requiere configurar lo siguiente.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-1"&gt;&lt;/a&gt;numfig = True
&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-2"&gt;&lt;/a&gt;numfig_format = {'figure': 'Fig. %s', 'table': 'Tabla %s',
&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-3"&gt;&lt;/a&gt;                 'code-block': 'Código %s', 'section': 'Sección %s'}
&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-4"&gt;&lt;/a&gt;numfig_secnum_depth = 1
&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-5"&gt;&lt;/a&gt;math_numfig = True
&lt;a name="rest_code_ce76098eda694b7f828817cc8109a2a1-6"&gt;&lt;/a&gt;math_eqref_format = 'Ec. {number}'
&lt;/pre&gt;&lt;p&gt;Así, es posible usar &lt;code&gt;:label:&lt;/code&gt; para asignar una referencia a los objetos
y &lt;code&gt;:numref:&lt;/code&gt; y &lt;code&gt;:eq:&lt;/code&gt; a la hora de mencionarlos. Con
&lt;code&gt;numfig_secnum_depth&lt;/code&gt; configuras la numeración de los objetos, si es
continúa (0), por sección (1) y subsección (2).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;LaTeX&lt;/h3&gt;
&lt;p&gt;Hay una configuración básica para LaTeX que puedes agregar. El documento
maestro, el nombre del archivo TeX, el nombre que nuestra documentación, el
nombre del autor (que podemos usar la variable que ya definimos) y el tipo de
documento (cuya clase &lt;em&gt;manual&lt;/em&gt; está definida por Sphinx).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fd92d89932084c269053ee1e78f20d27-1"&gt;&lt;/a&gt;master_doc = 'index'
&lt;a name="rest_code_fd92d89932084c269053ee1e78f20d27-2"&gt;&lt;/a&gt;latex_documents = [
&lt;a name="rest_code_fd92d89932084c269053ee1e78f20d27-3"&gt;&lt;/a&gt;    (master_doc, 'proyecto.tex', 'Documentación Proyecto',
&lt;a name="rest_code_fd92d89932084c269053ee1e78f20d27-4"&gt;&lt;/a&gt;     author, 'manual'),
&lt;a name="rest_code_fd92d89932084c269053ee1e78f20d27-5"&gt;&lt;/a&gt;]
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="escritura-en-restructuredtext"&gt;
&lt;h2&gt;Escritura en ReStructuredText&lt;/h2&gt;
&lt;p&gt;Sobre esto, es referencia ver la documentación de
&lt;a class="reference external" href="https://docutils.readthedocs.io/en/sphinx-docs/user/rst/quickstart.html"&gt;DocUtils&lt;/a&gt;
y de Sphinx &lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html"&gt;ReStructuredText Primer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Una vez tienes las bases de ReStructuredText puedes editar lo básico. De ahí, y
para tener todo el provecho de Sphinx hay elementos como los roles, directivas
y dominios que debes aprender a usar,
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/index.html"&gt;Sphinx ReStructuredText&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;¿Y por qué los dominios? Estos añaden sintaxis para manejar las relaciones con
el código, como enlazar a funciones relacionadas que se generaron con &lt;em&gt;autodoc&lt;/em&gt;
y además la forma de como documentar la función (u otro elemento del código) en
su código fuente y que pueda ser extraída. Por ejemplo, el
&lt;a class="reference external" href="https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#the-python-domain"&gt;dominio de Python&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="que-archivos-debo-editar"&gt;
&lt;h3&gt;¿Qué archivos debo editar?&lt;/h3&gt;
&lt;p&gt;Primero, editaremos &lt;code&gt;docs/source/index.rst&lt;/code&gt;, donde deberemos agregar los
nombres de los archivos que se incluyen en la documentación, tanto los
generados como los automáticos. Se agrega uno por línea, sin extensión y la
posición es relativa a la ubicación del archivo &lt;code&gt;index.rst&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Te recomiendo siempre un archivo &lt;code&gt;README.rst&lt;/code&gt; que fija la generalidad e
intención del proyecto, &lt;code&gt;history.rst&lt;/code&gt; para tener documentados los cambios
entre versiones (como un &lt;em&gt;changelog&lt;/em&gt; pero a mano, más condensado), un
&lt;code&gt;usage.rst&lt;/code&gt; documentando el uso de nuestro proyecto,
&lt;code&gt;installation.rst&lt;/code&gt; con instrucciones de instalación y adicional, agregar
una ruta a la documentación de la API (la misma ruta la debemos indicar más
adelante). Puedes agregar más archivos, por ejemplo, yo suelo usar un
&lt;code&gt;concepts.rst&lt;/code&gt; para detallar los conceptos necesarios antes de usar el
software o detallar teoría que ayuda a interpretar resultados o que expande la
información para que alguien pueda analizar o continuar un desarrollo.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-1"&gt;&lt;/a&gt;.. toctree::
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-2"&gt;&lt;/a&gt;   :maxdepth: 3
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-3"&gt;&lt;/a&gt;   :caption: Contenido:
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-5"&gt;&lt;/a&gt;   README
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-6"&gt;&lt;/a&gt;   installation
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-7"&gt;&lt;/a&gt;   usage
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-8"&gt;&lt;/a&gt;   api/modules
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-9"&gt;&lt;/a&gt;   concepts
&lt;a name="rest_code_5d9b8cb4161348b7b8807d629622431a-10"&gt;&lt;/a&gt;   history
&lt;/pre&gt;&lt;p&gt;Y podemos borrar las líneas posteriores de &lt;em&gt;Indices and tables&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejecucion-de-sphinx"&gt;
&lt;h2&gt;Ejecución de Sphinx&lt;/h2&gt;
&lt;p&gt;Como estamos haciendo uso de &lt;em&gt;autodoc&lt;/em&gt;, nuestro primer paso es generar la
extracción de la API.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f10fd32f20a54d0480a1b0dbe4b08663-1"&gt;&lt;/a&gt;sphinx-apidoc -f -M -o source/api/ ../proyecto
&lt;/pre&gt;&lt;p&gt;Recordar que en Windows hay que agregar &lt;code&gt;.exe&lt;/code&gt;
(&lt;code&gt;sphinx-apidoc.exe&lt;/code&gt;). &lt;code&gt;-f&lt;/code&gt; es para forzar la regeneración de los
archivos (importante si actualizamos la documentación de la API), &lt;code&gt;-M&lt;/code&gt;
para ubicar primero la documentación de los módulos (por defecto primero son
las funciones, y esto no me parece natural). Luego, es la ruta para la
documentación de la API (uno de los archivos será el &lt;code&gt;api/modules.rst&lt;/code&gt;)
y finalmente la ruta donde se encuentra el paquete. Ambas rutas son relativas
al directorio de documentación.&lt;/p&gt;
&lt;p&gt;Ahora, solo es necesario generar la documentación: &lt;code&gt;make latexpdf&lt;/code&gt; si es
con el &lt;em&gt;Makefile&lt;/em&gt; o &lt;code&gt;make.bat latexpdf&lt;/code&gt; si no instalaste &lt;em&gt;make&lt;/em&gt; en
Windows. Aquí debemos devolvernos un nivel en la carpeta para ejecutarlo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="publicar"&gt;
&lt;h2&gt;Publicar&lt;/h2&gt;
&lt;p&gt;Ahora encontrarás en la carpeta &lt;em&gt;build&lt;/em&gt; los archivos LaTeX, y uno de ellos será
el PDF que queremos. También puedes hacer compilación HTML (&lt;code&gt;make html&lt;/code&gt;)
y usar esta para publicar como un &lt;a class="reference external" href="https://pages.github.com/"&gt;GitHub Pages&lt;/a&gt; o
en &lt;a class="reference external" href="https://docs.readthedocs.io/en/stable/intro/getting-started-with-sphinx.html"&gt;ReadTheDocs&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>anaconda</category><category>documentación</category><category>latex</category><category>linux</category><category>python</category><category>restructuredtext</category><category>sphinx</category><category>windows</category><guid>https://www.cosmoscalibur.com/blog/crear-documentacion-de-un-proyecto-python-con-sphinx/</guid><pubDate>Tue, 07 Jan 2020 00:24:48 GMT</pubDate></item><item><title>Usar Anaconda Python en Git Bash</title><link>https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Recientemente, por motivos laborales he tenido que trabajar en Windows y es
por esto que tuve la necesidad de buscar una opción cómoda de usar &lt;a class="reference external" href="https://git-scm.com/"&gt;Git&lt;/a&gt;
en Windows, con soporte de &lt;a class="reference external" href="https://www.gnu.org/software/bash/"&gt;Bash&lt;/a&gt; a lo
que estoy acostumbrado en Linux y con Python Anaconda reconocido. De alguna
manera, la versión mínima de como usar Windows sin morir en el intento.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="anaconda-python"&gt;
&lt;h2&gt;Anaconda Python&lt;/h2&gt;
&lt;p&gt;Lo primero es proceder a instalar Anaconda Python desde su sitio oficial, pero
recomiendo revisar primero la necesidad real de tener todo lo incluido en
Anaconda o usar algo minimalista como Miniconda. Anaconda representará una
instalación y descarga de casi 500 MB, y por ende un mayor tiempo en ambos
pasos. Por otro lado, Miniconda solo instala lo mínimo requerido para tener
Python y el gestor de paquetes Conda. Esta última opción es recomendable si
posees poco espacio en disco, deseas instalar rápidamente, solo deseas probar
lo básico de Python o el equipo es de bajas características (recuerdo casos en
los cuales mis estudiantes -épocas de docente- la sola instalación de Anaconda
bloqueaba el equipo y lo reiniciaba).&lt;/p&gt;
&lt;p&gt;Si usas Anaconda para tus proyectos de desarrollo y usando buenas prácticas,
seguramente estarás acostumbrado a usar ambientes y en ese caso no necesitas
tener tantas cosas en el base, siendo buena opción Miniconda también.&lt;/p&gt;
&lt;p&gt;Descarga &lt;a class="reference external" href="https://www.anaconda.com/distribution/"&gt;Anaconda&lt;/a&gt; o
&lt;a class="reference external" href="https://docs.conda.io/en/latest/miniconda.html"&gt;Miniconda&lt;/a&gt; según tu
necesidad e instala como cualquier programa de Windows. Lo importante durante
la instalación es indicar que sea solo para el usuario actual y que no se
asocie el &lt;code&gt;PATH&lt;/code&gt;. Seguir este consejo les evitará dolores de cabeza en el
futuro.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="git-bash"&gt;
&lt;h2&gt;Git Bash&lt;/h2&gt;
&lt;p&gt;Si bien puedes descargarlo desde el sitio del proyecto, aprovecharemos el
gestor Conda para facilitar la tarea de descarga, instalación y configuración.&lt;/p&gt;
&lt;p&gt;Abriremos Anaconda PowerShell o Anaconda Prompt, y ejecutaremos lo siguiente:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_43042f0c84e54be6a842d0e749f3de08-1"&gt;&lt;/a&gt;conda create -n gitbash -c conda-forge git=2.24.0
&lt;/pre&gt;&lt;p&gt;Es importante el uso de &lt;code&gt;-c conda-forge&lt;/code&gt; porque de este canal vendrá la
versión de Git que usaremos. Si se usa el canal por defecto, se instala solo el
cliente de consola, mientras que en esta opción viene Git Bash. He indicado
también el &lt;code&gt;-n gitbash&lt;/code&gt; para evitar posibles conflictos entre los
paquetes requeridos para usar Git y los paquetes disponibles en el ambiente
base. En alguna publicación posterior hablaré sobre Conda para profundizar en
esto.&lt;/p&gt;
&lt;p&gt;Una vez terminada la instalación, puedes abrir el menú de Windows y buscar Git
Bash, el cual ya contará con Conda reconocido. Ahora solo debes empezar a
usarlo, &lt;code&gt;conda activate base&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;En este momento, nuestro ambiente por defecto será gitbash. Si instalas sin
indicar el ambiente, tendrás el base por defecto habilitado pero con
posibles conflictos.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;¿Y qué pasa si ya teníamos instalado Git Bash? Git Bash soporta los archivos
típicos de Bash, como el &lt;code&gt;bashrc&lt;/code&gt;. Así, podemos usar la configuración que
habitualmente se usa en Linux.&lt;/p&gt;
&lt;p&gt;Abrimos Git Bash, y ejecutamos:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e72d212dd92149e585bef23695d71c7f-1"&gt;&lt;/a&gt;cd
&lt;a name="rest_code_e72d212dd92149e585bef23695d71c7f-2"&gt;&lt;/a&gt;echo ". /c/Users/USUARIO/ANACONDA/etc/profile.d/conda.sh" &amp;gt;&amp;gt; .bashrc
&lt;a name="rest_code_e72d212dd92149e585bef23695d71c7f-3"&gt;&lt;/a&gt;source .bashrc
&lt;/pre&gt;&lt;p&gt;Con la primera línea aseguramos ir al directorio del usuario. En la segunda
línea, crearemos o editaremos el archivo de configuración, pero debes
reemplazar &lt;code&gt;USUARIO&lt;/code&gt; por la carpeta de tu usuario y &lt;code&gt;ANACONDA&lt;/code&gt; por
la carpeta de Anaconda (habitualmente &lt;code&gt;Anaconda&lt;/code&gt; o &lt;code&gt;Miniconda3&lt;/code&gt; si
usaste Miniconda). La tercera línea actualiza la configuración en la sesión
actual de la consola permitiendo usar de forma inmediata Conda. Para la próxima
apertura de Git Bash ya no tendrás que configurar nada, solo empezar a usar
Conda (aún no hay ambiente activado).&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>anaconda</category><category>bash</category><category>git</category><category>python</category><category>windows</category><guid>https://www.cosmoscalibur.com/blog/usar-anaconda-python-en-git-bash/</guid><pubDate>Tue, 31 Dec 2019 19:43:50 GMT</pubDate></item><item><title>Crear contenedor Docker aplicación GUI - EALite</title><link>https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Dando continuidad al uso de contenedores que inicie en la publicación anterior,
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;, reproduciré la
instalación de Enterprise Architect Viewer (EALite) con Docker (y por supuesto,
Wine). Si deseas reproducir el ejemplo de este caso, requieres reproducir la
el artículo mencionado para extraer el directorio de Wine.&lt;/p&gt;
&lt;p&gt;A diferencia de LXC, Docker está más orientado al aislamiento de aplicaciones y
no de sistema operativo (LXC cumple una función más cercana a una máquina
virtual) lo cual ayuda a un mejor despliegue de aplicaciones y la
estandarización de las etapas de desarrollo y de pruebas.&lt;/p&gt;
&lt;p&gt;Común a LXC tenemos imágenes base que podemos usar, disponibles en
&lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. A partir de estas podemos completar
nuestras necesidades especificando en el archivo Dockerfile.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="instalar-docker"&gt;
&lt;h2&gt;Instalar Docker&lt;/h2&gt;
&lt;p&gt;Recomiendo en Linux instalar docker con snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_aa6a22db29254e4eaee17c765ef8e44e-1"&gt;&lt;/a&gt;sudo snap install docker
&lt;/pre&gt;&lt;p&gt;Posteriormente, podemos asociar nuestro usuario para la ejecución sin ser
administrador.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_4f17d53daa854682a2309b7760f8e29c-1"&gt;&lt;/a&gt;sudo groupadd docker
&lt;a name="rest_code_4f17d53daa854682a2309b7760f8e29c-2"&gt;&lt;/a&gt;sudo usermod -aG docker $USER
&lt;a name="rest_code_4f17d53daa854682a2309b7760f8e29c-3"&gt;&lt;/a&gt;newgrp docker
&lt;/pre&gt;&lt;p&gt;Puedes probar ejecutando como usuario regular, &lt;code&gt;docker run hello-world&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dockerfile"&gt;
&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;Este archivo es el mecanismo mediante el cual se especifican las reglas de
construcción de nuestra imagen. Se define un lenguaje común sin importar el
sistema operativo base y las funciones específicas del sistema son usadas con
una instrucción que habilita a ejecución en él.&lt;/p&gt;
&lt;p&gt;Los comentarios en el archivo son como tradicionalmente estamos acostumbrados
en otros lenguajes (entre ellos, bash), con signo número &lt;code&gt;#&lt;/code&gt;. Esto posee
una excepción, y es el caso donde existe una directriz después como el caso que
se ejemplificara.&lt;/p&gt;
&lt;p&gt;La directriz &lt;code&gt;escape&lt;/code&gt; es usada para cambiar el carácter de salto de línea
para instrucciones de múltiples líneas. Se puede tener la habitual barra
invertida (&lt;code class="docutils literal"&gt;\&lt;/code&gt;) que es conflictivo con rutas con espacios en Linux o
rutas Windows, y la opción de la tilde invertida (&lt;code class="docutils literal"&gt;`&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Después podemos definir la imagen base usando &lt;code&gt;FROM&lt;/code&gt; seguido de la
especificación de la imagen en &lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. En este caso, usaremos la &lt;a class="reference external" href="https://hub.docker.com/_/ubuntu"&gt;imagen
Docker de Ubuntu&lt;/a&gt; con arquitectura i386 y
versión 18.04. En general, la estructura de invocación es
&lt;code&gt;arquitectura/ubuntu:version&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Las instrucciones son ejecutadas por defecto por el usuario &lt;em&gt;root&lt;/em&gt;
(administrador), de manera que podemos ejecutar la instalación de paquetes
invocando directamente el llamado al sistema iniciando con &lt;code&gt;RUN&lt;/code&gt;. Como se
observa en el ejemplo, a continuación es una línea típica que se ejecuta en
Ubuntu.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;La creación del usuario es necesaria porque wine debe ejecutarse por un
usuario regular. Adicional, el nombre de usuario corresponde al mismo nombre
del usuario Linux del cual traemos la copia de la instalación en Wine (Wine
asigna el nombre de usuario Windows igual al usuario Linux, luego, al copiar
la carpeta de Wine, solo funcionará si encuentra el mismo usuario).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Podemos cambiar el directorio sobre el cual ejecutamos usando &lt;code&gt;WORKDIR&lt;/code&gt;.
En la siguiente línea usamos &lt;code&gt;COPY&lt;/code&gt; para mover un directorio del sistema
hospedador a la imagen. Existe una instrucción similar, &lt;code&gt;ADD&lt;/code&gt;, la cual
soporta que la fuente sea una URL realizando la descarga, y descomprime
archivos &lt;em&gt;tar&lt;/em&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;El directorio que moveremos se genero en el contenedor LXC que construimos
en &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;. Para ello,
iniciamos el contenedor y extraemos el directorio.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d2872ac6b23b4f6f8e6ce80bd54653e8-1"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_d2872ac6b23b4f6f8e6ce80bd54653e8-2"&gt;&lt;/a&gt;sudo lxc file pull -r ea/home/ubuntu/.wine .
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con &lt;code&gt;USER&lt;/code&gt; cambiamos el usuario que ejecuta los procesos. Es importante
que a la hora de concluir, si un proceso es ejecutado por un usuario regular,
nuestro último cambio de usuario debe apuntar a él, de otra forma el
contenedor estará activo para el usuario administrador. Otro aspecto importante
es el comportamiento por defecto en Linux, donde puede crear el usuario si no
existe (pero no el directorio de usuario).&lt;/p&gt;
&lt;p&gt;Finalmente, es necesario indicar que se ejecuta cuando se lanza el contenedor.
Esto es posible con &lt;code&gt;CMD&lt;/code&gt; o con &lt;code&gt;ENTRYPOINT&lt;/code&gt;. La diferencia es que
el primero permite sobreescribir la ejecución enviando como parámetro lo que
se desea ejecutar, mientras que la segunda opción solo ejecuta la configurada.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-1"&gt;&lt;/a&gt;# escape=`
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-2"&gt;&lt;/a&gt;FROM i386/ubuntu:18.04
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-3"&gt;&lt;/a&gt;RUN apt update -q &amp;amp;&amp;amp; apt install --install-recommends -y wine-stable
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-4"&gt;&lt;/a&gt;RUN apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-5"&gt;&lt;/a&gt;RUN useradd -ms /bin/bash ubuntu
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-6"&gt;&lt;/a&gt;WORKDIR /home/ubuntu
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-7"&gt;&lt;/a&gt;COPY .wine .wine
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-8"&gt;&lt;/a&gt;RUN chown -R ubuntu .wine
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-9"&gt;&lt;/a&gt;USER ubuntu
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-10"&gt;&lt;/a&gt;RUN mkdir -p .local/bin &amp;amp;&amp;amp; `
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-11"&gt;&lt;/a&gt;        echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; .local/bin/ealite &amp;amp;&amp;amp; `
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-12"&gt;&lt;/a&gt;        chmod 755 .local/bin/ealite
&lt;a name="rest_code_dbeaf9de59d24f08a0138f76197c326e-13"&gt;&lt;/a&gt;CMD ".local/bin/ealite"
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="construir-imagen-docker"&gt;
&lt;h2&gt;Construir imagen Docker&lt;/h2&gt;
&lt;p&gt;La construcción la realizamos con la opción &lt;code&gt;build&lt;/code&gt;. Se usa el argumento
&lt;code&gt;-t&lt;/code&gt; para indicar la etiqueta que asignaremos a la imagen y &lt;code&gt;-f&lt;/code&gt;
para relacionar la ruta del archivo dockerfile que se usará. El siguiente
argumento no posee marca para indicarlo y corresponde al contexto, que viene a
ser la ruta donde se encuentran los archivos que usaremos (que puede ser
reemplazado por un archivo de contexto con la ruta a los distintos archivos).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1a1a2b6230ae4411b617884e071a474b-1"&gt;&lt;/a&gt;docker build -t cosmoscalibur/ealite:latest -f dockerfile .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-contenedor"&gt;
&lt;h2&gt;Ejecutar contenedor&lt;/h2&gt;
&lt;p&gt;Ahora puedes lanzar un contenedor gráfico basado en la imagen construida con la
siguiente instrucción.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_99200ca7938742b3a29d932901c21d3b-1"&gt;&lt;/a&gt;docker run --net=host --env="DISPLAY" --volume="$HOME/.Xauthority:/root/.Xauthority:rw" cosmoscalibur/ealite:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.docker.com/install/linux/linux-postinstall/"&gt;Docker docs: Post-installation steps for Linux&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.docker.com/reference/"&gt;Docker docs: Reference documentation&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://medium.com/@SaravSun/running-gui-applications-inside-docker-containers-83d65c0db110"&gt;Running GUI Applications inside Docker Containers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>docker</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>wine</category><guid>https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/</guid><pubDate>Sat, 23 Nov 2019 02:47:22 GMT</pubDate></item><item><title>Crear contenedor LXC para aplicación GUI - EALite</title><link>https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;El uso de contenedores en la industria del software se ha extendido ampliamente
y no es de extrañar, ofrece a los desarrolladores la posibilidad de mejorar el
aislamiento de sus servicios y de ahí hacerlo menos susceptible a errores por
colisiones con otros servicios o conflictos de dependencias. Al mismo tiempo,
son una alternativa más amigable en recursos respecto a las máquinas virtuales.&lt;/p&gt;
&lt;p&gt;Múltiples proveedores de infraestructura para nube ofrecen la opción de
desplegar los servicios a partir de un contenedor, y sin duda, facilita la
distribución de entornos de desarrollo y aplicaciones.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Con estos beneficios (algo similar a lo discutido en
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/"&gt;Instalando paquetes en Linux (Mint)&lt;/a&gt;), procederemos a crear un contenedor
para la ejecución de Enterprise Architect (la versión del visor, pero es
aplicable a la versión completa). De manera oficial hay instrucciones para su
uso en Linux con Wine pero la receta está incompleta (hay que agregar una
instrucción más) y es mejor no ensuciar nuestro sistema de 64 bits con
bibliotecas de 32 bits de manera innecesaria. Así que empecemos.&lt;/p&gt;
&lt;div class="section" id="instalar-lxd"&gt;
&lt;h2&gt;Instalar LXD&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso será instalar el paquete LXD, el cual se encuentra
disponible a través de múltiples gestores de paquetes de las distribuciones
Linux pero también como paquete snap. Por facilidad, usaré el paquete snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_28de7a12eba44f84a40d3596f6bd832e-1"&gt;&lt;/a&gt;sudo snap install lxd
&lt;/pre&gt;&lt;p&gt;Ahora, debemos inicializar (solo es necesario la primera vez tras instalar).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_48f818d275d34e9e9c7a61ea3e6430a9-1"&gt;&lt;/a&gt;sudo lxd init
&lt;/pre&gt;&lt;p&gt;En mi caso, todos los valores que son preguntados los he dejado en su valor
por defecto. Personalmente, solo debería preocuparnos el tamaño de la unidad
usado (en caso de tener limitaciones en espacio de almacenamiento).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="crear-perfil-gui"&gt;
&lt;h2&gt;Crear perfil GUI&lt;/h2&gt;
&lt;p&gt;Por defecto, el comportamiento de los contenedores es para la ejecución de
servicios y aplicaciones de consola. Por eso, la ejecución de una aplicación
gráfica nos requiere una configuración adicional, que es realizar el paso al
sistema gráfico de nuestro sistema hospedador.&lt;/p&gt;
&lt;p&gt;El perfil gráfico es definido con el siguiente código (copia y pega en un nuevo
archivo, &lt;code&gt;lxdguiprofile.txt&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-1"&gt;&lt;/a&gt;config:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-2"&gt;&lt;/a&gt;  environment.DISPLAY: :0
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-3"&gt;&lt;/a&gt;  raw.idmap: both 1000 1000
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-4"&gt;&lt;/a&gt;  user.user-data: |
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-5"&gt;&lt;/a&gt;    #cloud-config
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-6"&gt;&lt;/a&gt;    runcmd:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-7"&gt;&lt;/a&gt;      - 'sed -i "s/; enable-shm = yes/enable-shm = no/g" /etc/pulse/client.conf'
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-8"&gt;&lt;/a&gt;      - 'echo export PULSE_SERVER=unix:/tmp/.pulse-native | tee --append /home/ubuntu/.profile'
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-9"&gt;&lt;/a&gt;    packages:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-10"&gt;&lt;/a&gt;      - x11-apps
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-11"&gt;&lt;/a&gt;      - mesa-utils
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-12"&gt;&lt;/a&gt;      - pulseaudio
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-13"&gt;&lt;/a&gt;description: GUI LXD profile
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-14"&gt;&lt;/a&gt;devices:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-15"&gt;&lt;/a&gt;  PASocket:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-16"&gt;&lt;/a&gt;    path: /tmp/.pulse-native
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-17"&gt;&lt;/a&gt;    source: /run/user/1000/pulse/native
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-18"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-19"&gt;&lt;/a&gt;  X0:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-20"&gt;&lt;/a&gt;    path: /tmp/.X11-unix/X0
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-21"&gt;&lt;/a&gt;    source: /tmp/.X11-unix/X0
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-22"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-23"&gt;&lt;/a&gt;  mygpu:
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-24"&gt;&lt;/a&gt;    type: gpu
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-25"&gt;&lt;/a&gt;name: gui
&lt;a name="rest_code_bc7290b3d26c435ab9bd6189566c6b2c-26"&gt;&lt;/a&gt;used_by:
&lt;/pre&gt;&lt;p&gt;Ahora, crearemos el perfil:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_8facd2d4ff4647079a26b97947e1b0fc-1"&gt;&lt;/a&gt;sudo lxc profile create gui
&lt;a name="rest_code_8facd2d4ff4647079a26b97947e1b0fc-2"&gt;&lt;/a&gt;cat lxdguiprofile.txt | sudo lxc profile edit gui
&lt;/pre&gt;&lt;p&gt;Este procedimiento, solo es necesario hacerlo la primera vez.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="obtener-contenedor-base"&gt;
&lt;h2&gt;Obtener contenedor base&lt;/h2&gt;
&lt;p&gt;Una vez creado el perfil, lanzaremos un contenedor usando una imagen base, es
decir, sobre la cual desarrollaremos nuestra necesidad. Estas imágenes base se
encuentran disponibles en la página del proyecto y son bases de múltiples
distribuciones Linux, con versiones y arquitecturas diferentes.&lt;/p&gt;
&lt;p&gt;Para nuestro fin, usaremos una base de Ubuntu 18.04 para arquitectura i386, que
corresponde a 32 bits. Puedes usar otra distribución siempre y cuando disponga
de la forma de instalar los paquetes necesarios y en versiones recientes (entre
más reciente sea Wine, mejor).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_754379e38ba24fd5a66a9b1db0d7eac3-1"&gt;&lt;/a&gt;sudo lxc launch --profile default --profile gui images:ubuntu/18.04/i386 ea
&lt;/pre&gt;&lt;p&gt;Cuando no requerimos la parte gráfica, podemos omitir
&lt;code&gt;--profile default --profile gui&lt;/code&gt;. Los dos perfiles son un proceso de
herencia, primero se carga el perfil por defecto y luego se añade lo necesario
para las aplicaciones gráficas.&lt;/p&gt;
&lt;p&gt;Este procedimiento es la primera vez de cada contenedor. Si por error omitimos
el perfil gráfico, tendremos que volverlo a crear. Si por un error en la
especificación del contenedor lo deseamos eliminar, podemos ejecutar
&lt;code&gt;sudo lxc rm ea --force&lt;/code&gt;. El forzado es necesario para detener la
ejecución del contenedor, o igual podríamos detenerlo primero,
&lt;code&gt;sudo lxc stop ea&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comandos-en-el-contenedor"&gt;
&lt;h2&gt;Comandos en el contenedor&lt;/h2&gt;
&lt;p&gt;Para instalar nuestro programa en el contenedor, necesitamos ejecutar comandos
en este. Para ello, tenemos &lt;code&gt;lxc exec {contenedor} -- {comando}&lt;/code&gt;. Una
forma interactiva, adecuada para pruebas, es ejecutar bash.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_5bc7fdc860024569aa161b4731ab6e2b-1"&gt;&lt;/a&gt;sudo lxc exec ea -- /bin/bash
&lt;/pre&gt;&lt;p&gt;De esta manera podemos ejecutar los comandos de la misma manera que lo hacemos
en nuestro sistema, ya que estamos en el contenedor.&lt;/p&gt;
&lt;p&gt;Si deseamos automatizar, nos interesará enviar directamente las instrucciones
en lugar de bash. Ejemplo, &lt;code&gt;sudo lxc exec ea -- apt update -q&lt;/code&gt;. Notemos
que se ha usado un comando que requiere privilegios de administrador, y es
porque por defecto el ingreso al contenedor es como administrador. Para hacer
uso del usuario estándar debemos indicarlo de forma explícita (por defecto,
tenemos el usuario ubuntu),
&lt;code&gt;sudo lxc exec ea -- su - ubuntu -c 'echo $(uname -a)'&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gestionar-archivos"&gt;
&lt;h2&gt;Gestionar archivos&lt;/h2&gt;
&lt;p&gt;La gestión de archivos es realizada con los comandos &lt;code&gt;file pull&lt;/code&gt; y
&lt;code&gt;file push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Así, si deseamos enviar un archivo:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_29bbe75011dc4d8d85ce9c4c7a01713d-1"&gt;&lt;/a&gt;sudo lxc file push {archivo local} {contenedor}/{ruta contenedor}
&lt;/pre&gt;&lt;p&gt;Y si deseamos traer un archivo del contenedor:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_55f596e024d94ce0a5884c68c18143c9-1"&gt;&lt;/a&gt;sudo lxc file pull {contenedor}/{ruta contenedor} {archivo local}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="instalar-ealite"&gt;
&lt;h2&gt;Instalar EALite&lt;/h2&gt;
&lt;p&gt;Ahora que sabemos ejecutar comandos en el contenedor, instalaremos las
dependencias y finalmente EALite.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-1"&gt;&lt;/a&gt;sudo lxc exec ea -- apt update -q
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-2"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install --install-recommends -y wine-stable winetricks
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-3"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml3'
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-5"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml4'
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-6"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml6'
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-7"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended mdac28'
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-8"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended jet40'
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-9"&gt;&lt;/a&gt;wget http://www.sparxsystems.com.au/bin/EALite.exe
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-10"&gt;&lt;/a&gt;sudo lxc file push EALite.exe ea/home/ubuntu/EALite.exe
&lt;a name="rest_code_025df31e8bd34f6f997a39ab67a67647-11"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'wine msiexec /i EALite.exe'
&lt;/pre&gt;&lt;p&gt;En este punto, procederemos de manera gráfica a la instalación final de EALite.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/instalacion-grafica-ealite-lxc.png"&gt;&lt;img alt="Ventana de instalación gráfica de EALite." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/instalacion-grafica-ealite-lxc.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Ventana de instalación gráfica de EALite.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ahora, es necesario crear un mecanismo simple para la ejecución de EA.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_aad7935fb301487e8bdeb1af33d25d3b-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'mkdir $HOME/.local/bin'
&lt;a name="rest_code_aad7935fb301487e8bdeb1af33d25d3b-2"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; $HOME/.local/bin/ealite'
&lt;a name="rest_code_aad7935fb301487e8bdeb1af33d25d3b-3"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'chmod 755 $HOME/.local/bin/ealite'
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-ealite"&gt;
&lt;h2&gt;Ejecutar EALite&lt;/h2&gt;
&lt;p&gt;Ahora, podemos usar el visor de Enterprise Architect.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_0b10a9163f3d405caa3284e461b60c2b-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;/pre&gt;&lt;p&gt;Cuando iniciemos el sistema operativo, requerimos de iniciar el contenedores
antes de ejecutar la instrucción anterior, &lt;code&gt;sudo lxc start ea&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-inicio-lxc.png"&gt;&lt;img alt="EA Viewer abierto." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-inicio-lxc.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;EA Viewer abierto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-abrir-proyecto-lxc.png" style="width: 480px;"&gt;
&lt;p class="caption"&gt;Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Puedes asegurar una forma simple de ejecutar EALite creando una rutina de
lanzamiento con las dos líneas anteriores en un archivo que sea reconocido en
el &lt;code&gt;path&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-1"&gt;&lt;/a&gt;mkdir -p $HOME/.local/bin
&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-2"&gt;&lt;/a&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; $HOME/.local/bin/ealite
&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-3"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-5"&gt;&lt;/a&gt;EOF
&lt;a name="rest_code_cfe9df464209480f80cacc2eb0ff1368-6"&gt;&lt;/a&gt;chmod 755 $HOME/.local/bin/ealite
&lt;/pre&gt;&lt;p&gt;La ejecución con &lt;code&gt;sudo&lt;/code&gt; puede omitirse si se añade el usuario a un grupo
que permita la ejecución de lxc. Más adelante, haré una publicación sobre como
hacerlo. Por ahora, diviértete ejecutando &lt;code&gt;ealite&lt;/code&gt; e ingresando la
contraseña de administrador.&lt;/p&gt;
&lt;p&gt;Para abrir un proyecto, recuerda usar &lt;code&gt;file push&lt;/code&gt; y explorar dentro del
contenedor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compartir"&gt;
&lt;h2&gt;Compartir&lt;/h2&gt;
&lt;p&gt;Para compartir el contenedor, puedes publicarlo y exportar la imagen.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_4e12d858e53e4bc598865565e88a9afc-1"&gt;&lt;/a&gt;sudo lxc publish ea --alias ealite
&lt;a name="rest_code_4e12d858e53e4bc598865565e88a9afc-2"&gt;&lt;/a&gt;sudo lxc image export ealite
&lt;/pre&gt;&lt;p&gt;La imagen exportada es un archivo &lt;code&gt;tar.gz&lt;/code&gt; con el nombre asociado al
&lt;em&gt;fingerprint&lt;/em&gt; (una secuencia alfanumérica). Luego se debe importar la imagen
y hacer &lt;code&gt;launch&lt;/code&gt; nuevamente con el perfil.&lt;/p&gt;
&lt;p&gt;También puedes exportar directamente el contenedor, lo cual es recomendable
porque lleva con ello la configuración del perfil GUI y es listo para usar
una vez hagas la importación.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_168f873bae724ee1a42f0901f35ba1f0-1"&gt;&lt;/a&gt;sudo lxc export ea ea.tar.gz --optimized-storage
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.eu/enterprisearchitect/ea-lite-edition/"&gt;EA Viewer&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://askubuntu.com/questions/827070/cant-run-glxgears-in-root-on-lxc-2-0-container/827146"&gt;can't run “glxgears” in root on lxc 2.0 container&lt;/a&gt;.
Solución a un posible error usando GUI en LXC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://blog.simos.info/how-to-easily-run-graphics-accelerated-gui-apps-in-lxd-containers-on-your-ubuntu-desktop/"&gt;How to easily run graphics-accelerated GUI apps in LXD containers on your Ubuntu desktop&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://linuxcontainers.org/lxd/getting-started-cli/"&gt;LXD Getting started - command line&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://us.images.linuxcontainers.org/"&gt;Image server for LXC and LXD&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wiki.winehq.org/Winetricks"&gt;Winetricks&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/31228191/how-do-i-export-a-lxc-container"&gt;How do I export a lxc container?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>lxc</category><category>lxd</category><category>wine</category><guid>https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</guid><pubDate>Mon, 11 Nov 2019 23:21:26 GMT</pubDate></item></channel></rss>