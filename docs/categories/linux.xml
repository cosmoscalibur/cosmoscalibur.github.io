<?xml version='1.0' encoding='utf-8'?>
<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Cosmoscalibur (Publicaciones sobre linux)</title><link>https://www.cosmoscalibur.com/</link><description/><atom:link href="https://www.cosmoscalibur.com/categories/linux.xml" rel="self" type="application/rss+xml"/><language>es</language><copyright>Contents © 2020 &lt;a href="mailto:cosmoscalibur&amp;#64;gmail.com"&gt;Edward Villegas-Pulgarin&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by/4.0/"&gt;
&lt;img alt="Creative Commons License BY 4.0"
style="border-width:0; margin-bottom:12px;"
src="https://licensebuttons.net/l/by/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Sat, 10 Oct 2020 16:42:46 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Usar Ubuntu en Windows</title><link>https://www.cosmoscalibur.com/blog/usar-ubuntu-en-windows/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Como contaba en una que otra publicación, por motivos laborales mantengo mucho
en Windows pero es necesario en ocasiones tener Linux a la mano. Sin duda a
nivel de desarrollo Linux toma cada vez mayor relevancia y es notorio cuando
Microsoft le da relevancia al soporte de Linux en su ecosistema, no solo en
despliegues en nube sino también en el mismo escritorio. En esto último,
referimos a WSL (&lt;em&gt;Windows Subsystem for Linux&lt;/em&gt;).&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;WSL es el componente de Windows que nos permite cumplir la promesa de este
artículo, ejecutar distribuciones Linux desde Windows y con rendimiento alto
(no se trata de una emulación sino la ejecución de un kernel Linux real) e
incluso, vincula adecuadamente con la GPU (solo para
&lt;em&gt;Microsoft Windows Insider Program&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Veremos como instalar una distribución Linux en Windows con WSL y es importante
realizarlo en el orden mencionado.&lt;/p&gt;
&lt;div class="section" id="habilitar-wsl"&gt;
&lt;h2&gt;Habilitar WSL&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso es abrir la consola de Power Shell en modo administrador y
a continuación ejecutaremos:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_48c5955096eb489c9206fc449d9d9a13-1"&gt;&lt;/a&gt;dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="actualizar-a-wsl2"&gt;
&lt;h2&gt;Actualizar a WSL2&lt;/h2&gt;
&lt;p&gt;Si disponemos de un sistema de 64 bits (&lt;em&gt;x64&lt;/em&gt;), podemos actualizar a WSL2
siempre y cuando la versión sea 1903 o superior, con número de compilación
18362 o superior. Podemos verificar ejecutando &lt;code&gt;winver&lt;/code&gt; y verificar en
la ventana que despliega.&lt;/p&gt;
&lt;p&gt;En caso contrario, podemos recurrir al asistente de &lt;em&gt;Windows Update&lt;/em&gt; para
tener dicha versión. Una vez con este requisito, podemos ejecutar:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-1"&gt;&lt;/a&gt;dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-2"&gt;&lt;/a&gt;$wsl_file="wsl_update_x64.msi"
&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-3"&gt;&lt;/a&gt;$wsl_file_path=$pwd.Path + "\" + $wsl_file
&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-4"&gt;&lt;/a&gt;Invoke-WebRequest -Uri https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi -OutFile $wsl_file_path -UseBasicParsing
&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-5"&gt;&lt;/a&gt;Start-Process $wsl_file_path
&lt;a name="rest_code_ffd19635cc7e4e02861d04077ed16caf-6"&gt;&lt;/a&gt;wsl --set-default-version 2
&lt;/pre&gt;&lt;p&gt;El procedimiento anterior es mi versión de ejecución por línea de comandos,
pero la documentación oficial dispone para descarga e instalación manual.
Asumo el interés en usar la WSL2 como versión por defecto, por lo cual es
necesario ejecutar la última línea del bloque.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalar-distribucion-linux"&gt;
&lt;h2&gt;Instalar distribución Linux&lt;/h2&gt;
&lt;p&gt;A través de la tienda de aplicaciones podemos continuar con la instalación de
la distribución Linux deseada, pero si te interesa Ubuntu en su versión
20.04, podemos continuar en nuestra consola PowerShell ya abierta (cambiar el
número de la versión LTS soportada en la URL).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e212698fb074403685b1b50e1f24b2d5-1"&gt;&lt;/a&gt;Invoke-WebRequest -Uri https://aka.ms/wslubuntu2004 -OutFile Ubuntu.appx -UseBasicParsing
&lt;a name="rest_code_e212698fb074403685b1b50e1f24b2d5-2"&gt;&lt;/a&gt;Add-AppxPackage .\Ubuntu.appx
&lt;a name="rest_code_e212698fb074403685b1b50e1f24b2d5-3"&gt;&lt;/a&gt;ubuntu2004.exe
&lt;/pre&gt;&lt;p&gt;Una vez se complete el proceso, debemos inicializar la distribución para que la
configuración termine. Puedes hacerlo lanzando la distribución desde la
aplicación o con el comando desde la consola como en este ejemplo.&lt;/p&gt;
&lt;p&gt;Concluido el proceso, será como estamos acostumbrados, creamos un usuario y
contraseña durante la configuración inicial, podemos usar el gestor de paquetes
e incluso lanzar algunas aplicaciones gráficas habilitando el servidor X11.&lt;/p&gt;
&lt;p&gt;Finalmente, actualicemos nuestra distribución (en el paso anterior la consola
ha quedado ubicada en Ubuntu).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_84d81d47d08a46379777976a477a0660-1"&gt;&lt;/a&gt;sudo apt update -q
&lt;a name="rest_code_84d81d47d08a46379777976a477a0660-2"&gt;&lt;/a&gt;sudo apt dist-upgrade -y
&lt;/pre&gt;&lt;p&gt;Hay que tener en cuenta que no todo funcionará, uno de esos detalles es la
instalación de paquetes snap al igual que docker.&lt;/p&gt;
&lt;p&gt;Estamos listos para usar Ubuntu en Windows. Para este fin podemos abrir
nuevamente desde PowerShell y ejecutar &lt;code&gt;ubuntu2004.exe&lt;/code&gt;, abrir el
lanzador de Ubuntu en el menú, usar la consola Ubuntu de Windows Terminal
(lo recomiendo y la reconocerá de forma inmediata) o VSCode con la extensión de
&lt;em&gt;Remote - WSL&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="aplicaciones-graficas"&gt;
&lt;h2&gt;Aplicaciones gráficas&lt;/h2&gt;
&lt;p&gt;Para cerrar este tema, falta que lancemos nuestras aplicaciones gráficas. Para
esto será necesario modificar el archivo &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e3574bf57cd14cfe98825a3ce5d9b9d0-1"&gt;&lt;/a&gt;echo "export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2&amp;gt;/dev/null):0" &amp;gt;&amp;gt; $HOME/.bashrc
&lt;a name="rest_code_e3574bf57cd14cfe98825a3ce5d9b9d0-2"&gt;&lt;/a&gt;echo "export LIBGL_ALWAYS_INDIRECT=1" &amp;gt;&amp;gt; $HOME/.bashrc
&lt;/pre&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;En ningún sitio encontré referencia a necesitar reiniciar o hacer algún
procesimiento adicional, pero en mi caso al intentar tras la ejecución no me
funcionó, pero me funcionó después de reiniciar la máquina.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ahora, instalamos &lt;a class="reference external" href="https://sourceforge.net/projects/vcxsrv/"&gt;VcXsrv&lt;/a&gt;.
Lanzamos &lt;em&gt;XLaunch&lt;/em&gt;, opción &lt;em&gt;Multiple Windows&lt;/em&gt;, &lt;em&gt;Start no client&lt;/em&gt; y finalmente
habilitamos &lt;em&gt;Disable access control&lt;/em&gt;. Este paso es necesario para iniciar el
servidor X (cada que se requiera una aplicación gráfica si no lo hemos hecho
durante la sesión respectiva de Windows). Para hacerlo de forma rápida, puedes
guardar la configuración y lanzarlo desde dicho archivo.&lt;/p&gt;
&lt;p&gt;Para probar, puedes instalar instalar &lt;code&gt;x11-apps&lt;/code&gt; y lanzar &lt;code&gt;xclock&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="errores-comunes"&gt;
&lt;h2&gt;Errores comunes&lt;/h2&gt;
&lt;p&gt;Estos errores comunes son basados en lo natural que se ve ir a la tienda de
aplicaciones y escoger instalar nuestra distribución.&lt;/p&gt;
&lt;p&gt;Al intentar abrir la distribución de esta manera nos encontraremos con el error
siguiente:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1f0390777c00464c88e2d77d23039f34-1"&gt;&lt;/a&gt;Installing, this may take a few minutes...
&lt;a name="rest_code_1f0390777c00464c88e2d77d23039f34-2"&gt;&lt;/a&gt;WslRegisterDistribution failed with error: 0x8007019e
&lt;a name="rest_code_1f0390777c00464c88e2d77d23039f34-3"&gt;&lt;/a&gt;The Windows Subsystem for Linux optional component is not enabled. Please enable it and try again.
&lt;a name="rest_code_1f0390777c00464c88e2d77d23039f34-4"&gt;&lt;/a&gt;See https://aka.ms/wslinstall for details.
&lt;a name="rest_code_1f0390777c00464c88e2d77d23039f34-5"&gt;&lt;/a&gt;Press any key to continue...
&lt;/pre&gt;&lt;p&gt;Esto requiere ejecutar el paso de instalación de habilitación de WSL. Una vez
habilitado, debemos reinstalar la distribución, de otra manera veremos el
siguiente error:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_467d38938aa64fc0af5c4fdb696e0f03-1"&gt;&lt;/a&gt;Installing, this may take a few minutes...
&lt;a name="rest_code_467d38938aa64fc0af5c4fdb696e0f03-2"&gt;&lt;/a&gt;WslRegisterDistribution failed with error: 0x800700b7
&lt;a name="rest_code_467d38938aa64fc0af5c4fdb696e0f03-3"&gt;&lt;/a&gt;The distribution installation has become corrupted.
&lt;a name="rest_code_467d38938aa64fc0af5c4fdb696e0f03-4"&gt;&lt;/a&gt;Please select Reset from App Settings or uninstall and reinstall the app.
&lt;a name="rest_code_467d38938aa64fc0af5c4fdb696e0f03-5"&gt;&lt;/a&gt;Error: 0x800700b7 Cannot create a file when that file already exists.
&lt;/pre&gt;&lt;p&gt;Por esta misma razón, nuestra distro estará en WSL1 y será necesario convertir.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_b29454b20e51425fb694780c002d985b-1"&gt;&lt;/a&gt;wsl -l -v
&lt;a name="rest_code_b29454b20e51425fb694780c002d985b-2"&gt;&lt;/a&gt;wsl --set-version Ubuntu 2
&lt;/pre&gt;&lt;p&gt;Con la primera línea verificamos la versión asignada y con el segundo
convertimos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/wsl/install-win10"&gt;Windows Subsystem for Linux Installation Guide for Windows 10&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.microsoft.com/en-us/windows/wsl/install-manual"&gt;Manually download Windows Subsystem for Linux distro packages&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wiki.ubuntu.com/WSL"&gt;WSL - Ubuntu Wiki&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/cascadium/wsl-windows-toolbar-launcher"&gt;WSL Windows Toolbar Launcher&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.nvidia.com/cuda/wsl-user-guide/index.html#abstract"&gt;CUDA on WSL User Guide&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>linux</category><category>ubuntu</category><category>windows</category><category>wsl</category><guid>https://www.cosmoscalibur.com/blog/usar-ubuntu-en-windows/</guid><pubDate>Tue, 06 Oct 2020 02:22:55 GMT</pubDate></item><item><title>Instalar paquetes snap en Linux Mint 20</title><link>https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;¿Ya tienes Linux Mint 20 y deseas
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/#snap"&gt;instalar paquetes Snap&lt;/a&gt;? Mint ha
decidido deshabilitar la instalación de Snap por defecto y es necesario cambiar
la configuración de apt para poderlo hacer.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Si prefieres la versión en video:&lt;/p&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/i2GjXP8iB1I?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;div class="section" id="el-problema"&gt;
&lt;h2&gt;El problema&lt;/h2&gt;
&lt;p&gt;Si ya cuentas con Linux Mint 20 observarás que al intentar instalar el paquete
&lt;code&gt;snapd&lt;/code&gt; (el gestor snap), nos llevaremos la sorpresa de no poderlo
instalar. Encontraremos un mensaje como el siguiente:&lt;/p&gt;
&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#739FCF"&gt;&lt;b&gt;~&lt;/b&gt;&lt;/font&gt;$ apt install snapd
Reading package lists... Done
Building dependency tree
Reading state information... Done
Package snapd is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source

&lt;font color="#EF2929"&gt;&lt;b&gt;E: &lt;/b&gt;&lt;/font&gt;Package 'snapd' has no installation candidate&lt;/pre&gt;

&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#739FCF"&gt;&lt;b&gt;~&lt;/b&gt;&lt;/font&gt;$ apt show snapd
Package: snapd
State: not a real package (virtual)
&lt;font color="#C4A000"&gt;N: &lt;/font&gt;Can't select candidate version from package snapd as it has no candidate
&lt;font color="#C4A000"&gt;N: &lt;/font&gt;There is 1 additional record. Please use the '-a' switch to see it
&lt;font color="#C4A000"&gt;N: &lt;/font&gt;No packages found&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="la-razon"&gt;
&lt;h2&gt;La razón&lt;/h2&gt;
&lt;p&gt;Este problema es originado por una modificación en las preferencias de
&lt;code&gt;apt&lt;/code&gt; que lo engaña haciendo creer que no hay un paquete disponible que
cumpla la solicitud. Esto es provocado por el comportamiento asociado al
instalador de &lt;em&gt;Chromium&lt;/em&gt;, el cual, para su fácil mantenimiento por parte del
equipo de Ubuntu, han decidido usar un paquete DEB cuya única función es
invocar la instalación desde snap (instalando snap si este no lo está).&lt;/p&gt;
&lt;p&gt;En lo personal no lo veo problemático, para mi el caso ideal es tener ojalá
gestores de paquetes que terminen de instalar componentes desde otro gestor de
forma automática en lugar de yo encargarme del trabajo sucio. Pero el equipo de
Mint encuentra una falta de transparencia con sus usuarios que no son
advertidos de esto e incluso considerar como una falla de seguridad &lt;a class="citation-reference" href="https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/#snap-mint" id="id1"&gt;[snap-mint]&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-solucion"&gt;
&lt;h2&gt;La solución&lt;/h2&gt;
&lt;p&gt;Para solventar este problema, basta con eliminar o comentar las líneas de un
archivo: &lt;code&gt;/etc/apt/preferences.d/nosnap.pref&lt;/code&gt;. En mi caso, no veo razón
de mantenerlo, así que procedo a eliminarlo y posteriormente a instalar el
gestor de snaps. Si te sientes más cómodo, puedes comentar las líneas y una vez
instalado el gestor volver a descomentarlas &lt;a class="citation-reference" href="https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/#snap-install" id="id2"&gt;[snap-install]&lt;/a&gt;.&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_54e9443e426b4f2183aa8540c0aa3b68-1"&gt;&lt;/a&gt;sudo rm /etc/apt/preferences.d/nosnap.pref
&lt;a name="rest_code_54e9443e426b4f2183aa8540c0aa3b68-2"&gt;&lt;/a&gt;sudo apt install -y snapd
&lt;a name="rest_code_54e9443e426b4f2183aa8540c0aa3b68-3"&gt;&lt;/a&gt;snap &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Ahora puedes instalar tus paquetes snap en la forma como lo expliqué en un
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/#snap"&gt;artículo anterior&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;dl class="citation"&gt;
&lt;dt class="label" id="snap-mint"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/#id1"&gt;snap-mint&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Snapping at Canonical's Snap: Linux Mint team says no to Ubuntu
store 'backdoor'.
&lt;a class="reference external" href="https://www.theregister.com/2020/06/02/linux_mint_team_snap/"&gt;The register, 2 Jun 2020&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="snap-install"&gt;&lt;span class="brackets"&gt;&lt;a class="fn-backref" href="https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/#id2"&gt;snap-install&lt;/a&gt;&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;How To Enable Snap And Install Snap Packages On Linux Mint 20?
&lt;a class="reference external" href="https://fossbytes.com/how-to-enable-snap-and-install-snap-packages-on-linux-mint-20/"&gt;fossbytes, June 12, 2020&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>gestor de paquetes</category><category>instalación de software</category><category>linux</category><category>linux mint</category><category>paquetes snap</category><guid>https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/</guid><pubDate>Mon, 29 Jun 2020 23:16:35 GMT</pubDate></item><item><title>Usar la cámara de tu celular como webcam</title><link>https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Con la nueva normalidad que vivimos alrededor de la virtualidad, el uso de
videollamadas se ha incrementado y muchas cámaras incorporadas en los
equipos no poseen buenas características (o son ausentes). Adicional, el
soporte de opciones como usar el celular, una buena alternativa para no
comprar una cámara web, es amplio en Windows pero no en Linux.&lt;/p&gt;
&lt;p&gt;Así que, por ese motivo hoy les compartiré como usar la cámara del celular
(Android o iOS) como cámara web en Linux.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="droidcam"&gt;
&lt;h2&gt;DroidCam&lt;/h2&gt;
&lt;p&gt;Sin hacer muchos rodeos y comparaciones, en este asunto seré muy práctico.
La primera aplicación que me cumplió con las características y que
funcionó adecuadamente, es DroidCam [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#id1"&gt;droidcam&lt;/a&gt;]. Esta utilidad nos permite
usar la cámara del celular para reemplazar los incorporados del equipo, y
se puede hacer comunicación tanto por wifi como por el cable USB
(instalando ADB).&lt;/p&gt;
&lt;div class="section" id="instalacion-en-linux"&gt;
&lt;h3&gt;Instalación en Linux&lt;/h3&gt;
&lt;p&gt;El procedimiento de instalación puede seguirse en la página web de
DroidCam [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#linux"&gt;linux&lt;/a&gt;] pero lo lustraré para el caso de Linux Mint
(aplicable para Debian y derivados). El aspecto dependiente de la
distribución es la instalación de las 3 dependencias requeridas (GCC, Make
y Linux Headers).&lt;/p&gt;
&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  wget https://files.dev47apps.net/linux/droidcam_latest.zip
--2020-05-12 19:03:30--  https://files.dev47apps.net/linux/droidcam_latest.zip
Resolving files.dev47apps.net (files.dev47apps.net)... 104.28.5.185, 104.28.4.185, 2606:4700:3037::681c:4b9, ...
Connecting to files.dev47apps.net (files.dev47apps.net)|104.28.5.185|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 933306 (911K) [application/zip]
Saving to: ‘droidcam_latest.zip’
droidcam_latest.zip 100%[===================&amp;gt;] 911,43K  2,45MB/s    in 0,4s
2020-05-12 19:03:30 (2,45 MB/s) - ‘droidcam_latest.zip’ saved [933306/933306]
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  echo "5ff0e772a76befba4e37e03101b611d7 droidcam_latest.zip" | md5sum -c --
droidcam_latest.zip: OK
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;~/tmp&lt;/b&gt;&lt;/font&gt;$ sudo apt install -y gcc make linux-headers-`uname -r`
Reading package lists... Done
Building dependency tree
Reading state information... Done
make is already the newest version (4.1-9.1ubuntu1).
gcc is already the newest version (4:7.4.0-1ubuntu2.3).
linux-headers-5.3.0-51-generic is already the newest version (5.3.0-51.44~18.04.2).
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp&lt;/b&gt;&lt;/font&gt;$  unzip droidcam_latest.zip -d droidcam &amp;amp;&amp;amp; cd droidcam
Archive:  droidcam_latest.zip
  inflating: droidcam/LICENCE
  inflating: droidcam/Makefile
  inflating: droidcam/README.md
  inflating: droidcam/droidcam
  inflating: droidcam/droidcam-cli
  inflating: droidcam/install
  creating: droidcam/src/
  inflating: droidcam/uninstall
  creating: droidcam/v4l2loopback/
  inflating: droidcam/v4l2loopback/v4l2loopback-dc.c
  inflating: droidcam/v4l2loopback/Makefile
  inflating: droidcam/v4l2loopback/test-mmap.c
  inflating: droidcam/v4l2loopback/test.c
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$  sudo ./install
[sudo] password for cosmoscalibur:
Webcam parameters: '640' and '480'
Building v4l2loopback-dc.ko
make: Entering directory '/tmp/droidcam/v4l2loopback'
make -C /lib/modules/`uname -r`/build M=`pwd`
make[1]: Entering directory '/usr/src/linux-headers-5.3.0-51-generic'
  CC [M]  /tmp/droidcam/v4l2loopback/v4l2loopback-dc.o
  Building modules, stage 2.
  MODPOST 1 modules
  CC      /tmp/droidcam/v4l2loopback/v4l2loopback-dc.mod.o
  LD [M]  /tmp/droidcam/v4l2loopback/v4l2loopback-dc.ko
make[1]: Leaving directory '/usr/src/linux-headers-5.3.0-51-generic'
make: Leaving directory '/tmp/droidcam/v4l2loopback'
Moving driver and executable to system folders
+ cp v4l2loopback/v4l2loopback-dc.ko /lib/modules/5.3.0-51-generic/kernel/drivers/media/video/
+ cp droidcam /usr/bin/
+ cp droidcam-cli /usr/bin/
+ set +x
Registering webcam device
Running depmod
make: Entering directory '/tmp/droidcam/v4l2loopback'
make -C /lib/modules/`uname -r`/build M=`pwd` clean
make[1]: Entering directory '/usr/src/linux-headers-5.3.0-51-generic'
  CLEAN   /tmp/droidcam/v4l2loopback/Module.symvers
make[1]: Leaving directory '/usr/src/linux-headers-5.3.0-51-generic'
make: Leaving directory '/tmp/droidcam/v4l2loopback'
Adding uninstall script
Adding driver to /etc/modules
Done
&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$ lsmod | grep v4l2loopback_dc
&lt;font color="#EF2929"&gt;&lt;b&gt;v4l2loopback_dc&lt;/b&gt;&lt;/font&gt;        24576  0
videodev              208896  5 v4l2_common,videobuf2_v4l2,&lt;font color="#EF2929"&gt;&lt;b&gt;v4l2loopback_dc&lt;/b&gt;&lt;/font&gt;,uvcvideo,videobuf2_common
&lt;/pre&gt;&lt;p&gt;La última instrucción es solo para efectos de validación. Si sale
&lt;code&gt;v4l2loopback_dc&lt;/code&gt;, estamos bien.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion-en-android"&gt;
&lt;h3&gt;Instalación en Android&lt;/h3&gt;
&lt;p&gt;Para instalar en Android, buscamos DroidCam en Google Play [&lt;a class="reference internal" href="https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/#android"&gt;android&lt;/a&gt;].
Encontrarán dos versiones, una gratuita y una paga. Podemos usar la
gratuita para la funcionalidad requerida, siendo única limitación la
resolución máxima a la que transmite.&lt;/p&gt;
&lt;p&gt;Una vez instalada, procedemos a abrir y seguir los siguientes pasos:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Mensaje de agradecimiento, presionamos "Próximo".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Instrucciones para cámara web, presionamos "Obtener".&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;En la siguiente vista obtenemos la IP y el puerto que debemos
configurar en nuestro equipo.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-activo-ip-puerto.jpg"&gt;&lt;img alt="DroidCam activo (información de IP y puerto)." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-activo-ip-puerto.thumbnail.jpg" style="width: 300px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;DroidCam activo (información de IP y puerto).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;En la parte superior derecha, accedemos a la configuración. La
configuración importante para nosotros está en la sección "CÁMARA", y es
el límite de FPS (ayuda a ahorrar batería) y la cámara que se usará (en
"Cámara" podemos seleccionar cual de las cámaras).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="ejecutar"&gt;
&lt;h2&gt;Ejecutar&lt;/h2&gt;
&lt;p&gt;Finalmente, para hacer uso de DroidCam en Linux, debemos ejecutar en la
consola &lt;code&gt;droidcam&lt;/code&gt; y esto abrirá un GUI para ingresar la IP y el
puerto que usaremos.&lt;/p&gt;
&lt;pre&gt;&lt;font color="#8AE234"&gt;&lt;b&gt;cosmoscalibur@edliviano&lt;/b&gt;&lt;/font&gt;:&lt;font color="#729FCF"&gt;&lt;b&gt;/tmp/droidcam&lt;/b&gt;&lt;/font&gt;$ droidcam
Device: USB2.0 VGA UVC WebCam: USB2.0 V
Device: USB2.0 VGA UVC WebCam: USB2.0 V
Device: Droidcam
Found driver: /dev/video2 (fd:7)
connecting to 192.168.1.2:4747
&lt;/pre&gt;&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-linux-gui.png"&gt;&lt;img alt="Cliente GUI de DroidCam en Linux." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-linux-gui.thumbnail.png" style="width: 400px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Cliente GUI de DroidCam en Linux. Aquí ingresamos IP y puerto.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Una vez configurado, presionamos "Connect". En este momento DroidCam del
celular activará la vista de la cámara y podremos configurar la aplicación
que requiera de la cámara.&lt;/p&gt;
&lt;p&gt;Para ejemplo, tomaré Skype, pero será igual con toda aplicación que
soporte selección de cámara (aplica para Hangout, OBS, Teams, entre otras).
En el menú respectivo, seleccionamos "DroidCam" y estamos listos.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-seleccion-skype.jpg"&gt;&lt;img alt="Selección de DroidCam como cámara en Skype." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-seleccion-skype.thumbnail.jpg" style="width: 400px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Selección de DroidCam como cámara en las aplicaciones.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Comparemos ahora la calidad incluyendo las dos vistas (DroidCam e
incorporada) con OBS.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-vs-integrada.png"&gt;&lt;img alt="Comparación de cámara DroidCam y cámara integrada." src="https://www.cosmoscalibur.com/images/usar-la-camara-de-tu-celular-como-webcam/droidcam-vs-integrada.thumbnail.png" style="width: 600px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Comparación incorporando la vista de DroidCam (izquierda) y la cámara integrada de mi equipo (derecha) en OBS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;dl class="citation"&gt;
&lt;dt class="label" id="id1"&gt;&lt;span class="brackets"&gt;droidcam&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Wireless Webcam &lt;a class="reference external" href="https://www.dev47apps.com/"&gt;https://www.dev47apps.com/&lt;/a&gt; .&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="linux"&gt;&lt;span class="brackets"&gt;linux&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Linux Install &lt;a class="reference external" href="https://www.dev47apps.com/droidcam/linuxx/"&gt;https://www.dev47apps.com/droidcam/linuxx/&lt;/a&gt; .&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class="label" id="android"&gt;&lt;span class="brackets"&gt;android&lt;/span&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;DroidCam Wireless Webcam (Android) &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.dev47apps.droidcam"&gt;https://play.google.com/store/apps/details?id=com.dev47apps.droidcam&lt;/a&gt;&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>android</category><category>aplicaciones android</category><category>cámara</category><category>droidcam</category><category>linux</category><category>webcam</category><guid>https://www.cosmoscalibur.com/blog/usar-la-camara-de-tu-celular-como-webcam/</guid><pubDate>Sun, 17 May 2020 20:02:25 GMT</pubDate></item><item><title>Crear contenedor Docker aplicación GUI - EALite</title><link>https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Dando continuidad al uso de contenedores que inicie en la publicación anterior,
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;, reproduciré la
instalación de Enterprise Architect Viewer (EALite) con Docker (y por supuesto,
Wine). Si deseas reproducir el ejemplo de este caso, requieres reproducir la
el artículo mencionado para extraer el directorio de Wine.&lt;/p&gt;
&lt;p&gt;A diferencia de LXC, Docker está más orientado al aislamiento de aplicaciones y
no de sistema operativo (LXC cumple una función más cercana a una máquina
virtual) lo cual ayuda a un mejor despliegue de aplicaciones y la
estandarización de las etapas de desarrollo y de pruebas.&lt;/p&gt;
&lt;p&gt;Común a LXC tenemos imágenes base que podemos usar, disponibles en
&lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. A partir de estas podemos completar
nuestras necesidades especificando en el archivo Dockerfile.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="instalar-docker"&gt;
&lt;h2&gt;Instalar Docker&lt;/h2&gt;
&lt;p&gt;Recomiendo en Linux instalar docker con snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_598b6da96874464a9ab4e7a212725c5b-1"&gt;&lt;/a&gt;sudo snap install docker
&lt;/pre&gt;&lt;p&gt;Posteriormente, podemos asociar nuestro usuario para la ejecución sin ser
administrador.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_99704c1c86414605a491e150a6b29fa5-1"&gt;&lt;/a&gt;sudo groupadd docker
&lt;a name="rest_code_99704c1c86414605a491e150a6b29fa5-2"&gt;&lt;/a&gt;sudo usermod -aG docker $USER
&lt;a name="rest_code_99704c1c86414605a491e150a6b29fa5-3"&gt;&lt;/a&gt;newgrp docker
&lt;/pre&gt;&lt;p&gt;Puedes probar ejecutando como usuario regular, &lt;code&gt;docker run hello-world&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="dockerfile"&gt;
&lt;h2&gt;Dockerfile&lt;/h2&gt;
&lt;p&gt;Este archivo es el mecanismo mediante el cual se especifican las reglas de
construcción de nuestra imagen. Se define un lenguaje común sin importar el
sistema operativo base y las funciones específicas del sistema son usadas con
una instrucción que habilita a ejecución en él.&lt;/p&gt;
&lt;p&gt;Los comentarios en el archivo son como tradicionalmente estamos acostumbrados
en otros lenguajes (entre ellos, bash), con signo número &lt;code&gt;#&lt;/code&gt;. Esto posee
una excepción, y es el caso donde existe una directriz después como el caso que
se ejemplificara.&lt;/p&gt;
&lt;p&gt;La directriz &lt;code&gt;escape&lt;/code&gt; es usada para cambiar el carácter de salto de línea
para instrucciones de múltiples líneas. Se puede tener la habitual barra
invertida (&lt;code class="docutils literal"&gt;\&lt;/code&gt;) que es conflictivo con rutas con espacios en Linux o
rutas Windows, y la opción de la tilde invertida (&lt;code class="docutils literal"&gt;`&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Después podemos definir la imagen base usando &lt;code&gt;FROM&lt;/code&gt; seguido de la
especificación de la imagen en &lt;a class="reference external" href="https://hub.docker.com"&gt;DockerHub&lt;/a&gt;. En este caso, usaremos la &lt;a class="reference external" href="https://hub.docker.com/_/ubuntu"&gt;imagen
Docker de Ubuntu&lt;/a&gt; con arquitectura i386 y
versión 18.04. En general, la estructura de invocación es
&lt;code&gt;arquitectura/ubuntu:version&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Las instrucciones son ejecutadas por defecto por el usuario &lt;em&gt;root&lt;/em&gt;
(administrador), de manera que podemos ejecutar la instalación de paquetes
invocando directamente el llamado al sistema iniciando con &lt;code&gt;RUN&lt;/code&gt;. Como se
observa en el ejemplo, a continuación es una línea típica que se ejecuta en
Ubuntu.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;La creación del usuario es necesaria porque wine debe ejecutarse por un
usuario regular. Adicional, el nombre de usuario corresponde al mismo nombre
del usuario Linux del cual traemos la copia de la instalación en Wine (Wine
asigna el nombre de usuario Windows igual al usuario Linux, luego, al copiar
la carpeta de Wine, solo funcionará si encuentra el mismo usuario).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Podemos cambiar el directorio sobre el cual ejecutamos usando &lt;code&gt;WORKDIR&lt;/code&gt;.
En la siguiente línea usamos &lt;code&gt;COPY&lt;/code&gt; para mover un directorio del sistema
hospedador a la imagen. Existe una instrucción similar, &lt;code&gt;ADD&lt;/code&gt;, la cual
soporta que la fuente sea una URL realizando la descarga, y descomprime
archivos &lt;em&gt;tar&lt;/em&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;El directorio que moveremos se genero en el contenedor LXC que construimos
en &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/"&gt;Crear contenedor LXC para aplicación GUI - EALite&lt;/a&gt;. Para ello,
iniciamos el contenedor y extraemos el directorio.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_0fdcedd41fd24cea81a103bce3ab1bb1-1"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_0fdcedd41fd24cea81a103bce3ab1bb1-2"&gt;&lt;/a&gt;sudo lxc file pull -r ea/home/ubuntu/.wine .
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Con &lt;code&gt;USER&lt;/code&gt; cambiamos el usuario que ejecuta los procesos. Es importante
que a la hora de concluir, si un proceso es ejecutado por un usuario regular,
nuestro último cambio de usuario debe apuntar a él, de otra forma el
contenedor estará activo para el usuario administrador. Otro aspecto importante
es el comportamiento por defecto en Linux, donde puede crear el usuario si no
existe (pero no el directorio de usuario).&lt;/p&gt;
&lt;p&gt;Finalmente, es necesario indicar que se ejecuta cuando se lanza el contenedor.
Esto es posible con &lt;code&gt;CMD&lt;/code&gt; o con &lt;code&gt;ENTRYPOINT&lt;/code&gt;. La diferencia es que
el primero permite sobreescribir la ejecución enviando como parámetro lo que
se desea ejecutar, mientras que la segunda opción solo ejecuta la configurada.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-1"&gt;&lt;/a&gt;# escape=`
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-2"&gt;&lt;/a&gt;FROM i386/ubuntu:18.04
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-3"&gt;&lt;/a&gt;RUN apt update -q &amp;amp;&amp;amp; apt install --install-recommends -y wine-stable
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-4"&gt;&lt;/a&gt;RUN apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-5"&gt;&lt;/a&gt;RUN useradd -ms /bin/bash ubuntu
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-6"&gt;&lt;/a&gt;WORKDIR /home/ubuntu
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-7"&gt;&lt;/a&gt;COPY .wine .wine
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-8"&gt;&lt;/a&gt;RUN chown -R ubuntu .wine
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-9"&gt;&lt;/a&gt;USER ubuntu
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-10"&gt;&lt;/a&gt;RUN mkdir -p .local/bin &amp;amp;&amp;amp; `
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-11"&gt;&lt;/a&gt;        echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; .local/bin/ealite &amp;amp;&amp;amp; `
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-12"&gt;&lt;/a&gt;        chmod 755 .local/bin/ealite
&lt;a name="rest_code_29d1d60592ea4ce780a3da2a667e16ef-13"&gt;&lt;/a&gt;CMD ".local/bin/ealite"
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="construir-imagen-docker"&gt;
&lt;h2&gt;Construir imagen Docker&lt;/h2&gt;
&lt;p&gt;La construcción la realizamos con la opción &lt;code&gt;build&lt;/code&gt;. Se usa el argumento
&lt;code&gt;-t&lt;/code&gt; para indicar la etiqueta que asignaremos a la imagen y &lt;code&gt;-f&lt;/code&gt;
para relacionar la ruta del archivo dockerfile que se usará. El siguiente
argumento no posee marca para indicarlo y corresponde al contexto, que viene a
ser la ruta donde se encuentran los archivos que usaremos (que puede ser
reemplazado por un archivo de contexto con la ruta a los distintos archivos).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_60d43d38254d44ab84966d8b3112f5d0-1"&gt;&lt;/a&gt;docker build -t cosmoscalibur/ealite:latest -f dockerfile .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-contenedor"&gt;
&lt;h2&gt;Ejecutar contenedor&lt;/h2&gt;
&lt;p&gt;Ahora puedes lanzar un contenedor gráfico basado en la imagen construida con la
siguiente instrucción.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1ed743036f87465483f632eb790e40de-1"&gt;&lt;/a&gt;docker run --net=host --env="DISPLAY" --volume="$HOME/.Xauthority:/root/.Xauthority:rw" cosmoscalibur/ealite:latest
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.docker.com/install/linux/linux-postinstall/"&gt;Docker docs: Post-installation steps for Linux&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.docker.com/reference/"&gt;Docker docs: Reference documentation&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://medium.com/@SaravSun/running-gui-applications-inside-docker-containers-83d65c0db110"&gt;Running GUI Applications inside Docker Containers&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>docker</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>wine</category><guid>https://www.cosmoscalibur.com/blog/crear-contenedor-docker-aplicacion-gui-ealite/</guid><pubDate>Sat, 23 Nov 2019 02:47:22 GMT</pubDate></item><item><title>Crear contenedor LXC para aplicación GUI - EALite</title><link>https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;El uso de contenedores en la industria del software se ha extendido ampliamente
y no es de extrañar, ofrece a los desarrolladores la posibilidad de mejorar el
aislamiento de sus servicios y de ahí hacerlo menos susceptible a errores por
colisiones con otros servicios o conflictos de dependencias. Al mismo tiempo,
son una alternativa más amigable en recursos respecto a las máquinas virtuales.&lt;/p&gt;
&lt;p&gt;Múltiples proveedores de infraestructura para nube ofrecen la opción de
desplegar los servicios a partir de un contenedor, y sin duda, facilita la
distribución de entornos de desarrollo y aplicaciones.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Con estos beneficios (algo similar a lo discutido en
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/"&gt;Instalando paquetes en Linux (Mint)&lt;/a&gt;), procederemos a crear un contenedor
para la ejecución de Enterprise Architect (la versión del visor, pero es
aplicable a la versión completa). De manera oficial hay instrucciones para su
uso en Linux con Wine pero la receta está incompleta (hay que agregar una
instrucción más) y es mejor no ensuciar nuestro sistema de 64 bits con
bibliotecas de 32 bits de manera innecesaria. Así que empecemos.&lt;/p&gt;
&lt;div class="section" id="instalar-lxd"&gt;
&lt;h2&gt;Instalar LXD&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso será instalar el paquete LXD, el cual se encuentra
disponible a través de múltiples gestores de paquetes de las distribuciones
Linux pero también como paquete snap. Por facilidad, usaré el paquete snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_acd0fc1bfb2f4f60bcd20d83572ef44c-1"&gt;&lt;/a&gt;sudo snap install lxd
&lt;/pre&gt;&lt;p&gt;Ahora, debemos inicializar (solo es necesario la primera vez tras instalar).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f9be566080fa4363a066d56d502af60a-1"&gt;&lt;/a&gt;sudo lxd init
&lt;/pre&gt;&lt;p&gt;En mi caso, todos los valores que son preguntados los he dejado en su valor
por defecto. Personalmente, solo debería preocuparnos el tamaño de la unidad
usado (en caso de tener limitaciones en espacio de almacenamiento).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="crear-perfil-gui"&gt;
&lt;h2&gt;Crear perfil GUI&lt;/h2&gt;
&lt;p&gt;Por defecto, el comportamiento de los contenedores es para la ejecución de
servicios y aplicaciones de consola. Por eso, la ejecución de una aplicación
gráfica nos requiere una configuración adicional, que es realizar el paso al
sistema gráfico de nuestro sistema hospedador.&lt;/p&gt;
&lt;p&gt;El perfil gráfico es definido con el siguiente código (copia y pega en un nuevo
archivo, &lt;code&gt;lxdguiprofile.txt&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-1"&gt;&lt;/a&gt;config:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-2"&gt;&lt;/a&gt;  environment.DISPLAY: :0
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-3"&gt;&lt;/a&gt;  raw.idmap: both 1000 1000
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-4"&gt;&lt;/a&gt;  user.user-data: |
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-5"&gt;&lt;/a&gt;    #cloud-config
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-6"&gt;&lt;/a&gt;    runcmd:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-7"&gt;&lt;/a&gt;      - 'sed -i "s/; enable-shm = yes/enable-shm = no/g" /etc/pulse/client.conf'
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-8"&gt;&lt;/a&gt;      - 'echo export PULSE_SERVER=unix:/tmp/.pulse-native | tee --append /home/ubuntu/.profile'
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-9"&gt;&lt;/a&gt;    packages:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-10"&gt;&lt;/a&gt;      - x11-apps
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-11"&gt;&lt;/a&gt;      - mesa-utils
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-12"&gt;&lt;/a&gt;      - pulseaudio
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-13"&gt;&lt;/a&gt;description: GUI LXD profile
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-14"&gt;&lt;/a&gt;devices:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-15"&gt;&lt;/a&gt;  PASocket:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-16"&gt;&lt;/a&gt;    path: /tmp/.pulse-native
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-17"&gt;&lt;/a&gt;    source: /run/user/1000/pulse/native
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-18"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-19"&gt;&lt;/a&gt;  X0:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-20"&gt;&lt;/a&gt;    path: /tmp/.X11-unix/X0
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-21"&gt;&lt;/a&gt;    source: /tmp/.X11-unix/X0
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-22"&gt;&lt;/a&gt;    type: disk
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-23"&gt;&lt;/a&gt;  mygpu:
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-24"&gt;&lt;/a&gt;    type: gpu
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-25"&gt;&lt;/a&gt;name: gui
&lt;a name="rest_code_913a85686bb04777b3f89d631218f643-26"&gt;&lt;/a&gt;used_by:
&lt;/pre&gt;&lt;p&gt;Ahora, crearemos el perfil:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fc04eb722ced419da3b9a27af263de62-1"&gt;&lt;/a&gt;sudo lxc profile create gui
&lt;a name="rest_code_fc04eb722ced419da3b9a27af263de62-2"&gt;&lt;/a&gt;cat lxdguiprofile.txt | sudo lxc profile edit gui
&lt;/pre&gt;&lt;p&gt;Este procedimiento, solo es necesario hacerlo la primera vez.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="obtener-contenedor-base"&gt;
&lt;h2&gt;Obtener contenedor base&lt;/h2&gt;
&lt;p&gt;Una vez creado el perfil, lanzaremos un contenedor usando una imagen base, es
decir, sobre la cual desarrollaremos nuestra necesidad. Estas imágenes base se
encuentran disponibles en la página del proyecto y son bases de múltiples
distribuciones Linux, con versiones y arquitecturas diferentes.&lt;/p&gt;
&lt;p&gt;Para nuestro fin, usaremos una base de Ubuntu 18.04 para arquitectura i386, que
corresponde a 32 bits. Puedes usar otra distribución siempre y cuando disponga
de la forma de instalar los paquetes necesarios y en versiones recientes (entre
más reciente sea Wine, mejor).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_5f5b6d8b506e47eb9a9dea8171b9ea9f-1"&gt;&lt;/a&gt;sudo lxc launch --profile default --profile gui images:ubuntu/18.04/i386 ea
&lt;/pre&gt;&lt;p&gt;Cuando no requerimos la parte gráfica, podemos omitir
&lt;code&gt;--profile default --profile gui&lt;/code&gt;. Los dos perfiles son un proceso de
herencia, primero se carga el perfil por defecto y luego se añade lo necesario
para las aplicaciones gráficas.&lt;/p&gt;
&lt;p&gt;Este procedimiento es la primera vez de cada contenedor. Si por error omitimos
el perfil gráfico, tendremos que volverlo a crear. Si por un error en la
especificación del contenedor lo deseamos eliminar, podemos ejecutar
&lt;code&gt;sudo lxc rm ea --force&lt;/code&gt;. El forzado es necesario para detener la
ejecución del contenedor, o igual podríamos detenerlo primero,
&lt;code&gt;sudo lxc stop ea&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comandos-en-el-contenedor"&gt;
&lt;h2&gt;Comandos en el contenedor&lt;/h2&gt;
&lt;p&gt;Para instalar nuestro programa en el contenedor, necesitamos ejecutar comandos
en este. Para ello, tenemos &lt;code&gt;lxc exec {contenedor} -- {comando}&lt;/code&gt;. Una
forma interactiva, adecuada para pruebas, es ejecutar bash.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_7d840cfc2c984e20be2a0c9bc645dc12-1"&gt;&lt;/a&gt;sudo lxc exec ea -- /bin/bash
&lt;/pre&gt;&lt;p&gt;De esta manera podemos ejecutar los comandos de la misma manera que lo hacemos
en nuestro sistema, ya que estamos en el contenedor.&lt;/p&gt;
&lt;p&gt;Si deseamos automatizar, nos interesará enviar directamente las instrucciones
en lugar de bash. Ejemplo, &lt;code&gt;sudo lxc exec ea -- apt update -q&lt;/code&gt;. Notemos
que se ha usado un comando que requiere privilegios de administrador, y es
porque por defecto el ingreso al contenedor es como administrador. Para hacer
uso del usuario estándar debemos indicarlo de forma explícita (por defecto,
tenemos el usuario ubuntu),
&lt;code&gt;sudo lxc exec ea -- su - ubuntu -c 'echo $(uname -a)'&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gestionar-archivos"&gt;
&lt;h2&gt;Gestionar archivos&lt;/h2&gt;
&lt;p&gt;La gestión de archivos es realizada con los comandos &lt;code&gt;file pull&lt;/code&gt; y
&lt;code&gt;file push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Así, si deseamos enviar un archivo:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_16f5d4f4c672462792c4b23c8c36445f-1"&gt;&lt;/a&gt;sudo lxc file push {archivo local} {contenedor}/{ruta contenedor}
&lt;/pre&gt;&lt;p&gt;Y si deseamos traer un archivo del contenedor:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_d16645ff5e414241b8bfa0daf367ee46-1"&gt;&lt;/a&gt;sudo lxc file pull {contenedor}/{ruta contenedor} {archivo local}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="instalar-ealite"&gt;
&lt;h2&gt;Instalar EALite&lt;/h2&gt;
&lt;p&gt;Ahora que sabemos ejecutar comandos en el contenedor, instalaremos las
dependencias y finalmente EALite.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-1"&gt;&lt;/a&gt;sudo lxc exec ea -- apt update -q
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-2"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install --install-recommends -y wine-stable winetricks
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-3"&gt;&lt;/a&gt;sudo lxc exec ea -- apt install -y fonts-crosextra-carlito
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml3'
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-5"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml4'
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-6"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended msxml6'
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-7"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended mdac28'
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-8"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'winetricks --unattended jet40'
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-9"&gt;&lt;/a&gt;wget http://www.sparxsystems.com.au/bin/EALite.exe
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-10"&gt;&lt;/a&gt;sudo lxc file push EALite.exe ea/home/ubuntu/EALite.exe
&lt;a name="rest_code_fd2630ec7205452caa1911fcffb04e14-11"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'wine msiexec /i EALite.exe'
&lt;/pre&gt;&lt;p&gt;En este punto, procederemos de manera gráfica a la instalación final de EALite.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/instalacion-grafica-ealite-lxc.png"&gt;&lt;img alt="Ventana de instalación gráfica de EALite." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/instalacion-grafica-ealite-lxc.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Ventana de instalación gráfica de EALite.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Ahora, es necesario crear un mecanismo simple para la ejecución de EA.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ab0e8f7f447d474cbab07453088ac205-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'mkdir $HOME/.local/bin'
&lt;a name="rest_code_ab0e8f7f447d474cbab07453088ac205-2"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'echo "wine $HOME/.wine/drive_c/Program\ Files/Sparx\ Systems/EA\ LITE/EA.exe" &amp;gt; $HOME/.local/bin/ealite'
&lt;a name="rest_code_ab0e8f7f447d474cbab07453088ac205-3"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'chmod 755 $HOME/.local/bin/ealite'
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ejecutar-ealite"&gt;
&lt;h2&gt;Ejecutar EALite&lt;/h2&gt;
&lt;p&gt;Ahora, podemos usar el visor de Enterprise Architect.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_5fe4072d91aa4bbea4766580191cf011-1"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;/pre&gt;&lt;p&gt;Cuando iniciemos el sistema operativo, requerimos de iniciar el contenedores
antes de ejecutar la instrucción anterior, &lt;code&gt;sudo lxc start ea&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-inicio-lxc.png"&gt;&lt;img alt="EA Viewer abierto." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-inicio-lxc.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;EA Viewer abierto.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine." src="https://www.cosmoscalibur.com/images/crear-contenedor-lxc-para-aplicacion-gui-ealite/ealite-abrir-proyecto-lxc.png" style="width: 480px;"&gt;
&lt;p class="caption"&gt;Acceso al sistema de archivos del contenedor y no solo de la unidad de Wine.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Puedes asegurar una forma simple de ejecutar EALite creando una rutina de
lanzamiento con las dos líneas anteriores en un archivo que sea reconocido en
el &lt;code&gt;path&lt;/code&gt;.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-1"&gt;&lt;/a&gt;mkdir -p $HOME/.local/bin
&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-2"&gt;&lt;/a&gt;cat &amp;lt;&amp;lt; EOF &amp;gt; $HOME/.local/bin/ealite
&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-3"&gt;&lt;/a&gt;sudo lxc start ea
&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-4"&gt;&lt;/a&gt;sudo lxc exec ea -- su - ubuntu -c 'ealite'
&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-5"&gt;&lt;/a&gt;EOF
&lt;a name="rest_code_a8e8b5d2307c497193488d526bba2833-6"&gt;&lt;/a&gt;chmod 755 $HOME/.local/bin/ealite
&lt;/pre&gt;&lt;p&gt;La ejecución con &lt;code&gt;sudo&lt;/code&gt; puede omitirse si se añade el usuario a un grupo
que permita la ejecución de lxc. Más adelante, haré una publicación sobre como
hacerlo. Por ahora, diviértete ejecutando &lt;code&gt;ealite&lt;/code&gt; e ingresando la
contraseña de administrador.&lt;/p&gt;
&lt;p&gt;Para abrir un proyecto, recuerda usar &lt;code&gt;file push&lt;/code&gt; y explorar dentro del
contenedor.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compartir"&gt;
&lt;h2&gt;Compartir&lt;/h2&gt;
&lt;p&gt;Para compartir el contenedor, puedes publicarlo y exportar la imagen.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_8dace971cec743059e4f6b95e862fb91-1"&gt;&lt;/a&gt;sudo lxc publish ea --alias ealite
&lt;a name="rest_code_8dace971cec743059e4f6b95e862fb91-2"&gt;&lt;/a&gt;sudo lxc image export ealite
&lt;/pre&gt;&lt;p&gt;La imagen exportada es un archivo &lt;code&gt;tar.gz&lt;/code&gt; con el nombre asociado al
&lt;em&gt;fingerprint&lt;/em&gt; (una secuencia alfanumérica). Luego se debe importar la imagen
y hacer &lt;code&gt;launch&lt;/code&gt; nuevamente con el perfil.&lt;/p&gt;
&lt;p&gt;También puedes exportar directamente el contenedor, lo cual es recomendable
porque lleva con ello la configuración del perfil GUI y es listo para usar
una vez hagas la importación.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1465320a8be84a938464d345d547195b-1"&gt;&lt;/a&gt;sudo lxc export ea ea.tar.gz --optimized-storage
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.eu/enterprisearchitect/ea-lite-edition/"&gt;EA Viewer&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://askubuntu.com/questions/827070/cant-run-glxgears-in-root-on-lxc-2-0-container/827146"&gt;can't run “glxgears” in root on lxc 2.0 container&lt;/a&gt;.
Solución a un posible error usando GUI en LXC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://blog.simos.info/how-to-easily-run-graphics-accelerated-gui-apps-in-lxd-containers-on-your-ubuntu-desktop/"&gt;How to easily run graphics-accelerated GUI apps in LXD containers on your Ubuntu desktop&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://linuxcontainers.org/lxd/getting-started-cli/"&gt;LXD Getting started - command line&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://us.images.linuxcontainers.org/"&gt;Image server for LXC and LXD&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.sparxsystems.com/enterprise_architect_user_guide/14.0/product_information/enterprise_architect_linux.html"&gt;Installing Enterprise Architect under Linux&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wiki.winehq.org/Winetricks"&gt;Winetricks&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/31228191/how-do-i-export-a-lxc-container"&gt;How do I export a lxc container?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>contenedor</category><category>ealite</category><category>enterprise architect</category><category>linux</category><category>lxc</category><category>lxd</category><category>wine</category><guid>https://www.cosmoscalibur.com/blog/crear-contenedor-lxc-para-aplicacion-gui-ealite/</guid><pubDate>Mon, 11 Nov 2019 23:21:26 GMT</pubDate></item><item><title>Instalando paquetes en Linux (Mint)</title><link>https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;En Linux ahora tenemos muchas más opciones para instalar nuestros programas
favoritos y de uso diario, según los intereses personales en reducir espacio
en disco, aumentar estabilidad, mejorar seguridad, disponer siempre de la
última versión, tener muy buena integración con el sistema operativo o no
requerir permisos de administrador. Algunas de las estrategias, incluso
facilitan que el mismo mecanismo podemos usarlo en más de una distribución
Linux y así disponer de una transición más simple.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Este artículo es algo superficial sobre cada gestor, pero más adelante
publicaré artículos dedicados a cada uno de ellos con el fin de contarles más
opciones y trucos.&lt;/p&gt;
&lt;div class="section" id="programas-generales"&gt;
&lt;h2&gt;Programas generales&lt;/h2&gt;
&lt;p&gt;Aunque no es una clasificación estricta, es la forma que veo para hablar de
estos paquetes de &lt;em&gt;software&lt;/em&gt;. Son paquetes de uso general, lo suficiente para
ser de interés para disponer a través de medios de distribución para público
general. En ocasiones, esto puede incluir paquetes de uso científico o propio
de desarrollo, o de alguna disciplina particular.&lt;/p&gt;
&lt;div class="section" id="gestor-de-la-distribucion"&gt;
&lt;h3&gt;Gestor de la distribución&lt;/h3&gt;
&lt;p&gt;La mayor parte de distribuciones Linux disponen de gestores de paquetes de
&lt;em&gt;software&lt;/em&gt;, que son herramientas para la búsqueda, descarga, instalación y
configuración de estos. Los gestores se conectan a repositorios de paquetes
oficiales que son mantenidos por los desarrollados de la distribución,
asegurando que cumplan con estándares mínimos de compatibilidad y estabilidad.&lt;/p&gt;
&lt;p&gt;También, algunos gestores pueden conectar a repositorios mantenidos por la
comunidad, dando la opción de extender el &lt;em&gt;software&lt;/em&gt; disponible para
instalación por los usuarios de una manera simple, pero a riesgo de
inestabilidad o conflictos por la interacción con paquetes de los repositorios
oficiales (no es general, pero suele ocurrir). Estos repositorios de comunidad
los recomiendo como última opción.&lt;/p&gt;
&lt;p&gt;En Ubuntu y Linux Mint, tienes la opción de usar el Centro de Software
(preinstalado) o Synaptic (preinstalado en Linux Mint), para realizar la
gestión de manera gráfica. Pero también puedes usar &lt;code&gt;apt-get&lt;/code&gt; o
&lt;code&gt;apt&lt;/code&gt; (recomendado) para la gestión a través de consola.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c4ba967bf5834736aafb4dc206c91a25-1"&gt;&lt;/a&gt;sudo apt update -q
&lt;a name="rest_code_c4ba967bf5834736aafb4dc206c91a25-2"&gt;&lt;/a&gt;sudo apt install -y okular
&lt;/pre&gt;&lt;p&gt;Ahora dispones del lector de archivos PDF en tu sistema. Puedes accederlo por
el menú o por comando (&lt;code&gt;okular&lt;/code&gt;). La primera línea es recomendable para
actualizar las direcciones desde las cuales se descarga el software y los
metadatos para búsqueda. La segunda línea realiza la instalación sin solicitar
confirmación.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="appimage"&gt;
&lt;h3&gt;AppImage&lt;/h3&gt;
&lt;p&gt;Me parece la mejor de las opciones entre las nuevas estrategias. Permite la
ejecución inmediata del programa (no requiere instalación), gestiona
actualización y no es necesario permisos de administrador al no requerir
instalar. En teoría, ejecuta en cualquier distribución Linux moderna.&lt;/p&gt;
&lt;p&gt;Como el archivo ejecuta directamente, se pueden tener múltiples versiones del
mismo programa. Esto, es por el aislamiento que posee, es un tipo de
contenedor, tal como lo son las opciones de snap y flatpak, lo cual también
evita conflictos en el sistema (programas que puedan requerir la misma
dependencia pero en versiones diferentes, la dependencia no pueda gestionar
múltiples instancias o exponga una brecha de seguridad).&lt;/p&gt;
&lt;p&gt;Usaremos Stellarium para dar un ejemplo, y puedes buscar en
&lt;a class="reference external" href="https://appimage.github.io"&gt;AppImageHub&lt;/a&gt; para ver una colección de AppImage
disponibles.&lt;/p&gt;
&lt;p id="appimagecode"&gt;Descargamos el &lt;a class="reference external" href="https://stellarium.org/"&gt;AppImage de Stellarium&lt;/a&gt; del sitio
oficial del software (el segundo pingüino).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_6258b338233947cf8b20c8f6f4ad038a-1"&gt;&lt;/a&gt;chmod 755 Stellarium-0.19.2-x86_64.AppImage
&lt;a name="rest_code_6258b338233947cf8b20c8f6f4ad038a-2"&gt;&lt;/a&gt;./Stellarium-0.19.2-x86_64.AppImage
&lt;/pre&gt;&lt;p&gt;La primera línea solo es necesario ejecutarla la primera vez.&lt;/p&gt;
&lt;p&gt;Si queremos ejecutarlo de una manera más cómoda, podemos mover el archivo al
directorio de ejecución de binarios del usuario o a uno de ejecución de sistema
para estar disponible para todos los usuarios (&lt;code&gt;/usr/local/bin/&lt;/code&gt;).&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_afcfbc346c184867bd47221e7159edec-1"&gt;&lt;/a&gt;mv Stellarium-0.19.2-x86_64.AppImage ~/.local/bin/stellarium
&lt;a name="rest_code_afcfbc346c184867bd47221e7159edec-2"&gt;&lt;/a&gt;stellarium
&lt;/pre&gt;&lt;p&gt;Nuevamente, la primera línea es solo la primera vez.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="snap"&gt;
&lt;h3&gt;Snap&lt;/h3&gt;
&lt;p&gt;Los snap son el mecanismo de instalación promovido por Canonical
(desarrolladores de Ubuntu). Sigue siendo un mecanismo centralizado, que
requiere aprobación de Canonical para ser admitido el paquete y requiere ser
administrador para la instalación.&lt;/p&gt;
&lt;p&gt;En Ubuntu viene preinstalado pero en Linux Mint es necesario instalarlo.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_92dbd625935b4561b5cc15965117228a-1"&gt;&lt;/a&gt;sudo apt install -y snapd
&lt;/pre&gt;&lt;p&gt;Una vez instalado, podemos proceder a instalar un paquete snap.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_4a31d0f3a28249b191c90ff30b08dea9-1"&gt;&lt;/a&gt;sudo snap install code --classic
&lt;a name="rest_code_4a31d0f3a28249b191c90ff30b08dea9-2"&gt;&lt;/a&gt;snap run code # Ejecuta
&lt;/pre&gt;&lt;p&gt;La ejecución con &lt;code&gt;snap run&lt;/code&gt; es necesaria si tras instalar no reconoce
el paquete. Después de la primera ejecución o tras abrir una nueva terminal
o reiniciar el equipo, será ya reconocido el paquete sin problema para
ejecutarse directamente con el nombre (&lt;code&gt;code&lt;/code&gt;) o por el menú.&lt;/p&gt;
&lt;p&gt;Puedes buscar más paquetes en &lt;a class="reference external" href="https://snapcraft.io/store"&gt;snapcraf&lt;/a&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Nota&lt;/p&gt;
&lt;p&gt;Actualización (2 de julio de 2020)&lt;/p&gt;
&lt;p&gt;A partir de Linux Mint 20 debes primero configurar APT para poder instalar
Snap. Puedes revisar mi publicación
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalar-paquetes-snap-en-linux-mint-20/"&gt;Instalar paquetes snap en Linux Mint 20&lt;/a&gt; para saber como.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="flatpak"&gt;
&lt;h3&gt;Flatpak&lt;/h3&gt;
&lt;p&gt;El caso de flatpak no es muy cómodo, tiene cierta centralización como snap,
pero con fines de indexación. Un desarrollador puede crear su propio
repositorio flatpak. Y al igual que AppImage, no requiere permisos de
administrador.&lt;/p&gt;
&lt;p&gt;En Linux Mint viene preconfigurado a partir de la versión 18.3, pero si usas
Ubuntu necesitas instalarlo. Desde la 18.10 se encuentra en los repositorios
oficiales.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_f3af4c6c66ca439dabb415dfae8ed65e-1"&gt;&lt;/a&gt;sudo apt install flatpak
&lt;a name="rest_code_f3af4c6c66ca439dabb415dfae8ed65e-2"&gt;&lt;/a&gt;sudo apt install gnome-software-plugin-flatpak
&lt;a name="rest_code_f3af4c6c66ca439dabb415dfae8ed65e-3"&gt;&lt;/a&gt;flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
&lt;/pre&gt;&lt;p&gt;La primera línea instala el gestor de flatpak. La segunda línea permite usar
flatpak con el Centro de Software de Gnome. Y la tercera línea agrega el
repositorio de paquetes flatpak más popular, &lt;a class="reference external" href="https://flathub.org/home"&gt;flathub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para ejemplificar, instalaremos el paquete peek&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_95880684974943d1b5cf479bcd2825f5-1"&gt;&lt;/a&gt;flatpak install -y flathub com.uploadedlobster.peek
&lt;a name="rest_code_95880684974943d1b5cf479bcd2825f5-2"&gt;&lt;/a&gt;flatpak run com.uploadedlobster.peek
&lt;/pre&gt;&lt;p&gt;Desafortunadamente la ejecución es siempre así, pero puedes crear un archivo
que te facilite la labor.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_129035bfd08e4fdaa26c82d4b9df3b0b-1"&gt;&lt;/a&gt;echo "flatpak run com.uploadedlobster.peek" &amp;gt; ~/.local/bin/peek
&lt;a name="rest_code_129035bfd08e4fdaa26c82d4b9df3b0b-2"&gt;&lt;/a&gt;chmod 755 ~/.local/bin/peek
&lt;a name="rest_code_129035bfd08e4fdaa26c82d4b9df3b0b-3"&gt;&lt;/a&gt;peek
&lt;/pre&gt;&lt;p&gt;A nivel gráfico, por defecto si es agregado al menú.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="compilacion-y-binarios"&gt;
&lt;h3&gt;Compilación y binarios&lt;/h3&gt;
&lt;p&gt;Estas opciones, no son parte de la historia. La compilación sigue siendo
fundamental para la optimización de código crítico o de alto rendimiento
como es necesario en la computación científica. La compilación saca provecho de
la arquitectura del procesador usado.&lt;/p&gt;
&lt;p&gt;En este caso, será típico el uso de &lt;code&gt;configure&lt;/code&gt; y &lt;code&gt;make&lt;/code&gt;. Para más
información, es necesario leer el archivo &lt;code&gt;README&lt;/code&gt; que deberías
encontrar, el cual explicará el detalle del proceso de instalación.&lt;/p&gt;
&lt;p&gt;En los paquetes con binarios, se obtiene un precompilado que es genérico
respecto al procesador u optimizado no necesariamente para el procesador que se
usa en nuestra máquina.&lt;/p&gt;
&lt;p&gt;Una vez tenemos el binario (precompilado o por compilación en nuestra máquina)
debemos dar permiso de ejecución al binario (&lt;code&gt;chmod 755&lt;/code&gt;) y añadirlo a
un directorio que pertenezca al &lt;code&gt;path&lt;/code&gt; (ejemplo, a
&lt;code&gt;$HOME/.local/bin/&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rutinas-de-instalacion"&gt;
&lt;h3&gt;Rutinas de instalación&lt;/h3&gt;
&lt;p&gt;En ocasiones encontraremos archivos &lt;code&gt;.run&lt;/code&gt; o &lt;code&gt;.sh&lt;/code&gt; que asisten la
instalación, descargando componentes o codificando los distintos archivos en
un solo archivo.&lt;/p&gt;
&lt;p&gt;Para este caso, es necesario conferir permiso de ejecución al archivo y
proceder a ejecutarlo. Este procedimiento, es el mismo expuesto en las
&lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/#appimagecode"&gt;primeras dos líneas de AppImage&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://appimage.org/"&gt;AppImage&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.flatpak.org/"&gt;Flatpak&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://snapcraft.io/"&gt;Snap&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wiki.gnome.org/Apps/Software"&gt;Gnome Software Center&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://help.ubuntu.com/lts/serverguide/apt.html"&gt;Ubuntu APT&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>appimage</category><category>apt</category><category>flatpak</category><category>gestor de paquetes</category><category>instalación de software</category><category>linux</category><category>linux mint</category><category>paquetes snap</category><guid>https://www.cosmoscalibur.com/blog/instalando-paquetes-en-linux-mint/</guid><pubDate>Wed, 23 Oct 2019 01:21:34 GMT</pubDate></item><item><title>Recuperar el arranque de tu Moto G5 en Linux</title><link>https://www.cosmoscalibur.com/blog/recuperar-el-arranque-de-tu-moto-g5-en-linux/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Recientemente, aunque cambié a un Moto G7, pensaba restaurar el celular de
fábrica pero salió mal el proceso (no siempre es fácil si pretendes eliminar
el acceso a &lt;a class="reference external" href="https://www.xda-developers.com/root/"&gt;administrador&lt;/a&gt; -&lt;em&gt;root&lt;/em&gt;- y
el &lt;em&gt;recovery&lt;/em&gt; personalizado -&lt;a class="reference external" href="https://twrp.me/about/"&gt;TWRP&lt;/a&gt;-).&lt;/p&gt;
&lt;p&gt;A raíz de esto, no funcionaba &lt;em&gt;play service&lt;/em&gt; y por ende no era posible llegar
a la pantalla de ingreso de usuario ni omitirlo. Esto es un tipo de fallo
denominado &lt;em&gt;soft brick&lt;/em&gt;, en el cual el celular es inservible a nivel de
sistema operativo (se distingue de un &lt;em&gt;hard brick&lt;/em&gt;, en el cual el daño es
físico).&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;A continuación, veremos como recuperar tu celular de este estado con Linux.&lt;/p&gt;
&lt;div class="section" id="instalacion-de-herramientas-android"&gt;
&lt;h2&gt;Instalación de herramientas Android&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso es la instalación de las herramientas de software o
paquetes que necesitaremos para rescatar nuestro equipo. Este paso puede ser
realizado con la ayuda de los gestores de paquete de nuestra distribución
Linux pero por lo mismo dependerá de cual usemos.&lt;/p&gt;
&lt;p&gt;En mi caso, uso Linux Mint 19, una distribución que es derivada de Ubuntu
18.04, compartiendo mucho de la base de paquetes en sus repositorios. Así,
en ambos casos, podremos proceder a instalar de la misma manera el SDK de
Android, ADB, Fastboot y Platform Tools.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_4452312b9fe24dc9b516d1cd17d49149-1"&gt;&lt;/a&gt;sudo apt install -y android-sdk android-tools-fastboot android-tools-adb \
&lt;a name="rest_code_4452312b9fe24dc9b516d1cd17d49149-2"&gt;&lt;/a&gt;android-sdk-platform-tools
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="descargar-rom-de-fabrica"&gt;
&lt;h2&gt;Descargar &lt;em&gt;ROM&lt;/em&gt; de fábrica&lt;/h2&gt;
&lt;p&gt;Como lo advertía en &lt;a class="reference external" href="https://www.cosmoscalibur.com/blog/comprando-celular-para-personalizar/"&gt;Comprando celular para personalizar&lt;/a&gt;, un detalle
importante al adquirir celular es revisar la existencia de la &lt;em&gt;ROM&lt;/em&gt; de fábrica
(sistema operativo original) en los foros especializados como
&lt;a class="reference external" href="https://www.xda-developers.com/"&gt;XDA&lt;/a&gt;. Pueden existir otras fuentes, pero
la recomendada es esta.&lt;/p&gt;
&lt;p&gt;Descargaremos la &lt;em&gt;ROM&lt;/em&gt; de la versión Android Oreo 8.1 para nuestro Moto G5.
&lt;a class="reference external" href="https://mirrors.lolinet.com/firmware/moto/cedric/official/RETAIL/CEDRIC_RETAIL_8.1.0_OPP28.85-19-4-2_cid50_subsidy-DEFAULT_regulatory-DEFAULT_CFC.xml.zip"&gt;Descargar Android 8.1 Moto G5 cedric&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Una vez descargado el archivo, procedemos a descomprimirlo.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="fastboot-mode"&gt;
&lt;h2&gt;&lt;em&gt;Fastboot mode&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;Ya nos acercamos poco a poco. El siguiente paso es con nuestro celular.
Debemos pasar a modo &lt;em&gt;fastboot&lt;/em&gt; y esto se logra de la siguiente manera.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;Apagar el celular.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Presionar de manera sostenida la parte inferior de la tecla de volumen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mientras sostienes la tecla de volumen, presionar la tecla de prendido, y
soltar.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;En este momento, hemos ingresado al modo &lt;em&gt;fastboot&lt;/em&gt; (o &lt;em&gt;bootloader&lt;/em&gt;).
Conectamos el cable USB tanto al celular como a nuestro computador.&lt;/p&gt;
&lt;p&gt;Podemos probar que todo vaya bien abriendo una terminal y ejecutando&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_e530cd7e758f42f3b75118d21f317490-1"&gt;&lt;/a&gt;fastboot devices
&lt;/pre&gt;&lt;p&gt;Y sabremos que funciona si muestra una secuencia alfanumérica y luego la
palabra &lt;em&gt;fastboot&lt;/em&gt;. En mi caso es:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1509dbad820e4ddf93589cb973d7c063-1"&gt;&lt;/a&gt;ZY3224RNMN   fastboot
&lt;/pre&gt;&lt;p&gt;Algunas veces puede fallar por permisos, en cuyo caso deberías probar la
ejecución con permiso de administrador.&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_db42a0fc5ac24f29b93bb7c6f289a1f4-1"&gt;&lt;/a&gt;sudo fastboot devices
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="instalar-sistema-operativo"&gt;
&lt;h2&gt;Instalar sistema operativo&lt;/h2&gt;
&lt;p&gt;Finalmente, necesitamos instalar el sistema operativo. Vamos a requerir de
abrir una terminal y ubicarla en el directorio donde descomprimimos el sistema
operativo (algunos exploradores de archivos admiten poseen la opción de abrir
la terminal en el directorio abierto en el explorador o puedes moverte en la
terminal con el comando &lt;code&gt;cd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Una vez ubicados en el directorio desde la terminal, procedemos a ejecutar&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_1000bb75979248c891486f04491a458a-1"&gt;&lt;/a&gt;fastboot getvar max-sparse-size
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-2"&gt;&lt;/a&gt;fastboot oem fb_mode_set
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-3"&gt;&lt;/a&gt;fastboot flash partition gpt.bin
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-4"&gt;&lt;/a&gt;fastboot flash bootloader bootloader.img
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-5"&gt;&lt;/a&gt;fastboot flash modem NON-HLOS.bin
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-6"&gt;&lt;/a&gt;fastboot flash fsg fsg.mbn
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-7"&gt;&lt;/a&gt;fastboot erase modemst1
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-8"&gt;&lt;/a&gt;fastboot erase modemst2
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-9"&gt;&lt;/a&gt;fastboot flash dsp adspso.bin
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-10"&gt;&lt;/a&gt;fastboot flash logo logo.bin
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-11"&gt;&lt;/a&gt;fastboot flash boot boot.img
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-12"&gt;&lt;/a&gt;fastboot flash recovery recovery.img
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-13"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.0
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-14"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.1
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-15"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.2
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-16"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.3
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-17"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.4
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-18"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.5
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-19"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.6
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-20"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.7
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-21"&gt;&lt;/a&gt;fastboot flash system system.img_sparsechunk.8
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-22"&gt;&lt;/a&gt;fastboot flash oem oem.img
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-23"&gt;&lt;/a&gt;fastboot erase cache
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-24"&gt;&lt;/a&gt;fastboot erase userdata
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-25"&gt;&lt;/a&gt;fastboot erase DDR
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-26"&gt;&lt;/a&gt;fastboot oem fb_mode_clear
&lt;a name="rest_code_1000bb75979248c891486f04491a458a-27"&gt;&lt;/a&gt;fastboot reboot
&lt;/pre&gt;&lt;p&gt;Muy bien, hemos terminado de instalar (si no hemos tenido ejecuciones
fallidas). Para iniciar el celular, con la tecla de volumen buscamos &lt;em&gt;restart&lt;/em&gt;
y luego presionamos el botón de encendido. En este momento, es como si
estuviera nuevo el celular, por lo que tardará unos minutos que inicie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="que-puede-salir-mal"&gt;
&lt;h2&gt;¿Qué puede salir mal?&lt;/h2&gt;
&lt;p&gt;Bueno, esto no es un procedimiento seguro ni asegura el funcionamiento. El
primer detalle, es recordar que esto solo servirá si el problema era del
sistema operativo, o sea, si era un &lt;em&gt;soft brick&lt;/em&gt;. En caso contrario,
&lt;em&gt;hard brick&lt;/em&gt;, necesitarás un servicio técnico para el arreglo de tu equipo.&lt;/p&gt;
&lt;p&gt;Otra opción para una posible falla en el proceso, es un cable USB deteriorado
o un puerto USB deteriorado. En estos casos, es posible perder la conexión
entre el celular y computador, y en muchas ocasiones no habrá una advertencia
visible (en mi caso, lo he notado con demoras superiores a las habituales).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="referencias"&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://forum.xda-developers.com/g5/development/fastboot-cedricretail8-1-0opp28-85-19-4-t3930448"&gt;[FASTBOOT]CEDRIC_RETAIL_8.1.0_OPP28.85-19-4-2_cid50_subsidy-DEFAULT_regulatory-DEFAUL&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.hardreset.info/devices/motorola/motorola-moto-g5/recovery-mode/"&gt;HardReset.info: Recovery Mode MOTOROLA Moto G5&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://android.gadgethacks.com/how-to/know-your-android-tools-what-is-fastboot-do-you-use-it-0155640/"&gt;What Is Fastboot &amp;amp; How Do You Use It?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>android</category><category>celulares</category><category>fastboot</category><category>flash</category><category>linux</category><category>moto g5</category><category>motorola</category><category>smartphone</category><category>soft brick</category><guid>https://www.cosmoscalibur.com/blog/recuperar-el-arranque-de-tu-moto-g5-en-linux/</guid><pubDate>Tue, 22 Oct 2019 00:10:34 GMT</pubDate></item><item><title>Ejecutando macOS en Linux</title><link>https://www.cosmoscalibur.com/blog/ejecutando-macos-en-linux/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Debo admitirlo, no me gusta Mac y sigue sin gustarme, pero en múltiples
ocasiones se hace necesario poder disponer de un Mac al igual que de un
Windows para efectos de pruebas o de correr software específico cuando no hay
de otra. Por este caso me di a la tarea de buscar como lograr ejecutar macOS
en mi equipo Asus que posee Linux instalado de la forma más fácil posible. A
continuación, como ejecutar macOS (específicamente hackintosh) en tu equipo
Linux (el procedimiento aplica también para Windows).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Requisitos&lt;/strong&gt;: Conexión a internet estable, disco duro con más de 100 GB
disponibles, RAM superior a 6 GB, procesador de más de dos núcleos (preferible
Intel) y mucho tiempo.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;div class="section" id="contexto"&gt;
&lt;h2&gt;Contexto&lt;/h2&gt;
&lt;p&gt;Creo que no hay necesidad pero no hay que dar por obvias las cosas. El primer
punto al respecto de esto es que macOS en si mismo es "imposible" de piratear
porque el sistema operativo esta ligado al hardware. Así, la única manera de
obtener e instalar macOS es tener un equipo Mac. El tema se resuelve entonces
a través de una modificación del sistema operativo que da origen a iPC, OSX86
o Hackintosh, una variación del sistema que permite llevar macOS a equipos
tradicionales (PC).&lt;/p&gt;
&lt;p&gt;El cómo se logra esto es elaborado y la verdad no veo interés en comentarlo
pues es el camino difícil, pero solo para resumir diré que el punto inicial
es que hay que tener un equipo Mac en el cual se ejecutan una serie de rutinas
para extraer los directorios del sistema y recrear los llamados del sistema
operativo a una forma entendible por los procesadores x86-64. La forma
sencilla es encontrar de donde obtener ya la imagen del sistema operativo
lista. Pero como podrán ver al googlear no solo un poco sino mucho, todo esta
dicho para quienes tienen Mac pero no para los mortales que no lo tenemos.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="descarga"&gt;
&lt;h2&gt;Descarga&lt;/h2&gt;
&lt;p&gt;La verdad, creo que este es el punto más difícil y misterioso del proceso de
lograr la instalación de macOS (modificado). La razón de esta dificultad no
solo se asocia a la dificultad sino al tema legal (con Windows no sucede así
pues la imagen misma del sistema operativo es gratuita y el problema es
conseguir la licencia -salvo que no te importe el mensaje de copia no original
y la ausencia de actualizaciones-).&lt;/p&gt;
&lt;p&gt;Después de muchos fracasos en descargas (largas descargas) que me llevaban a
depender de Mac, encontré dos opciones listas para usar que correspondían a
imágenes para máquina virtual (específicamente para VMWare/VirtualBox).
Difíciles de encontrar, recurren a descarga por enlace magnético y hay pocos
pares de descarga lo cual llega a un tiempo largo de descarga.&lt;/p&gt;
&lt;p&gt;Necesitas para esto un cliente torrent (si usas Linux probablemente tendrás
por defecto transmission o si usas windows puedes instalar BitTorrent,
µTorrent o FrostWire), una buena conexión a internet y mucha paciencia. El
enlace magnético lo obtendrás de
&lt;a class="reference external" href="https://thepiratebay.org/torrent/17986715/MacOS_Sierra_10.12_VirtualBox_VMWare_Virtual_Image_Preinstalled"&gt;The Pirate Bay&lt;/a&gt;
dando clic en donde dice &lt;em&gt;GET THIS TORRENT&lt;/em&gt; (hay un símbolo de un imán al lado
izquierdo). Una vez lo hagas y si tienes correctamente instalado el cliente
torrent, este se abrirá (o el navegador solicitará permiso de abrirlo).&lt;/p&gt;
&lt;p&gt;Ahora te esperan unas 12 horas de descarga (en mi caso el pico máximo de
velocidad que recuerdo fue de 120 kB y el mínimo fueron ratos donde no habían
pares de descarga).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="maquina-virtual"&gt;
&lt;h2&gt;Máquina Virtual&lt;/h2&gt;
&lt;p&gt;Mi recomendación es no intentar la instalación directa en el equipo (para
empezar, no pude encontrar una imagen para ello). El proceso de instalación
directo tiene sus pasos malucos y al parecer el soporte es básicamente es para
equipos con procesadores Intel (lo demás se hace con más trucos de lo normal y
para posiblemente perder el tiempo). Así, la mejor opción es una máquina
virtual, si fallas solo perdiste tiempo pero sigues con un sistema operativo
funcional montado para trabajar o dispersar.&lt;/p&gt;
&lt;p&gt;En Linux me parece mucho más natural usar QEMU (usando la interfaz de
Virt-Manager) pero desafortunadamente este no tiene el soporte necesario y
nuevamente, nos llenamos de trucos bajo la manga si queremos hacerlo funcionar
de esa manera. Por ahora, QEMU es la mejor opción en Linux si deseas
virtualizar Windows u otra distribución linux, pero no macOS (tiene que ver
con el arranque, QEMU mantiene el sistema anterior -&lt;em&gt;LEGACY&lt;/em&gt;- de arranque de
OSX). Así las cosas, una conversión de formato de la imagen no sirve (lo
intenté).&lt;/p&gt;
&lt;p&gt;Necesariamente necesitas de VMWare o de VirtualBox. En mi caso, y es la opción
más simple desde Linux, podemos usar VirtualBox (esta en los repositorios de
varias distribuciones) y en Windows, igual por ser gratuito te lo recomiendo
(&lt;a class="reference external" href="https://www.virtualbox.org/wiki/Downloads"&gt;descargar&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="instalacion"&gt;
&lt;h2&gt;Instalación&lt;/h2&gt;
&lt;p&gt;Nuestro primer paso es descomprimir el archivo que descargamos (un archivo
&lt;code&gt;rar&lt;/code&gt;). De los archivos que encontrarás solo es necesario el archivo con
extensión &lt;code&gt;vmdk&lt;/code&gt; (puedes renombrar el archivo si deseas). Ahora abrimos
VirtualBox y seleccionamos el botón de nuevo.&lt;/p&gt;
&lt;p&gt;Ahora vamos a seleccionar el sistema operativo, indicando como se ve en la
imagen y luego asignamos la RAM deseada (2 GB son el mínimo del sistema pero
hay que considerar que además es una máquina virtual, lo cual conviene asignar
más para un comportamiento más fluido) considerando que debes dejar al menos
2 GB disponibles para el sistema operativo del equipo.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-seleccionar-macos.png"&gt;&lt;img alt="Selección del sistema operativo" src="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-seleccionar-macos.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Selección del sistema operativo y versión a instalar.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Finalmente debemos indicar que se creara a partir de una imagen de disco
existente y seleccionamos el símbolo de carpeta para buscar el archivo
&lt;code&gt;vmdk&lt;/code&gt;.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-disco-existente.png"&gt;&lt;img alt="Selección de disco existente" src="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-disco-existente.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Selección de crear máquina virtual a partir de disco existente.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Aquí hemos creado ya la máquina en si misma pero debemos configurar antes un
par de cosas. En configuración de la máquina debemos ir a la sección de
sistema (&lt;em&gt;system&lt;/em&gt;) y luego placa madre (&lt;em&gt;Motherboard&lt;/em&gt;) y habilitar las
características extendidas (&lt;em&gt;Extended features&lt;/em&gt;) y elegir &lt;em&gt;USB Tablet&lt;/em&gt; en el
puntero (&lt;em&gt;Pointing device&lt;/em&gt;). En la misma sección vamos a la pestaña de
procesador (&lt;em&gt;Processor&lt;/em&gt;) e indicamos al menos 2 CPU. Por último, en la sección
de monitor (&lt;em&gt;Display&lt;/em&gt;) vamos a la pestaña &lt;em&gt;Screen&lt;/em&gt; y asignamos 128 MB a la
memoria de video (&lt;em&gt;Video Memory&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Ahora, pasamos a la consola (powershell o CMD en Windows) y ejecutamos lo
siguiente (si es Windows hay que poner &lt;code&gt;VBoxManage.exe&lt;/code&gt; estando en el
directorio de VirtualBox -&lt;code&gt;cd "C:Program FilesOracleVirtualBox"&lt;/code&gt;-):&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-1"&gt;&lt;/a&gt;VBoxManage modifyvm &lt;span class="s2"&gt;"macos"&lt;/span&gt; --cpuidset &lt;span class="m"&gt;00000001&lt;/span&gt; 000106e5 &lt;span class="m"&gt;00100800&lt;/span&gt; 0098e3fd bfebfbff
&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-2"&gt;&lt;/a&gt;VBoxManage setextradata &lt;span class="s2"&gt;"macos"&lt;/span&gt; &lt;span class="s2"&gt;"VBoxInternal/Devices/efi/0/Config/DmiSystemProduct"&lt;/span&gt; &lt;span class="s2"&gt;"iMac11,3"&lt;/span&gt;
&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-3"&gt;&lt;/a&gt;VBoxManage setextradata &lt;span class="s2"&gt;"macos"&lt;/span&gt; &lt;span class="s2"&gt;"VBoxInternal/Devices/efi/0/Config/DmiSystemVersion"&lt;/span&gt; &lt;span class="s2"&gt;"1.0"&lt;/span&gt;
&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-4"&gt;&lt;/a&gt;VBoxManage setextradata &lt;span class="s2"&gt;"macos"&lt;/span&gt; &lt;span class="s2"&gt;"VBoxInternal/Devices/efi/0/Config/DmiBoardProduct"&lt;/span&gt; &lt;span class="s2"&gt;"Iloveapple"&lt;/span&gt;
&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-5"&gt;&lt;/a&gt;VBoxManage setextradata &lt;span class="s2"&gt;"macos"&lt;/span&gt; &lt;span class="s2"&gt;"VBoxInternal/Devices/smc/0/Config/DeviceKey"&lt;/span&gt; &lt;span class="s2"&gt;"ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"&lt;/span&gt;
&lt;a name="rest_code_55a273bdc7724b03806f0a71b157eace-6"&gt;&lt;/a&gt;VBoxManage setextradata &lt;span class="s2"&gt;"macos"&lt;/span&gt; &lt;span class="s2"&gt;"VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC"&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Tras esto estamos listos para encender la máquina virtual e instalar el
sistema operativo en ella (nombre, usuario, contraseña, idioma, teclado). Lo
único problemático aquí es que tendrás problema con el teclado pues esta
pensado para los teclados Mac. Como cualquier instalación de sistema operativo
es algo lento y más considerando que es una máquina virtual.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;a class="reference external image-reference" href="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-idioma-macos.png"&gt;&lt;img alt="Selección de idioma en macOS." src="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-idioma-macos.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Selección de idioma en macOS.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="despues"&gt;
&lt;h2&gt;Después&lt;/h2&gt;
&lt;p&gt;No soy usuario Mac y mi propósito de hacer esto era muy específico, validar
compatibilidad de códigos que uso, desarrollo o contribuyo. Pero en este
mismo sentido, algo que recomiendo hacer, es instalar
&lt;a class="reference external" href="https://brew.sh/index_es.html"&gt;Homebrew&lt;/a&gt; con el fin de tener listo nuestro
macOS para pruebas y poder instalar distintos paquetes comunes a la hora de
programar.&lt;/p&gt;
&lt;p&gt;Para ello debes abrir la consola que encontrarás en aplicaciones y ejecutar lo
siguiente:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c19b45890a704669bac65fcc3777ba0f-1"&gt;&lt;/a&gt;ruby -e &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Tendrás que tener paciencia pues el proceso me tomó 45 minutos (en foros
reportan la instalación de &lt;em&gt;homebrew&lt;/em&gt; de casi 2 horas) y necesitas estar
pendiente pues hay dos solicitudes de tu contraseña.&lt;/p&gt;
&lt;div class="figure align-center"&gt;
&lt;img alt="Instalación de homebrew en macOS" src="https://www.cosmoscalibur.com/images/ejecutando-macos-en-linux/maquina-virtual-homebrew-macos.png"&gt;
&lt;p class="caption"&gt;Instalación por consola de homebrew en macOS.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Una vez instalado, puedes aprovechar a dejar listo python (actualiza la
versión por defecto e instala el gestor pip). Igualmente es conveniente
instalar otros paquetes de uso común por otras aplicaciones .&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-1"&gt;&lt;/a&gt;brew install pkg-config &lt;span class="c1"&gt;# Ayuda a determinar la lista de paquetes existentes&lt;/span&gt;
&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-2"&gt;&lt;/a&gt;brew install python3 &lt;span class="c1"&gt;# Python3 no viene por defecto&lt;/span&gt;
&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-3"&gt;&lt;/a&gt;brew install python2 &lt;span class="c1"&gt;# Actualiza la versión existente. En ambos casos se instala pip (pip2 y pip3)&lt;/span&gt;
&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-4"&gt;&lt;/a&gt;brew install freetype &lt;span class="c1"&gt;# Requerido para la manipulación de fuentes -por ejemplo en matplotlib-&lt;/span&gt;
&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-5"&gt;&lt;/a&gt;brew install libpng &lt;span class="c1"&gt;# Requerido para la manipulación de imágenes png -por ejemplo en matplotlib-&lt;/span&gt;
&lt;a name="rest_code_b7371841142a4c54b8508264b8938f21-6"&gt;&lt;/a&gt;brew install pygtk &lt;span class="c1"&gt;# Binding de GTK para python. Interfaces en pygtk son comunes.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>emulación</category><category>hackintosh</category><category>linux</category><category>macos</category><category>máquina virtual</category><guid>https://www.cosmoscalibur.com/blog/ejecutando-macos-en-linux/</guid><pubDate>Fri, 19 Jan 2018 03:16:55 GMT</pubDate></item><item><title>Con calma para SteamOS</title><link>https://www.cosmoscalibur.com/blog/con-calma-para-steamos/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Bueno, es un poco raro que sin escribir hace mucho, lo primero que
escriba sea del mundo linux que del mundo de la ciencia y
particularmente de la física que es mi especialidad. Pero resulta que a
veces es un poco más fácil escribir sobre cosas que no toque justificar
tanto.&lt;/p&gt;
&lt;p&gt;Soy usuario Linux desde 2009, usando la distro Ubuntu con escritorio
gnome. Pero hace algún tiempo empece a comprar juegos en &lt;a class="reference external" href="https://www.humblebundle.com/"&gt;Humble
Bundle&lt;/a&gt;. Muy buenos titulos,
excelentes gráficos y en otros excelentes historias, multiplataforma,
mejor dicho un paraíso &lt;em&gt;gamer&lt;/em&gt; y al mejor precio (créanme! máximo he
pagado 15 dolares por 10 títulos en varias plataformas y sus audios).
Parte de estos títulos son de la corporación
&lt;a class="reference external" href="http://www.valvesoftware.com/"&gt;Valve&lt;/a&gt;, desarrolladora de la
plataforma de videojuegos &lt;a class="reference external" href="http://store.steampowered.com/"&gt;Steam&lt;/a&gt;.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Pero donde esta la gracia de este post... bueno, quienes saben de Steam
un poco más allá de sus juegos, sabrán del proyecto
&lt;a class="reference external" href="http://store.steampowered.com/livingroom/SteamOS/?l=spanish"&gt;SteamOS&lt;/a&gt;.
Valve ahora apuesta al desarrollo de un sistema operativo exclusivo para
&lt;em&gt;gamers&lt;/em&gt; optimizado para su plataforma. Se posee doble escritorio, uno
para la plataforma de juegos y otro para un escritorio linux tradicional
con gnome basado en Debian 7. En teoría todo lo que funcione en Debian 7
y Ubuntu 12.04 les funcionaría en SteamOS.&lt;/p&gt;
&lt;p&gt;Y contrario a como encontrarán en otras publicaciones en internet (en inglés, no
hay por el momento en otros idiomas, o no que yo viera), comenzare por
una advertencia. A Valve no le interesa el problema de compatibilidad, y
por ello no empezaron un sistema operativo desde cero. La recomendación
de la tarjeta gráfica es NVIDIA (que están de hecho participando en el
proyecto), otras tarjetas según afirman funcionan pero puede presentar
problemas. Ese fue mi caso, la pantalla después de la instalación quedo
negra y por más truco de foros no revivió. Así que les recomiendo solo
intentarlo si poseen tarjeta NVIDIA. La restricción que indican de
espacio en disco realmente no es restrictiva, con menos solo implica
menos juegos. Igualmente, si desean conservar otro sistema operativo (su
distro anterior o Windows) el arranque múltiple esta aún en fase
experimental y de hecho grub no identificará algunas veces sus sistemas
anteriores (en mi caso, fue como si no tuviera instalado nada antes pero
si reconoce la tabla de partición). Paquetes de uso cotidiano deberán
instalarlos con el gestor (como esta basado en Debian encontrarán APT) y
frente a compatibilidad con dispositivos android modernos no podremos
hacer nada, más que probar suerte con compilar manualmente bibliotecas
como &lt;a class="reference external" href="http://libmtp.sourceforge.net/"&gt;libmtp&lt;/a&gt; para usuarios de
android 4 (¡que en &lt;a class="reference external" href="http://www.ubuntu.com/download/desktop"&gt;Ubuntu
14.04&lt;/a&gt; ya esta integrado!).&lt;/p&gt;
&lt;p&gt;Nuevamente un paso más anterior (o que ni siquiera esta junto en otras publicaciones)... si no quieren arriesgarse a instalar el sistema completo y
perder sus sistemas operativos anteriores, es posible instalar el
escritorio Steam para probar con más cuidado antes de dar el paso
completo, siempre y cuando nuestro sistema operativo sea Debian o uno
basado en él. Instalamos el cliente Steam (a través de APT &lt;em&gt;apt-get
install -y steam&lt;/em&gt; o descargando el
&lt;a class="reference external" href="http://media.steampowered.com/client/installer/steam.deb"&gt;paquete&lt;/a&gt;
de la página oficial). Luego debemos instalar los paquetes del
&lt;a class="reference external" href="http://repo.steampowered.com/steamos/pool/main/s/steamos-compositor/"&gt;compositor&lt;/a&gt; y
el &lt;a class="reference external" href="http://repo.steampowered.com/steamos/pool/main/s/steamos-modeswitch-inhibitor/"&gt;modeswitch
inhibitor&lt;/a&gt; (como
sabremos doble click y usar el centro de software o &lt;em&gt;dpkg -i *.deb&lt;/em&gt;).
Esto nos permitirá probar un poco Steam pero no con todas las
funcionalidades (los juegos Steam que no son linux no funcionarán), lo
que es equivalente a que solo instalemos el cliente.&lt;/p&gt;
&lt;p&gt;Para terminar solo quiero comentar que me pareció algo genial del
instalador (lo único que pude ver) la opción de tomar pantallazos
durante la instalación, archivos que quedan guardados en
&lt;em&gt;/var/log/*png&lt;/em&gt;. Aún así, quien quiera correr riesgos, puede descargar
la versión 1.0 beta update 96 en el &lt;a class="reference external" href="http://repo.steampowered.com/download/"&gt;repositorio
oficial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Para seguir todos los anuncios oficiales te sugiero revisar
&lt;a class="reference external" href="http://steamcommunity.com/groups/steamuniverse#announcements"&gt;aquí&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><category>steamos</category><category>videojuegos</category><guid>https://www.cosmoscalibur.com/blog/con-calma-para-steamos/</guid><pubDate>Sun, 20 Apr 2014 23:21:00 GMT</pubDate></item><item><title>20 años de Linux</title><link>https://www.cosmoscalibur.com/blog/20-anos-de-linux/</link><dc:creator>Edward Villegas-Pulgarin</dc:creator><description>&lt;div&gt;&lt;p&gt;Hace 20 años, Linus Torvalds tomo la decisión de compartir su sistema operativo con el mundo. No mucho después, decidió licenciar este bajo &lt;em&gt;General Public Licence&lt;/em&gt; (GPL). Este momento histórico cambio todo en el mundo en la historia de la computación.&lt;/p&gt;
&lt;!-- TEASER_END --&gt;
&lt;p&gt;Hoy, Linux es el proyecto colaborativo mas grande en la historia de la computación, lo cual significa que el aniversario número 20 de Linux es una oportunidad para que la comunidad llegue a unirse en la celebración de este gran acontecimiento y contribuir a definir como serán los próximos 20 años de linux.&lt;/p&gt;
&lt;p&gt;Hoy Linux se encuentra en todas partes: en su teléfono, su televisor, su computador, en las películas, en su carro y muchos otros lugares. Esta en cualquier lugar porque es para todos.&lt;/p&gt;
&lt;p&gt;A continuación, el video de &lt;cite&gt;The Linux Foundation &amp;lt;https://www.linuxfoundation.org&amp;gt;&lt;/cite&gt; con motivo a los 20 años de Linux.&lt;/p&gt;
&lt;div class="youtube-video align-center"&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/5ocq6_3-nEw?rel=0&amp;amp;wmode=transparent" frameborder="0" allow="encrypted-media" allowfullscreen&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>linux</category><category>software libre</category><guid>https://www.cosmoscalibur.com/blog/20-anos-de-linux/</guid><pubDate>Sun, 10 Apr 2011 17:53:10 GMT</pubDate></item></channel></rss>