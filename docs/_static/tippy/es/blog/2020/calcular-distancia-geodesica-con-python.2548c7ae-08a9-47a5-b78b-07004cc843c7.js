selector_to_html = {"a[href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/4/4c/Azimutalprojektion-schief_kl-cropped.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>World Geodetic System</b> (<b>WGS</b>) is a standard used in cartography, geodesy, and satellite navigation including GPS. The current version, <b>WGS\u00a084</b>, defines an Earth-centered, Earth-fixed coordinate system and a geodetic datum, and also describes the associated Earth Gravitational Model (EGM) and World Magnetic Model (WMM). The standard is published and maintained by the United States National Geospatial-Intelligence Agency.</p>", "a[href^=\"https://en.wikipedia.org/wiki/World_Geodetic_System#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/4/4c/Azimutalprojektion-schief_kl-cropped.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>World Geodetic System</b> (<b>WGS</b>) is a standard used in cartography, geodesy, and satellite navigation including GPS. The current version, <b>WGS\u00a084</b>, defines an Earth-centered, Earth-fixed coordinate system and a geodetic datum, and also describes the associated Earth Gravitational Model (EGM) and World Magnetic Model (WMM). The standard is published and maintained by the United States National Geospatial-Intelligence Agency.</p>", "a[href=\"https://en.wikipedia.org/wiki/Vincenty%27s_formulae\"]": "<p><b>Vincenty's formulae</b> are two related iterative methods used in geodesy to calculate the distance between two points on the surface of a spheroid, developed by Thaddeus Vincenty (1975a). They are based on the assumption that the figure of the Earth is an oblate spheroid, and hence are more accurate than methods that assume a spherical Earth, such as great-circle distance.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Vincenty%27s_formulae#\"]": "<p><b>Vincenty's formulae</b> are two related iterative methods used in geodesy to calculate the distance between two points on the surface of a spheroid, developed by Thaddeus Vincenty (1975a). They are based on the assumption that the figure of the Earth is an oblate spheroid, and hence are more accurate than methods that assume a spherical Earth, such as great-circle distance.</p>", "a[href=\"https://en.wikipedia.org/wiki/Great-circle_distance\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Illustration_of_great-circle_distance.svg/320px-Illustration_of_great-circle_distance.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>great-circle distance</b>, <b>orthodromic distance</b>, or <b>spherical distance</b> is the distance along a great circle.</p>", "a[href^=\"https://en.wikipedia.org/wiki/Great-circle_distance#\"]": "<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Illustration_of_great-circle_distance.svg/320px-Illustration_of_great-circle_distance.svg.png\" alt=\"Wikipedia thumbnail\" style=\"float:left; margin-right:10px;\"><p>The <b>great-circle distance</b>, <b>orthodromic distance</b>, or <b>spherical distance</b> is the distance along a great circle.</p>", "a[href=\"#calculo-de-distancia\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">C\u00e1lculo de distancia<a class=\"headerlink\" href=\"#calculo-de-distancia\" title=\"Link to this heading\">#</a></h2><p>El c\u00e1lculo de la distancia sobre la Tierra debe hacerse suponiendo alguna condici\u00f3n sobre la geometr\u00eda de la Tierra. Esto es por ejemplo, suponer una esfera, un elipsoide o un plano (y no, la Tierra no es plana, pero para distancias cortas es una buena aproximaci\u00f3n). Estas suposiciones ya vienen incluidas y pueden ser parametrizadas en las bibliotecas de c\u00f3mputo.</p><p>Para el c\u00f3mputo de geod\u00e9sicas en Python, en buena medida todo se resume en <a class=\"reference external\" href=\"https://geographiclib.sourceforge.io/\">GeographicLib</a>. Tanto <a class=\"reference external\" href=\"https://gdal.org/\">GDAL</a>, <a class=\"reference external\" href=\"https://pyproj4.github.io/pyproj/stable/#\">PyProj</a> y <a class=\"reference external\" href=\"https://geopy.readthedocs.io/en/stable/#\">GeoPy</a> recurren a la implementaci\u00f3n de GeographicLib como m\u00e9todo por defecto de c\u00e1lculo.</p>", "a[href=\"#geoide-y-geodesicas\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Geoide y geod\u00e9sicas<a class=\"headerlink\" href=\"#geoide-y-geodesicas\" title=\"Link to this heading\">#</a></h2><p>\u00bfHab\u00edan escuchado antes \u201cgeoide\u201d y \u201cgeod\u00e9sica\u201d? Bueno, resulta que el concepto de distancia entre puntos es dependiente de la geometr\u00eda sobre la cual sea v\u00e1lido el desplazamiento. As\u00ed, si ubicamos dos puntos sobre la superficie de la Tierra, uno podr\u00eda pensar en tomar como distancia la separaci\u00f3n en l\u00ednea recta entre los dos puntos atravesando el interior de la Tierra, y s\u00ed, eso es una distancia pero es impr\u00e1ctica porque nadie por ahora atravesar\u00e1 el interior para desplazarse. A esta distancia la conocemos como distancia euclideana (supone una geometr\u00eda plana, como nos ense\u00f1an en el colegio y para muchos en universidad, donde Pit\u00e1goras funciona para esta cuenta).</p><p>Pues bien, si la distancia implica una restricci\u00f3n para moverse sobre una geometr\u00eda en particular, las l\u00edneas rectas no son los caminos m\u00e1s cortos (sobre el cual se define la distancia) sino un tipo de l\u00edneas que llamaremos geod\u00e9sicas. As\u00ed, la distancia sobre la superficie de la Tierra se mide sobre la geod\u00e9sica que une los dos puntos de inter\u00e9s y a esa forma superficie de referencia de la Tierra es llamada geoide.</p>", "a[href=\"#metodo-de-circulo-mayor\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">M\u00e9todo de c\u00edrculo mayor<a class=\"headerlink\" href=\"#metodo-de-circulo-mayor\" title=\"Link to this heading\">#</a></h3><p>El <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Great-circle_distance\">m\u00e9todo de c\u00edrculo mayor</a> consiste en considerar la Tierra como una esfera perfecta de radio 6371.009 km (para el sistema de coordenadas geogr\u00e1ficas <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/World_Geodetic_System#WGS84\">WGS-84</a>). Con esta aproximaci\u00f3n se puede tener un error m\u00e1ximo del 0.5%. A pesar del error, es un m\u00e9todo de c\u00e1lculo directo (es una f\u00f3rmula para reemplazar) y por ende puede obtener un resultado muy r\u00e1pido y tiene asegurado entregar siempre una aproximaci\u00f3n.</p><p>Es llamado c\u00edrculo mayor porque en una esfera sabemos que el camino m\u00e1s corto es el descrito por el c\u00edrculo de mayor radio sobre la esfera que contenga a los dos puntos.</p>", "a[href=\"#calcular-distancia-geodesica-con-python\"]": "<h1 class=\"tippy-header\" style=\"margin-top: 0;\">Calcular distancia geod\u00e9sica con Python<a class=\"headerlink\" href=\"#calcular-distancia-geodesica-con-python\" title=\"Link to this heading\">#</a></h1><p>Aunque una de las cosas que m\u00e1s ha rondado en mi desarrollo acad\u00e9mico y laboral es la programaci\u00f3n, y buena parte de los a\u00f1os en ello con Python, nunca hab\u00eda realizado una entrada al respecto en el blog (lo m\u00e1s cercano ha sido una entrada sobre <a class=\"reference internal\" href=\"../crear-documentacion-de-un-proyecto-python-con-sphinx/\"><span class=\"std std-doc\">Crear documentaci\u00f3n de un proyecto Python con Sphinx</span></a>  y <a class=\"reference internal\" href=\"../../2019/crear-contenedor-docker-aplicacion-gui-ealite/\"><span class=\"std std-doc\">Crear contenedor Docker aplicaci\u00f3n GUI - EALite</span></a>).</p><p>A partir de ahora, y usando <em>notebooks</em> compartir\u00e9 algunas entradas relacionadas con programaci\u00f3n o algunas bibliotecas espec\u00edficas. En esta ocasi\u00f3n, me interesa compartirles como calcular la distancia geod\u00e9sica entre dos lugares con GeoPy (una biblioteca Python), una de las tantas cosas que por motivos laborales he necesitado en mi exploraci\u00f3n con proyectos con sistemas de informaci\u00f3n geogr\u00e1fica y ruteos.</p>", "a[href=\"#consideraciones\"]": "<h2 class=\"tippy-header\" style=\"margin-top: 0;\">Consideraciones<a class=\"headerlink\" href=\"#consideraciones\" title=\"Link to this heading\">#</a></h2><p>La interfaz incluida en GeographicLib no me pareci\u00f3 amigable, por lo cual no la recomiendo pero su uso asegura incluir solo las funciones especializadas para el tratamiento de la distancia geod\u00e9sica. GeoPy incluye m\u00e1s utilidades pero posee una interfaz m\u00e1s simple. GDAL y PyProj poseen muchas m\u00e1s funcionalidades, por lo cual representa un aumento de almacenamiento innecesario. Esto, finalmente, para recomendar GeoPy para esta tarea (respecto a GeographicLib, a\u00fan te dar\u00e1 la opci\u00f3n de la aproximaci\u00f3n de c\u00edrculo mayor).</p><p>Respecto al m\u00e9todo, la divergencia de Vincenty para casos antinodales y la convergencia lenta en otros casos reportados, al igual que su marcado de obsolescencia en las implementaciones nos lleva a omitirlo de cualquier consideraci\u00f3n futura. La aproximaci\u00f3n de Karney posee el menor error de las 3 aproximaciones pero su tiempo de c\u00f3mputo es alto si se considera la necesidad de calcular entre una gran cantidad de pares de puntos.</p>", "a[href=\"#metodo-de-vincenty\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">M\u00e9todo de Vincenty<a class=\"headerlink\" href=\"#metodo-de-vincenty\" title=\"Link to this heading\">#</a></h3><p>El <a class=\"reference external\" href=\"https://en.wikipedia.org/wiki/Vincenty%27s_formulae\">m\u00e9todo de Vincenty</a> es un m\u00e9todo iterativo para la aproximaci\u00f3n de la distancia geod\u00e9sica sobre un elipsoide, en este caso, el elipsoide de referencia del sistema coordenado WGS-84. Este m\u00e9todo presenta problemas de convergencia entre puntos antinodales y hoy su uso no es aconsejado (GeoPy a\u00fan lo presenta en la versi\u00f3n 1.21 pero est\u00e1 marcado como obsoleto).</p>", "a[href=\"#metodo-de-karney\"]": "<h3 class=\"tippy-header\" style=\"margin-top: 0;\">M\u00e9todo de Karney<a class=\"headerlink\" href=\"#metodo-de-karney\" title=\"Link to this heading\">#</a></h3><p>Este m\u00e9todo al igual que el propuesto por Vincenty, es iterativo pero se asegura que siempre converge y con menor margen de error que Vincenty. Fue <a class=\"reference external\" href=\"https://link.springer.com/article/10.1007/s00190-012-0578-z\">propuesto en 2013</a>.</p><p>La implementaci\u00f3n disponible en GeoPy corresponde a la implementaci\u00f3n C++ de GeographicLib.</p>"}
skip_classes = ["headerlink", "sd-stretched-link"]

window.onload = function () {
    for (const [select, tip_html] of Object.entries(selector_to_html)) {
        const links = document.querySelectorAll(`article.bd-article ${select}`);
        for (const link of links) {
            if (skip_classes.some(c => link.classList.contains(c))) {
                continue;
            }

            tippy(link, {
                content: tip_html,
                allowHTML: true,
                arrow: true,
                placement: 'auto-start', maxWidth: 500, interactive: false,

            });
        };
    };
    console.log("tippy tips loaded!");
};
